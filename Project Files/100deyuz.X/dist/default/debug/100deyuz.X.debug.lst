

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Sat Feb 24 16:01:44 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=3
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=2
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1
    55                           	psect	text42,global,reloc=2,class=CODE,delta=1
    56                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    57                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    58                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    59   000000                     
    60                           ; Generated 17/10/2023 GMT
    61                           ; 
    62                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    63                           ; All rights reserved.
    64                           ; 
    65                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    66                           ; 
    67                           ; Redistribution and use in source and binary forms, with or without modification, are
    68                           ; permitted provided that the following conditions are met:
    69                           ; 
    70                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    71                           ;        conditions and the following disclaimer.
    72                           ; 
    73                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    74                           ;        of conditions and the following disclaimer in the documentation and/or other
    75                           ;        materials provided with the distribution. Publication is not required when
    76                           ;        this file is used in an embedded application.
    77                           ; 
    78                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    79                           ;        software without specific prior written permission.
    80                           ; 
    81                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    82                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    83                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    84                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    85                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    86                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    87                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    88                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    89                           ; 
    90                           ; 
    91                           ; Code-generator required, PIC18F4550 Definitions
    92                           ; 
    93                           ; SFR Addresses
    94   000000                     
    95                           	psect	idataBANK0
    96   0038DC                     __pidataBANK0:
    97                           	callstack 0
    98                           
    99                           ;initializer for _line1
   100   0038DC  36                 	db	low STR_1
   101                           
   102                           ;initializer for _BackLight_State
   103   0038DD  08                 	db	8
   104                           
   105                           	psect	smallconst
   106   000800                     __psmallconst:
   107                           	callstack 0
   108   000800  00                 	db	0
   109   000801  9E26               	dw	40486
   110   000803  3E78               	dw	15992
   111   000805                     __end_of_Lg4:
   112                           	callstack 0
   113   000805  E9EE               	dw	59886
   114   000807  3E91               	dw	16017
   115   000809                     __end_of_Lg3:
   116                           	callstack 0
   117   000809  CE13               	dw	52755
   118   00080B  3ECC               	dw	16076
   119   00080D                     __end_of_Lg2:
   120                           	callstack 0
   121   00080D  AAAA               	dw	43690
   122   00080F  3F2A               	dw	16170
   123   000811                     __end_of_Lg1:
   124                           	callstack 0
   125   000811  F7D1               	dw	63441
   126   000813  3717               	dw	14103
   127   000815                     __end_of_ln2_lo:
   128                           	callstack 0
   129   000815  7180               	dw	29056
   130   000817  3F31               	dw	16177
   131   000819                     __end_of_ln2_hi:
   132                           	callstack 0
   133   000000                     _ADCON0	set	4034
   134   000000                     _ADRESL	set	4035
   135   000000                     _ADRESH	set	4036
   136   000000                     _ADCON0bits	set	4034
   137   000000                     _GO	set	32273
   138   000000                     _ADON	set	32272
   139   000000                     _RCEN	set	32299
   140   000000                     _ACKSTAT	set	32302
   141   000000                     _ACKEN	set	32300
   142   000000                     _ACKDT	set	32301
   143   000000                     _PEN	set	32298
   144   000000                     _RSEN	set	32297
   145   000000                     _SEN	set	32296
   146   000000                     _TRISA	set	3986
   147   000000                     _TRISBbits	set	3987
   148   000000                     _SSPCON2	set	4037
   149   000000                     _SSPCON1	set	4038
   150   000000                     _SSPBUF	set	4041
   151   000000                     _SSPADD	set	4040
   152   000000                     _SSPSTAT	set	4039
   153   000000                     _SSPIF	set	31987
   154   000000                     _ADCON2	set	4032
   155   000000                     _ADCON1	set	4033
   156   000819                     STR_3:
   157   000819  4F                 	db	79	;'O'
   158   00081A  55                 	db	85	;'U'
   159   00081B  54                 	db	84	;'T'
   160   00081C  3A                 	db	58	;':'
   161   00081D  20                 	db	32
   162   00081E  25                 	db	37
   163   00081F  2E                 	db	46
   164   000820  32                 	db	50	;'2'
   165   000821  66                 	db	102	;'f'
   166   000822  25                 	db	37
   167   000823  63                 	db	99	;'c'
   168   000824  43                 	db	67	;'C'
   169   000825  20                 	db	32
   170   000826  20                 	db	32
   171   000827  00                 	db	0
   172   000828                     STR_2:
   173   000828  49                 	db	73	;'I'
   174   000829  4E                 	db	78	;'N'
   175   00082A  3A                 	db	58	;':'
   176   00082B  20                 	db	32
   177   00082C  25                 	db	37
   178   00082D  2E                 	db	46
   179   00082E  32                 	db	50	;'2'
   180   00082F  66                 	db	102	;'f'
   181   000830  25                 	db	37
   182   000831  63                 	db	99	;'c'
   183   000832  43                 	db	67	;'C'
   184   000833  20                 	db	32
   185   000834  20                 	db	32
   186   000835  00                 	db	0
   187   000836                     STR_1:
   188   000836  50                 	db	80	;'P'
   189   000837  52                 	db	82	;'R'
   190   000838  4F                 	db	79	;'O'
   191   000839  42                 	db	66	;'B'
   192   00083A  45                 	db	69	;'E'
   193   00083B  2D                 	db	45
   194   00083C  31                 	db	49	;'1'
   195   00083D  20                 	db	32
   196   00083E  54                 	db	84	;'T'
   197   00083F  45                 	db	69	;'E'
   198   000840  4D                 	db	77	;'M'
   199   000841  50                 	db	80	;'P'
   200   000842  00                 	db	0
   201   000843                     STR_4:
   202   000843  69                 	db	105	;'i'
   203   000844  6E                 	db	110	;'n'
   204   000845  66                 	db	102	;'f'
   205   000846  00                 	db	0
   206   000847                     STR_7:
   207   000847  6E                 	db	110	;'n'
   208   000848  61                 	db	97	;'a'
   209   000849  6E                 	db	110	;'n'
   210   00084A  00                 	db	0
   211   00084B  00                 	db	0	; dummy byte at the end
   212   000000                     
   213                           ; #config settings
   214                           
   215                           	psect	cinit
   216   0036D0                     __pcinit:
   217                           	callstack 0
   218   0036D0                     start_initialization:
   219                           	callstack 0
   220   0036D0                     __initialization:
   221                           	callstack 0
   222                           
   223                           ; Initialize objects allocated to BANK0 (2 bytes)
   224                           ; load TBLPTR registers with __pidataBANK0
   225   0036D0  0EDC               	movlw	low __pidataBANK0
   226   0036D2  6EF6               	movwf	tblptrl,c
   227   0036D4  0E38               	movlw	high __pidataBANK0
   228   0036D6  6EF7               	movwf	tblptrh,c
   229   0036D8  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   230   0036DA  6EF8               	movwf	tblptru,c
   231   0036DC  0009               	tblrd		*+	;fetch initializer
   232   0036DE  CFF5 F0F6          	movff	tablat,__pdataBANK0
   233   0036E2  0009               	tblrd		*+	;fetch initializer
   234   0036E4  CFF5 F0F7          	movff	tablat,__pdataBANK0+1
   235                           
   236                           ; Clear objects allocated to BANK1 (112 bytes)
   237   0036E8  EE01  F000         	lfsr	0,__pbssBANK1
   238   0036EC  0E70               	movlw	112
   239   0036EE                     clear_0:
   240   0036EE  6AEE               	clrf	postinc0,c
   241   0036F0  06E8               	decf	wreg,f,c
   242   0036F2  E1FD               	bnz	clear_0
   243                           
   244                           ; Clear objects allocated to BANK0 (61 bytes)
   245   0036F4  EE00  F0B9         	lfsr	0,__pbssBANK0
   246   0036F8  0E3D               	movlw	61
   247   0036FA                     clear_1:
   248   0036FA  6AEE               	clrf	postinc0,c
   249   0036FC  06E8               	decf	wreg,f,c
   250   0036FE  E1FD               	bnz	clear_1
   251   003700                     end_of_initialization:
   252                           	callstack 0
   253   003700                     __end_of__initialization:
   254                           	callstack 0
   255   003700  0E00               	movlw	low (__Lmediumconst shr (0+16))
   256   003702  6EF8               	movwf	tblptru,c
   257   003704  0100               	movlb	0
   258   003706  EFBE  F01B         	goto	_main	;jump to C main() function
   259                           
   260                           	psect	bssBANK0
   261   0000B9                     __pbssBANK0:
   262                           	callstack 0
   263   0000B9                     floorf@F521:
   264                           	callstack 0
   265   0000B9                     	ds	4
   266   0000BD                     ___fpclassifyf@F465:
   267                           	callstack 0
   268   0000BD                     	ds	4
   269   0000C1                     logf@F472:
   270                           	callstack 0
   271   0000C1                     	ds	4
   272   0000C5                     _Temperature:
   273                           	callstack 0
   274   0000C5                     	ds	4
   275   0000C9                     _width:
   276                           	callstack 0
   277   0000C9                     	ds	2
   278   0000CB                     _prec:
   279                           	callstack 0
   280   0000CB                     	ds	2
   281   0000CD                     _errno:
   282                           	callstack 0
   283   0000CD                     	ds	2
   284   0000CF                     _AN1RES:
   285                           	callstack 0
   286   0000CF                     	ds	2
   287   0000D1                     _AN0RES:
   288                           	callstack 0
   289   0000D1                     	ds	2
   290   0000D3                     _flags:
   291                           	callstack 0
   292   0000D3                     	ds	1
   293   0000D4                     _i2c_add:
   294                           	callstack 0
   295   0000D4                     	ds	1
   296   0000D5                     _RS:
   297                           	callstack 0
   298   0000D5                     	ds	1
   299   0000D6                     _TempinSTR:
   300                           	callstack 0
   301   0000D6                     	ds	32
   302                           
   303                           	psect	dataBANK0
   304   0000F6                     __pdataBANK0:
   305                           	callstack 0
   306   0000F6                     _line1:
   307                           	callstack 0
   308   0000F6                     	ds	1
   309   0000F7                     _BackLight_State:
   310                           	callstack 0
   311   0000F7                     	ds	1
   312                           
   313                           	psect	bssBANK1
   314   000100                     __pbssBANK1:
   315                           	callstack 0
   316   000100                     _dbuf:
   317                           	callstack 0
   318   000100                     	ds	80
   319   000150                     _TempoutSTR:
   320                           	callstack 0
   321   000150                     	ds	32
   322                           
   323                           	psect	cstackBANK0
   324   000060                     __pcstackBANK0:
   325                           	callstack 0
   326   000060                     efgtoa@ne:
   327                           	callstack 0
   328   000060                     logf@R:
   329                           	callstack 0
   330                           
   331                           ; 4 bytes @ 0x0
   332   000060                     	ds	2
   333   000062                     efgtoa@p:
   334                           	callstack 0
   335                           
   336                           ; 2 bytes @ 0x2
   337   000062                     	ds	2
   338   000064                     efgtoa@t:
   339                           	callstack 0
   340   000064                     logf@t1:
   341                           	callstack 0
   342                           
   343                           ; 4 bytes @ 0x4
   344   000064                     	ds	2
   345   000066                     _efgtoa$863:
   346                           	callstack 0
   347                           
   348                           ; 2 bytes @ 0x6
   349   000066                     	ds	2
   350   000068                     efgtoa@pp:
   351                           	callstack 0
   352   000068                     logf@t2:
   353                           	callstack 0
   354                           
   355                           ; 4 bytes @ 0x8
   356   000068                     	ds	1
   357   000069                     efgtoa@mode:
   358                           	callstack 0
   359                           
   360                           ; 1 bytes @ 0x9
   361   000069                     	ds	1
   362   00006A                     efgtoa@nmode:
   363                           	callstack 0
   364                           
   365                           ; 1 bytes @ 0xA
   366   00006A                     	ds	1
   367   00006B                     efgtoa@d:
   368                           	callstack 0
   369                           
   370                           ; 2 bytes @ 0xB
   371   00006B                     	ds	1
   372   00006C                     _logf$1219:
   373                           	callstack 0
   374                           
   375                           ; 4 bytes @ 0xC
   376   00006C                     	ds	1
   377   00006D                     efgtoa@m:
   378                           	callstack 0
   379                           
   380                           ; 2 bytes @ 0xD
   381   00006D                     	ds	2
   382   00006F                     efgtoa@e:
   383                           	callstack 0
   384                           
   385                           ; 2 bytes @ 0xF
   386   00006F                     	ds	1
   387   000070                     _logf$1220:
   388                           	callstack 0
   389                           
   390                           ; 4 bytes @ 0x10
   391   000070                     	ds	1
   392   000071                     efgtoa@w:
   393                           	callstack 0
   394                           
   395                           ; 2 bytes @ 0x11
   396   000071                     	ds	2
   397   000073                     efgtoa@ou:
   398                           	callstack 0
   399                           
   400                           ; 4 bytes @ 0x13
   401   000073                     	ds	1
   402   000074                     _logf$1221:
   403                           	callstack 0
   404                           
   405                           ; 4 bytes @ 0x14
   406   000074                     	ds	3
   407   000077                     efgtoa@i:
   408                           	callstack 0
   409                           
   410                           ; 2 bytes @ 0x17
   411   000077                     	ds	1
   412   000078                     _logf$1222:
   413                           	callstack 0
   414                           
   415                           ; 4 bytes @ 0x18
   416   000078                     	ds	1
   417   000079                     efgtoa@h:
   418                           	callstack 0
   419                           
   420                           ; 4 bytes @ 0x19
   421   000079                     	ds	3
   422   00007C                     logf@k:
   423                           	callstack 0
   424                           
   425                           ; 2 bytes @ 0x1C
   426   00007C                     	ds	1
   427   00007D                     efgtoa@l:
   428                           	callstack 0
   429                           
   430                           ; 4 bytes @ 0x1D
   431   00007D                     	ds	1
   432   00007E                     logf@hfsq:
   433                           	callstack 0
   434                           
   435                           ; 4 bytes @ 0x1E
   436   00007E                     	ds	3
   437   000081                     efgtoa@sign:
   438                           	callstack 0
   439                           
   440                           ; 1 bytes @ 0x21
   441   000081                     	ds	1
   442   000082                     logf@dk:
   443                           	callstack 0
   444   000082                     efgtoa@g:
   445                           	callstack 0
   446                           
   447                           ; 4 bytes @ 0x22
   448   000082                     	ds	4
   449   000086                     efgtoa@n:
   450                           	callstack 0
   451   000086                     logf@s:
   452                           	callstack 0
   453                           
   454                           ; 4 bytes @ 0x26
   455   000086                     	ds	2
   456   000088                     efgtoa@u:
   457                           	callstack 0
   458                           
   459                           ; 4 bytes @ 0x28
   460   000088                     	ds	2
   461   00008A                     logf@z:
   462                           	callstack 0
   463                           
   464                           ; 4 bytes @ 0x2A
   465   00008A                     	ds	2
   466   00008C                     vfpfcnvrt@fp:
   467                           	callstack 0
   468                           
   469                           ; 1 bytes @ 0x2C
   470   00008C                     	ds	1
   471   00008D                     vfpfcnvrt@fmt:
   472                           	callstack 0
   473                           
   474                           ; 1 bytes @ 0x2D
   475   00008D                     	ds	1
   476   00008E                     vfpfcnvrt@ap:
   477                           	callstack 0
   478   00008E                     logf@w:
   479                           	callstack 0
   480                           
   481                           ; 4 bytes @ 0x2E
   482   00008E                     	ds	1
   483   00008F                     vfpfcnvrt@convarg:
   484                           	callstack 0
   485                           
   486                           ; 4 bytes @ 0x2F
   487   00008F                     	ds	3
   488   000092                     _logf$1218:
   489                           	callstack 0
   490                           
   491                           ; 4 bytes @ 0x32
   492   000092                     	ds	1
   493   000093                     vfpfcnvrt@c:
   494                           	callstack 0
   495                           
   496                           ; 1 bytes @ 0x33
   497   000093                     	ds	1
   498   000094                     vfpfcnvrt@cp:
   499                           	callstack 0
   500                           
   501                           ; 1 bytes @ 0x34
   502   000094                     	ds	1
   503   000095                     ?_vfprintf:
   504                           	callstack 0
   505   000095                     vfprintf@fp:
   506                           	callstack 0
   507                           
   508                           ; 1 bytes @ 0x35
   509   000095                     	ds	1
   510   000096                     vfprintf@fmt:
   511                           	callstack 0
   512   000096                     logf@ux:
   513                           	callstack 0
   514                           
   515                           ; 4 bytes @ 0x36
   516   000096                     	ds	1
   517   000097                     vfprintf@ap:
   518                           	callstack 0
   519                           
   520                           ; 1 bytes @ 0x37
   521   000097                     	ds	1
   522   000098                     vfprintf@cfmt:
   523                           	callstack 0
   524                           
   525                           ; 1 bytes @ 0x38
   526   000098                     	ds	1
   527   000099                     ?_sprintf:
   528                           	callstack 0
   529   000099                     sprintf@s:
   530                           	callstack 0
   531                           
   532                           ; 2 bytes @ 0x39
   533   000099                     	ds	1
   534   00009A                     _termistorin$1212:
   535                           	callstack 0
   536                           
   537                           ; 4 bytes @ 0x3A
   538   00009A                     	ds	1
   539   00009B                     sprintf@fmt:
   540                           	callstack 0
   541                           
   542                           ; 1 bytes @ 0x3B
   543   00009B                     	ds	3
   544   00009E                     _termistorin$1213:
   545                           	callstack 0
   546                           
   547                           ; 4 bytes @ 0x3E
   548   00009E                     	ds	4
   549   0000A2                     sprintf@ap:
   550                           	callstack 0
   551   0000A2                     _termistorin$1214:
   552                           	callstack 0
   553                           
   554                           ; 4 bytes @ 0x42
   555   0000A2                     	ds	1
   556   0000A3                     sprintf@f:
   557                           	callstack 0
   558                           
   559                           ; 12 bytes @ 0x43
   560   0000A3                     	ds	3
   561   0000A6                     termistorin@tempin:
   562                           	callstack 0
   563                           
   564                           ; 4 bytes @ 0x46
   565   0000A6                     	ds	9
   566   0000AF                     menu@tempin:
   567                           	callstack 0
   568                           
   569                           ; 4 bytes @ 0x4F
   570   0000AF                     	ds	4
   571   0000B3                     menu@tempout:
   572                           	callstack 0
   573                           
   574                           ; 4 bytes @ 0x53
   575   0000B3                     	ds	4
   576   0000B7                     ??_main:
   577                           
   578                           ; 1 bytes @ 0x57
   579   0000B7                     	ds	2
   580                           
   581                           	psect	cstackCOMRAM
   582   000001                     __pcstackCOMRAM:
   583                           	callstack 0
   584   000001                     ??_I2C_Master_Wait:
   585   000001                     ?___fpclassifyf:
   586                           	callstack 0
   587   000001                     ?___wmul:
   588                           	callstack 0
   589   000001                     ?___flmul:
   590                           	callstack 0
   591   000001                     ?_labs:
   592                           	callstack 0
   593   000001                     ?___aldiv:
   594                           	callstack 0
   595   000001                     ?___flneg:
   596                           	callstack 0
   597   000001                     ?___fltol:
   598                           	callstack 0
   599   000001                     ___wmul@multiplier:
   600                           	callstack 0
   601   000001                     memcpy@d1:
   602                           	callstack 0
   603   000001                     fputc@c:
   604                           	callstack 0
   605   000001                     strcpy@dest:
   606                           	callstack 0
   607   000001                     ___aldiv@dividend:
   608                           	callstack 0
   609   000001                     ___fleq@ff1:
   610                           	callstack 0
   611   000001                     ___flneg@f1:
   612                           	callstack 0
   613   000001                     ___fltol@f1:
   614                           	callstack 0
   615   000001                     ___flmul@b:
   616                           	callstack 0
   617   000001                     ___fpclassifyf@x:
   618                           	callstack 0
   619   000001                     labs@a:
   620                           	callstack 0
   621                           
   622                           ; 4 bytes @ 0x0
   623   000001                     	ds	1
   624   000002                     I2C_Master_Write@data:
   625                           	callstack 0
   626                           
   627                           ; 1 bytes @ 0x1
   628   000002                     	ds	1
   629   000003                     IO_Expander_Write@Data:
   630                           	callstack 0
   631   000003                     fputc@fp:
   632                           	callstack 0
   633   000003                     strcpy@src:
   634                           	callstack 0
   635   000003                     ___wmul@multiplicand:
   636                           	callstack 0
   637   000003                     memcpy@s1:
   638                           	callstack 0
   639                           
   640                           ; 2 bytes @ 0x2
   641   000003                     	ds	1
   642   000004                     ??_fputc:
   643   000004                     ??_strcpy:
   644   000004                     LCD_Write_4Bit@Nibble:
   645                           	callstack 0
   646                           
   647                           ; 1 bytes @ 0x3
   648   000004                     	ds	1
   649   000005                     ??___fpclassifyf:
   650   000005                     ??_labs:
   651   000005                     ??___fltol:
   652   000005                     LCD_CMD@CMD:
   653                           	callstack 0
   654   000005                     LCD_Write_Char@Data:
   655                           	callstack 0
   656   000005                     ___wmul@product:
   657                           	callstack 0
   658   000005                     memcpy@n:
   659                           	callstack 0
   660   000005                     strcpy@d:
   661                           	callstack 0
   662   000005                     ___aldiv@divisor:
   663                           	callstack 0
   664   000005                     ___fleq@ff2:
   665                           	callstack 0
   666   000005                     ___flmul@a:
   667                           	callstack 0
   668                           
   669                           ; 4 bytes @ 0x4
   670   000005                     	ds	1
   671   000006                     ??_LCD_Init:
   672   000006                     LCD_Set_Cursor@COL:
   673                           	callstack 0
   674   000006                     LCD_Write_String@Str:
   675                           	callstack 0
   676                           
   677                           ; 2 bytes @ 0x5
   678   000006                     	ds	1
   679   000007                     ?_read_prec_or_width:
   680                           	callstack 0
   681   000007                     LCD_Init@I2C_Add:
   682                           	callstack 0
   683   000007                     LCD_Set_Cursor@ROW:
   684                           	callstack 0
   685   000007                     read_prec_or_width@fmt:
   686                           	callstack 0
   687   000007                     memcpy@tmp:
   688                           	callstack 0
   689                           
   690                           ; 1 bytes @ 0x6
   691   000007                     	ds	1
   692   000008                     read_prec_or_width@ap:
   693                           	callstack 0
   694   000008                     LCD_Write_String@i:
   695                           	callstack 0
   696   000008                     memcpy@d:
   697                           	callstack 0
   698                           
   699                           ; 2 bytes @ 0x7
   700   000008                     	ds	1
   701   000009                     ??___flmul:
   702   000009                     ??___fleq:
   703   000009                     ___aldiv@counter:
   704                           	callstack 0
   705   000009                     ___fltol@sign1:
   706                           	callstack 0
   707   000009                     read_prec_or_width@c:
   708                           	callstack 0
   709   000009                     ___fpclassifyf@e:
   710                           	callstack 0
   711   000009                     fputs@s:
   712                           	callstack 0
   713                           
   714                           ; 2 bytes @ 0x8
   715   000009                     	ds	1
   716   00000A                     ___aldiv@sign:
   717                           	callstack 0
   718   00000A                     ___fltol@exp1:
   719                           	callstack 0
   720   00000A                     read_prec_or_width@n:
   721                           	callstack 0
   722   00000A                     memcpy@s:
   723                           	callstack 0
   724                           
   725                           ; 2 bytes @ 0x9
   726   00000A                     	ds	1
   727   00000B                     fputs@fp:
   728                           	callstack 0
   729   00000B                     ___aldiv@quotient:
   730                           	callstack 0
   731   00000B                     ___fpclassifyf@u:
   732                           	callstack 0
   733                           
   734                           ; 4 bytes @ 0xA
   735   00000B                     	ds	1
   736   00000C                     fputs@c:
   737                           	callstack 0
   738                           
   739                           ; 1 bytes @ 0xB
   740   00000C                     	ds	1
   741   00000D                     ___flmul@sign:
   742                           	callstack 0
   743   00000D                     fputs@i:
   744                           	callstack 0
   745                           
   746                           ; 2 bytes @ 0xC
   747   00000D                     	ds	1
   748   00000E                     ___flmul@aexp:
   749                           	callstack 0
   750                           
   751                           ; 1 bytes @ 0xD
   752   00000E                     	ds	1
   753   00000F                     ?___xxtofl:
   754                           	callstack 0
   755   00000F                     pad@fp:
   756                           	callstack 0
   757   00000F                     ___flmul@grs:
   758                           	callstack 0
   759   00000F                     ___xxtofl@val:
   760                           	callstack 0
   761                           
   762                           ; 4 bytes @ 0xE
   763   00000F                     	ds	1
   764   000010                     pad@buf:
   765                           	callstack 0
   766                           
   767                           ; 2 bytes @ 0xF
   768   000010                     	ds	2
   769   000012                     pad@p:
   770                           	callstack 0
   771                           
   772                           ; 2 bytes @ 0x11
   773   000012                     	ds	1
   774   000013                     ??___xxtofl:
   775   000013                     ___flmul@bexp:
   776                           	callstack 0
   777                           
   778                           ; 1 bytes @ 0x12
   779   000013                     	ds	1
   780   000014                     ??_pad:
   781   000014                     ___flmul@prod:
   782                           	callstack 0
   783                           
   784                           ; 4 bytes @ 0x13
   785   000014                     	ds	1
   786   000015                     pad@i:
   787                           	callstack 0
   788                           
   789                           ; 2 bytes @ 0x14
   790   000015                     	ds	2
   791   000017                     ___xxtofl@sign:
   792                           	callstack 0
   793                           
   794                           ; 1 bytes @ 0x16
   795   000017                     	ds	1
   796   000018                     ___xxtofl@exp:
   797                           	callstack 0
   798   000018                     ___flmul@temp:
   799                           	callstack 0
   800                           
   801                           ; 2 bytes @ 0x17
   802   000018                     	ds	1
   803   000019                     ___xxtofl@arg:
   804                           	callstack 0
   805                           
   806                           ; 4 bytes @ 0x18
   807   000019                     	ds	1
   808   00001A                     ?___fladd:
   809                           	callstack 0
   810   00001A                     ___flge@ff1:
   811                           	callstack 0
   812   00001A                     ___fladd@b:
   813                           	callstack 0
   814                           
   815                           ; 4 bytes @ 0x19
   816   00001A                     	ds	4
   817   00001E                     ___flge@ff2:
   818                           	callstack 0
   819   00001E                     ___fladd@a:
   820                           	callstack 0
   821                           
   822                           ; 4 bytes @ 0x1D
   823   00001E                     	ds	4
   824   000022                     ??___fladd:
   825   000022                     ??___flge:
   826                           
   827                           ; 1 bytes @ 0x21
   828   000022                     	ds	4
   829   000026                     ___fladd@signs:
   830                           	callstack 0
   831                           
   832                           ; 1 bytes @ 0x25
   833   000026                     	ds	1
   834   000027                     ___fladd@aexp:
   835                           	callstack 0
   836                           
   837                           ; 1 bytes @ 0x26
   838   000027                     	ds	1
   839   000028                     ___fladd@bexp:
   840                           	callstack 0
   841                           
   842                           ; 1 bytes @ 0x27
   843   000028                     	ds	1
   844   000029                     ___fladd@grs:
   845                           	callstack 0
   846                           
   847                           ; 1 bytes @ 0x28
   848   000029                     	ds	1
   849   00002A                     ?___fldiv:
   850                           	callstack 0
   851   00002A                     ?___flsub:
   852                           	callstack 0
   853   00002A                     ___flsub@b:
   854                           	callstack 0
   855   00002A                     ___fldiv@b:
   856                           	callstack 0
   857                           
   858                           ; 4 bytes @ 0x29
   859   00002A                     	ds	4
   860   00002E                     ___flsub@a:
   861                           	callstack 0
   862   00002E                     ___fldiv@a:
   863                           	callstack 0
   864                           
   865                           ; 4 bytes @ 0x2D
   866   00002E                     	ds	4
   867   000032                     ??___fldiv:
   868   000032                     
   869                           ; 1 bytes @ 0x31
   870   000032                     	ds	4
   871   000036                     ___fldiv@rem:
   872                           	callstack 0
   873                           
   874                           ; 4 bytes @ 0x35
   875   000036                     	ds	4
   876   00003A                     ___fldiv@sign:
   877                           	callstack 0
   878                           
   879                           ; 1 bytes @ 0x39
   880   00003A                     	ds	1
   881   00003B                     ___fldiv@new_exp:
   882                           	callstack 0
   883                           
   884                           ; 2 bytes @ 0x3A
   885   00003B                     	ds	2
   886   00003D                     ___fldiv@grs:
   887                           	callstack 0
   888                           
   889                           ; 4 bytes @ 0x3C
   890   00003D                     	ds	4
   891   000041                     ___fldiv@bexp:
   892                           	callstack 0
   893                           
   894                           ; 1 bytes @ 0x40
   895   000041                     	ds	1
   896   000042                     ___fldiv@aexp:
   897                           	callstack 0
   898                           
   899                           ; 1 bytes @ 0x41
   900   000042                     	ds	1
   901   000043                     ?_logf:
   902                           	callstack 0
   903   000043                     ?_floorf:
   904                           	callstack 0
   905   000043                     logf@x:
   906                           	callstack 0
   907   000043                     floorf@x:
   908                           	callstack 0
   909                           
   910                           ; 4 bytes @ 0x42
   911   000043                     	ds	4
   912   000047                     ??_logf:
   913   000047                     ??_floorf:
   914                           
   915                           ; 1 bytes @ 0x46
   916   000047                     	ds	6
   917   00004D                     ?_termistorin:
   918                           	callstack 0
   919   00004D                     termistorin@AN0RES:
   920                           	callstack 0
   921   00004D                     floorf@m:
   922                           	callstack 0
   923                           
   924                           ; 4 bytes @ 0x4C
   925   00004D                     	ds	4
   926   000051                     floorf@e:
   927                           	callstack 0
   928                           
   929                           ; 2 bytes @ 0x50
   930   000051                     	ds	2
   931   000053                     floorf@u:
   932                           	callstack 0
   933                           
   934                           ; 4 bytes @ 0x52
   935   000053                     	ds	4
   936   000057                     efgtoa@fp:
   937                           	callstack 0
   938                           
   939                           ; 1 bytes @ 0x56
   940   000057                     	ds	1
   941   000058                     efgtoa@f:
   942                           	callstack 0
   943                           
   944                           ; 4 bytes @ 0x57
   945   000058                     	ds	4
   946   00005C                     efgtoa@c:
   947                           	callstack 0
   948                           
   949                           ; 1 bytes @ 0x5B
   950   00005C                     	ds	1
   951   00005D                     ??_efgtoa:
   952                           
   953                           ; 1 bytes @ 0x5C
   954   00005D                     	ds	2
   955   00005F                     ??_vfpfcnvrt:
   956                           
   957                           ; 1 bytes @ 0x5E
   958   00005F                     	ds	1
   959   000060                     
   960                           ; 1 bytes @ 0x5F
   961 ;;
   962 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   963 ;;
   964 ;; *************** function _main *****************
   965 ;; Defined at:
   966 ;;		line 65 in file "newmain1.c"
   967 ;; Parameters:    Size  Location     Type
   968 ;;		None
   969 ;; Auto vars:     Size  Location     Type
   970 ;;		None
   971 ;; Return value:  Size  Location     Type
   972 ;;                  1    wreg      void 
   973 ;; Registers used:
   974 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   975 ;; Tracked objects:
   976 ;;		On entry : 0/0
   977 ;;		On exit  : 0/0
   978 ;;		Unchanged: 0/0
   979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   980 ;;      Params:         0       0       0       0       0       0       0       0       0
   981 ;;      Locals:         0       0       0       0       0       0       0       0       0
   982 ;;      Temps:          0       2       0       0       0       0       0       0       0
   983 ;;      Totals:         0       2       0       0       0       0       0       0       0
   984 ;;Total ram usage:        2 bytes
   985 ;; Hardware stack levels required when called: 9
   986 ;; This function calls:
   987 ;;		_ADC_Init
   988 ;;		_I2C_Master_Init
   989 ;;		_LCD_Clear
   990 ;;		_LCD_Init
   991 ;;		_menu
   992 ;; This function is called by:
   993 ;;		Startup code after reset
   994 ;; This function uses a non-reentrant model
   995 ;;
   996                           
   997                           	psect	text0
   998   00377C                     __ptext0:
   999                           	callstack 0
  1000   00377C                     _main:
  1001                           	callstack 22
  1002   00377C                     
  1003                           ;newmain1.c: 66:     _delay((unsigned long)((300)*(4000000/4000.0)));
  1004   00377C  0E02               	movlw	2
  1005   00377E  0100               	movlb	0	; () banked
  1006   003780  6FB8               	movwf	(??_main+1)& (0+255),b
  1007   003782  0E86               	movlw	134
  1008   003784  6FB7               	movwf	??_main& (0+255),b
  1009   003786  0E99               	movlw	153
  1010   003788                     u5617:
  1011   003788  2EE8               	decfsz	wreg,f,c
  1012   00378A  D7FE               	bra	u5617
  1013   00378C  2FB7               	decfsz	??_main& (0+255),f,b
  1014   00378E  D7FC               	bra	u5617
  1015   003790  2FB8               	decfsz	(??_main+1)& (0+255),f,b
  1016   003792  D7FA               	bra	u5617
  1017   003794                     
  1018                           ;newmain1.c: 67:     ADC_Init();
  1019   003794  EC54  F01C         	call	_ADC_Init	;wreg free
  1020   003798                     
  1021                           ;newmain1.c: 68:     I2C_Master_Init();
  1022   003798  EC49  F01C         	call	_I2C_Master_Init	;wreg free
  1023   00379C                     
  1024                           ;newmain1.c: 69:     LCD_Init(0X4E);
  1025   00379C  0E4E               	movlw	78
  1026   00379E  EC4C  F018         	call	_LCD_Init
  1027   0037A2                     
  1028                           ;newmain1.c: 70:     LCD_Clear();
  1029   0037A2  EC5E  F01C         	call	_LCD_Clear	;wreg free
  1030   0037A6                     l4955:
  1031                           
  1032                           ;newmain1.c: 72:         menu();
  1033   0037A6  EC10  F019         	call	_menu	;wreg free
  1034   0037AA  EFD3  F01B         	goto	l4955
  1035   0037AE  EF00  F000         	goto	start
  1036   0037B2                     __end_of_main:
  1037                           	callstack 0
  1038                           
  1039 ;; *************** function _menu *****************
  1040 ;; Defined at:
  1041 ;;		line 53 in file "newmain1.c"
  1042 ;; Parameters:    Size  Location     Type
  1043 ;;		None
  1044 ;; Auto vars:     Size  Location     Type
  1045 ;;  tempout         4   83[BANK0 ] void 
  1046 ;;  tempin          4   79[BANK0 ] void 
  1047 ;; Return value:  Size  Location     Type
  1048 ;;                  1    wreg      void 
  1049 ;; Registers used:
  1050 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1051 ;; Tracked objects:
  1052 ;;		On entry : 0/0
  1053 ;;		On exit  : 0/0
  1054 ;;		Unchanged: 0/0
  1055 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1056 ;;      Params:         0       0       0       0       0       0       0       0       0
  1057 ;;      Locals:         0       8       0       0       0       0       0       0       0
  1058 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1059 ;;      Totals:         0       8       0       0       0       0       0       0       0
  1060 ;;Total ram usage:        8 bytes
  1061 ;; Hardware stack levels used: 1
  1062 ;; Hardware stack levels required when called: 8
  1063 ;; This function calls:
  1064 ;;		_LCD_Set_Cursor
  1065 ;;		_LCD_Write_String
  1066 ;;		_sprintf
  1067 ;;		_termistorin
  1068 ;; This function is called by:
  1069 ;;		_main
  1070 ;; This function uses a non-reentrant model
  1071 ;;
  1072                           
  1073                           	psect	text1
  1074   003220                     __ptext1:
  1075                           	callstack 0
  1076   003220                     _menu:
  1077                           	callstack 22
  1078   003220                     
  1079                           ;newmain1.c: 54:     double tempin = termistorin(AN0RES);
  1080   003220  0E00               	movlw	0
  1081   003222  6E4E               	movwf	(termistorin@AN0RES+1)^0,c
  1082   003224  0E00               	movlw	0
  1083   003226  6E4D               	movwf	termistorin@AN0RES^0,c
  1084   003228  EC85  F014         	call	_termistorin	;wreg free
  1085   00322C  C04D  F0AF         	movff	?_termistorin,menu@tempin
  1086   003230  C04E  F0B0         	movff	?_termistorin+1,menu@tempin+1
  1087   003234  C04F  F0B1         	movff	?_termistorin+2,menu@tempin+2
  1088   003238  C050  F0B2         	movff	?_termistorin+3,menu@tempin+3
  1089                           
  1090                           ;newmain1.c: 55:     double tempout = termistorin(AN1RES);
  1091   00323C  0E00               	movlw	0
  1092   00323E  6E4E               	movwf	(termistorin@AN0RES+1)^0,c
  1093   003240  0E00               	movlw	0
  1094   003242  6E4D               	movwf	termistorin@AN0RES^0,c
  1095   003244  EC85  F014         	call	_termistorin	;wreg free
  1096   003248  C04D  F0B3         	movff	?_termistorin,menu@tempout
  1097   00324C  C04E  F0B4         	movff	?_termistorin+1,menu@tempout+1
  1098   003250  C04F  F0B5         	movff	?_termistorin+2,menu@tempout+2
  1099   003254  C050  F0B6         	movff	?_termistorin+3,menu@tempout+3
  1100   003258                     
  1101                           ;newmain1.c: 56:     sprintf(TempinSTR, "IN: %.2f%cC  ",tempin,0xdf);
  1102   003258  0ED6               	movlw	low _TempinSTR
  1103   00325A  0100               	movlb	0	; () banked
  1104   00325C  6F99               	movwf	sprintf@s& (0+255),b
  1105   00325E  6B9A               	clrf	(sprintf@s+1)& (0+255),b
  1106   003260  0E28               	movlw	low STR_2
  1107   003262  6F9B               	movwf	sprintf@fmt& (0+255),b
  1108   003264  C0AF  F09C         	movff	menu@tempin,?_sprintf+3
  1109   003268  C0B0  F09D         	movff	menu@tempin+1,?_sprintf+4
  1110   00326C  C0B1  F09E         	movff	menu@tempin+2,?_sprintf+5
  1111   003270  C0B2  F09F         	movff	menu@tempin+3,?_sprintf+6
  1112   003274  0E00               	movlw	0
  1113   003276  6FA1               	movwf	(?_sprintf+8)& (0+255),b
  1114   003278  0EDF               	movlw	223
  1115   00327A  6FA0               	movwf	(?_sprintf+7)& (0+255),b
  1116   00327C  EC08  F01B         	call	_sprintf	;wreg free
  1117   003280                     
  1118                           ;newmain1.c: 57:     sprintf(TempoutSTR, "OUT: %.2f%cC  ",tempout,0xdf);
  1119   003280  0E50               	movlw	low _TempoutSTR
  1120   003282  0100               	movlb	0	; () banked
  1121   003284  6F99               	movwf	sprintf@s& (0+255),b
  1122   003286  0E01               	movlw	high _TempoutSTR
  1123   003288  6F9A               	movwf	(sprintf@s+1)& (0+255),b
  1124   00328A  0E19               	movlw	low STR_3
  1125   00328C  6F9B               	movwf	sprintf@fmt& (0+255),b
  1126   00328E  C0B3  F09C         	movff	menu@tempout,?_sprintf+3
  1127   003292  C0B4  F09D         	movff	menu@tempout+1,?_sprintf+4
  1128   003296  C0B5  F09E         	movff	menu@tempout+2,?_sprintf+5
  1129   00329A  C0B6  F09F         	movff	menu@tempout+3,?_sprintf+6
  1130   00329E  0E00               	movlw	0
  1131   0032A0  6FA1               	movwf	(?_sprintf+8)& (0+255),b
  1132   0032A2  0EDF               	movlw	223
  1133   0032A4  6FA0               	movwf	(?_sprintf+7)& (0+255),b
  1134   0032A6  EC08  F01B         	call	_sprintf	;wreg free
  1135   0032AA                     
  1136                           ;newmain1.c: 58:     LCD_Set_Cursor(1, 1);
  1137   0032AA  0E01               	movlw	1
  1138   0032AC  6E06               	movwf	LCD_Set_Cursor@COL^0,c
  1139   0032AE  0E01               	movlw	1
  1140   0032B0  EC71  F01A         	call	_LCD_Set_Cursor
  1141   0032B4                     
  1142                           ;newmain1.c: 59:     LCD_Write_String(TempinSTR);
  1143   0032B4  0ED6               	movlw	low _TempinSTR
  1144   0032B6  6E06               	movwf	LCD_Write_String@Str^0,c
  1145   0032B8  6A07               	clrf	(LCD_Write_String@Str+1)^0,c
  1146   0032BA  EC48  F01B         	call	_LCD_Write_String	;wreg free
  1147   0032BE                     
  1148                           ;newmain1.c: 60:     LCD_Set_Cursor(2, 1);
  1149   0032BE  0E01               	movlw	1
  1150   0032C0  6E06               	movwf	LCD_Set_Cursor@COL^0,c
  1151   0032C2  0E02               	movlw	2
  1152   0032C4  EC71  F01A         	call	_LCD_Set_Cursor
  1153   0032C8                     
  1154                           ;newmain1.c: 61:     LCD_Write_String(TempoutSTR);
  1155   0032C8  0E50               	movlw	low _TempoutSTR
  1156   0032CA  6E06               	movwf	LCD_Write_String@Str^0,c
  1157   0032CC  0E01               	movlw	high _TempoutSTR
  1158   0032CE  6E07               	movwf	(LCD_Write_String@Str+1)^0,c
  1159   0032D0  EC48  F01B         	call	_LCD_Write_String	;wreg free
  1160   0032D4  0012               	return		;funcret
  1161   0032D6                     __end_of_menu:
  1162                           	callstack 0
  1163                           
  1164 ;; *************** function _termistorin *****************
  1165 ;; Defined at:
  1166 ;;		line 38 in file "newmain1.c"
  1167 ;; Parameters:    Size  Location     Type
  1168 ;;  AN0RES          2   76[COMRAM] int 
  1169 ;; Auto vars:     Size  Location     Type
  1170 ;;  tempin          4   70[BANK0 ] int 
  1171 ;; Return value:  Size  Location     Type
  1172 ;;                  4   76[COMRAM] int 
  1173 ;; Registers used:
  1174 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1175 ;; Tracked objects:
  1176 ;;		On entry : 0/0
  1177 ;;		On exit  : 0/0
  1178 ;;		Unchanged: 0/0
  1179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1180 ;;      Params:         4       0       0       0       0       0       0       0       0
  1181 ;;      Locals:         0      16       0       0       0       0       0       0       0
  1182 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1183 ;;      Totals:         4      16       0       0       0       0       0       0       0
  1184 ;;Total ram usage:       20 bytes
  1185 ;; Hardware stack levels used: 1
  1186 ;; Hardware stack levels required when called: 3
  1187 ;; This function calls:
  1188 ;;		___aldiv
  1189 ;;		___fladd
  1190 ;;		___fldiv
  1191 ;;		___flmul
  1192 ;;		___xxtofl
  1193 ;;		_logf
  1194 ;; This function is called by:
  1195 ;;		_menu
  1196 ;; This function uses a non-reentrant model
  1197 ;;
  1198                           
  1199                           	psect	text2
  1200   00290A                     __ptext2:
  1201                           	callstack 0
  1202   00290A                     _termistorin:
  1203                           	callstack 26
  1204   00290A                     
  1205                           ;newmain1.c: 39:     double tempin;;newmain1.c: 40:     tempin = logf(((10240000 / AN0RE
      +                          S) - 10000));
  1206   00290A  C04D  F005         	movff	termistorin@AN0RES,___aldiv@divisor
  1207   00290E  C04E  F006         	movff	termistorin@AN0RES+1,___aldiv@divisor+1
  1208   002912  0E00               	movlw	0
  1209   002914  BE06               	btfsc	(___aldiv@divisor+1)^0,7,c
  1210   002916  0EFF               	movlw	-1
  1211   002918  6E07               	movwf	(___aldiv@divisor+2)^0,c
  1212   00291A  6E08               	movwf	(___aldiv@divisor+3)^0,c
  1213   00291C  0E00               	movlw	0
  1214   00291E  6E01               	movwf	___aldiv@dividend^0,c
  1215   002920  0E40               	movlw	64
  1216   002922  6E02               	movwf	(___aldiv@dividend+1)^0,c
  1217   002924  0E9C               	movlw	156
  1218   002926  6E03               	movwf	(___aldiv@dividend+2)^0,c
  1219   002928  0E00               	movlw	0
  1220   00292A  6E04               	movwf	(___aldiv@dividend+3)^0,c
  1221   00292C  EC42  F016         	call	___aldiv	;wreg free
  1222   002930  0EF0               	movlw	240
  1223   002932  2401               	addwf	?___aldiv^0,w,c
  1224   002934  6E0F               	movwf	___xxtofl@val^0,c
  1225   002936  0ED8               	movlw	216
  1226   002938  2002               	addwfc	(?___aldiv+1)^0,w,c
  1227   00293A  6E10               	movwf	(___xxtofl@val+1)^0,c
  1228   00293C  0EFF               	movlw	255
  1229   00293E  2003               	addwfc	(?___aldiv+2)^0,w,c
  1230   002940  6E11               	movwf	(___xxtofl@val+2)^0,c
  1231   002942  0EFF               	movlw	255
  1232   002944  2004               	addwfc	(?___aldiv+3)^0,w,c
  1233   002946  6E12               	movwf	(___xxtofl@val+3)^0,c
  1234   002948  0E01               	movlw	1
  1235   00294A  EC68  F015         	call	___xxtofl
  1236   00294E  C00F  F09A         	movff	?___xxtofl,_termistorin$1212
  1237   002952  C010  F09B         	movff	?___xxtofl+1,_termistorin$1212+1
  1238   002956  C011  F09C         	movff	?___xxtofl+2,_termistorin$1212+2
  1239   00295A  C012  F09D         	movff	?___xxtofl+3,_termistorin$1212+3
  1240   00295E                     
  1241                           ;newmain1.c: 39:     double tempin;;newmain1.c: 40:     tempin = logf(((10240000 / AN0RE
      +                          S) - 10000));
  1242   00295E  C09A  F043         	movff	_termistorin$1212,logf@x
  1243   002962  C09B  F044         	movff	_termistorin$1212+1,logf@x+1
  1244   002966  C09C  F045         	movff	_termistorin$1212+2,logf@x+2
  1245   00296A  C09D  F046         	movff	_termistorin$1212+3,logf@x+3
  1246   00296E  EC1A  F009         	call	_logf	;wreg free
  1247   002972  C043  F0A6         	movff	?_logf,termistorin@tempin
  1248   002976  C044  F0A7         	movff	?_logf+1,termistorin@tempin+1
  1249   00297A  C045  F0A8         	movff	?_logf+2,termistorin@tempin+2
  1250   00297E  C046  F0A9         	movff	?_logf+3,termistorin@tempin+3
  1251   002982                     
  1252                           ;newmain1.c: 41:     tempin = 1 / (0.001129148 + (0.000234125 + (0.0000000876741 * tempi
      +                          n * tempin)) * tempin);
  1253   002982  0E59               	movlw	89
  1254   002984  6E05               	movwf	___flmul@a^0,c
  1255   002986  0E47               	movlw	71
  1256   002988  6E06               	movwf	(___flmul@a+1)^0,c
  1257   00298A  0EBC               	movlw	188
  1258   00298C  6E07               	movwf	(___flmul@a+2)^0,c
  1259   00298E  0E33               	movlw	51
  1260   002990  6E08               	movwf	(___flmul@a+3)^0,c
  1261   002992  C0A6  F001         	movff	termistorin@tempin,___flmul@b
  1262   002996  C0A7  F002         	movff	termistorin@tempin+1,___flmul@b+1
  1263   00299A  C0A8  F003         	movff	termistorin@tempin+2,___flmul@b+2
  1264   00299E  C0A9  F004         	movff	termistorin@tempin+3,___flmul@b+3
  1265   0029A2  EC88  F00E         	call	___flmul	;wreg free
  1266   0029A6  C001  F09E         	movff	?___flmul,_termistorin$1213
  1267   0029AA  C002  F09F         	movff	?___flmul+1,_termistorin$1213+1
  1268   0029AE  C003  F0A0         	movff	?___flmul+2,_termistorin$1213+2
  1269   0029B2  C004  F0A1         	movff	?___flmul+3,_termistorin$1213+3
  1270   0029B6                     
  1271                           ;newmain1.c: 41:     tempin = 1 / (0.001129148 + (0.000234125 + (0.0000000876741 * tempi
      +                          n * tempin)) * tempin);
  1272   0029B6  0E73               	movlw	115
  1273   0029B8  6E1E               	movwf	___fladd@a^0,c
  1274   0029BA  0E7F               	movlw	127
  1275   0029BC  6E1F               	movwf	(___fladd@a+1)^0,c
  1276   0029BE  0E75               	movlw	117
  1277   0029C0  6E20               	movwf	(___fladd@a+2)^0,c
  1278   0029C2  0E39               	movlw	57
  1279   0029C4  6E21               	movwf	(___fladd@a+3)^0,c
  1280   0029C6  C0A6  F005         	movff	termistorin@tempin,___flmul@a
  1281   0029CA  C0A7  F006         	movff	termistorin@tempin+1,___flmul@a+1
  1282   0029CE  C0A8  F007         	movff	termistorin@tempin+2,___flmul@a+2
  1283   0029D2  C0A9  F008         	movff	termistorin@tempin+3,___flmul@a+3
  1284   0029D6  C09E  F001         	movff	_termistorin$1213,___flmul@b
  1285   0029DA  C09F  F002         	movff	_termistorin$1213+1,___flmul@b+1
  1286   0029DE  C0A0  F003         	movff	_termistorin$1213+2,___flmul@b+2
  1287   0029E2  C0A1  F004         	movff	_termistorin$1213+3,___flmul@b+3
  1288   0029E6  EC88  F00E         	call	___flmul	;wreg free
  1289   0029EA  C001  F01A         	movff	?___flmul,___fladd@b
  1290   0029EE  C002  F01B         	movff	?___flmul+1,___fladd@b+1
  1291   0029F2  C003  F01C         	movff	?___flmul+2,___fladd@b+2
  1292   0029F6  C004  F01D         	movff	?___flmul+3,___fladd@b+3
  1293   0029FA  EC28  F00C         	call	___fladd	;wreg free
  1294   0029FE  C01A  F0A2         	movff	?___fladd,_termistorin$1214
  1295   002A02  C01B  F0A3         	movff	?___fladd+1,_termistorin$1214+1
  1296   002A06  C01C  F0A4         	movff	?___fladd+2,_termistorin$1214+2
  1297   002A0A  C01D  F0A5         	movff	?___fladd+3,_termistorin$1214+3
  1298   002A0E                     
  1299                           ;newmain1.c: 41:     tempin = 1 / (0.001129148 + (0.000234125 + (0.0000000876741 * tempi
      +                          n * tempin)) * tempin);
  1300   002A0E  0E00               	movlw	0
  1301   002A10  6E2A               	movwf	___fldiv@b^0,c
  1302   002A12  0E00               	movlw	0
  1303   002A14  6E2B               	movwf	(___fldiv@b+1)^0,c
  1304   002A16  0E80               	movlw	128
  1305   002A18  6E2C               	movwf	(___fldiv@b+2)^0,c
  1306   002A1A  0E3F               	movlw	63
  1307   002A1C  6E2D               	movwf	(___fldiv@b+3)^0,c
  1308   002A1E  0EEB               	movlw	235
  1309   002A20  6E1E               	movwf	___fladd@a^0,c
  1310   002A22  0EFF               	movlw	255
  1311   002A24  6E1F               	movwf	(___fladd@a+1)^0,c
  1312   002A26  0E93               	movlw	147
  1313   002A28  6E20               	movwf	(___fladd@a+2)^0,c
  1314   002A2A  0E3A               	movlw	58
  1315   002A2C  6E21               	movwf	(___fladd@a+3)^0,c
  1316   002A2E  C0A6  F005         	movff	termistorin@tempin,___flmul@a
  1317   002A32  C0A7  F006         	movff	termistorin@tempin+1,___flmul@a+1
  1318   002A36  C0A8  F007         	movff	termistorin@tempin+2,___flmul@a+2
  1319   002A3A  C0A9  F008         	movff	termistorin@tempin+3,___flmul@a+3
  1320   002A3E  C0A2  F001         	movff	_termistorin$1214,___flmul@b
  1321   002A42  C0A3  F002         	movff	_termistorin$1214+1,___flmul@b+1
  1322   002A46  C0A4  F003         	movff	_termistorin$1214+2,___flmul@b+2
  1323   002A4A  C0A5  F004         	movff	_termistorin$1214+3,___flmul@b+3
  1324   002A4E  EC88  F00E         	call	___flmul	;wreg free
  1325   002A52  C001  F01A         	movff	?___flmul,___fladd@b
  1326   002A56  C002  F01B         	movff	?___flmul+1,___fladd@b+1
  1327   002A5A  C003  F01C         	movff	?___flmul+2,___fladd@b+2
  1328   002A5E  C004  F01D         	movff	?___flmul+3,___fladd@b+3
  1329   002A62  EC28  F00C         	call	___fladd	;wreg free
  1330   002A66  C01A  F02E         	movff	?___fladd,___fldiv@a
  1331   002A6A  C01B  F02F         	movff	?___fladd+1,___fldiv@a+1
  1332   002A6E  C01C  F030         	movff	?___fladd+2,___fldiv@a+2
  1333   002A72  C01D  F031         	movff	?___fladd+3,___fldiv@a+3
  1334   002A76  EC9D  F010         	call	___fldiv	;wreg free
  1335   002A7A  C02A  F0A6         	movff	?___fldiv,termistorin@tempin
  1336   002A7E  C02B  F0A7         	movff	?___fldiv+1,termistorin@tempin+1
  1337   002A82  C02C  F0A8         	movff	?___fldiv+2,termistorin@tempin+2
  1338   002A86  C02D  F0A9         	movff	?___fldiv+3,termistorin@tempin+3
  1339                           
  1340                           ;newmain1.c: 42:     tempin = tempin - 273.15;
  1341   002A8A  C0A6  F01A         	movff	termistorin@tempin,___fladd@b
  1342   002A8E  C0A7  F01B         	movff	termistorin@tempin+1,___fladd@b+1
  1343   002A92  C0A8  F01C         	movff	termistorin@tempin+2,___fladd@b+2
  1344   002A96  C0A9  F01D         	movff	termistorin@tempin+3,___fladd@b+3
  1345   002A9A  0E33               	movlw	51
  1346   002A9C  6E1E               	movwf	___fladd@a^0,c
  1347   002A9E  0E93               	movlw	147
  1348   002AA0  6E1F               	movwf	(___fladd@a+1)^0,c
  1349   002AA2  0E88               	movlw	136
  1350   002AA4  6E20               	movwf	(___fladd@a+2)^0,c
  1351   002AA6  0EC3               	movlw	195
  1352   002AA8  6E21               	movwf	(___fladd@a+3)^0,c
  1353   002AAA  EC28  F00C         	call	___fladd	;wreg free
  1354   002AAE  C01A  F0A6         	movff	?___fladd,termistorin@tempin
  1355   002AB2  C01B  F0A7         	movff	?___fladd+1,termistorin@tempin+1
  1356   002AB6  C01C  F0A8         	movff	?___fladd+2,termistorin@tempin+2
  1357   002ABA  C01D  F0A9         	movff	?___fladd+3,termistorin@tempin+3
  1358   002ABE                     
  1359                           ;newmain1.c: 43:     return tempin;
  1360   002ABE  C0A6  F04D         	movff	termistorin@tempin,?_termistorin
  1361   002AC2  C0A7  F04E         	movff	termistorin@tempin+1,?_termistorin+1
  1362   002AC6  C0A8  F04F         	movff	termistorin@tempin+2,?_termistorin+2
  1363   002ACA  C0A9  F050         	movff	termistorin@tempin+3,?_termistorin+3
  1364   002ACE  0012               	return		;funcret
  1365   002AD0                     __end_of_termistorin:
  1366                           	callstack 0
  1367                           
  1368 ;; *************** function _logf *****************
  1369 ;; Defined at:
  1370 ;;		line 29 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\logf.c"
  1371 ;; Parameters:    Size  Location     Type
  1372 ;;  x               4   66[COMRAM] float 
  1373 ;; Auto vars:     Size  Location     Type
  1374 ;;  ux              4   54[BANK0 ] struct .
  1375 ;;  w               4   46[BANK0 ] float 
  1376 ;;  z               4   42[BANK0 ] float 
  1377 ;;  s               4   38[BANK0 ] float 
  1378 ;;  dk              4   34[BANK0 ] float 
  1379 ;;  hfsq            4   30[BANK0 ] float 
  1380 ;;  t2              4    8[BANK0 ] float 
  1381 ;;  t1              4    4[BANK0 ] float 
  1382 ;;  R               4    0[BANK0 ] float 
  1383 ;;  k               2   28[BANK0 ] int 
  1384 ;; Return value:  Size  Location     Type
  1385 ;;                  4   66[COMRAM] float 
  1386 ;; Registers used:
  1387 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1388 ;; Tracked objects:
  1389 ;;		On entry : 0/0
  1390 ;;		On exit  : 0/0
  1391 ;;		Unchanged: 0/0
  1392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1393 ;;      Params:         4       0       0       0       0       0       0       0       0
  1394 ;;      Locals:         0      58       0       0       0       0       0       0       0
  1395 ;;      Temps:          6       0       0       0       0       0       0       0       0
  1396 ;;      Totals:        10      58       0       0       0       0       0       0       0
  1397 ;;Total ram usage:       68 bytes
  1398 ;; Hardware stack levels used: 1
  1399 ;; Hardware stack levels required when called: 2
  1400 ;; This function calls:
  1401 ;;		___fladd
  1402 ;;		___fldiv
  1403 ;;		___flmul
  1404 ;;		___flsub
  1405 ;;		___xxtofl
  1406 ;; This function is called by:
  1407 ;;		_termistorin
  1408 ;;		_termistorout
  1409 ;; This function uses a non-reentrant model
  1410 ;;
  1411                           
  1412                           	psect	text3
  1413   001234                     __ptext3:
  1414                           	callstack 0
  1415   001234                     _logf:
  1416                           	callstack 26
  1417   001234  C0C1  F096         	movff	logf@F472,logf@ux
  1418   001238  C0C2  F097         	movff	logf@F472+1,logf@ux+1
  1419   00123C  C0C3  F098         	movff	logf@F472+2,logf@ux+2
  1420   001240  C0C4  F099         	movff	logf@F472+3,logf@ux+3
  1421   001244  C043  F096         	movff	logf@x,logf@ux
  1422   001248  C044  F097         	movff	logf@x+1,logf@ux+1
  1423   00124C  C045  F098         	movff	logf@x+2,logf@ux+2
  1424   001250  C046  F099         	movff	logf@x+3,logf@ux+3
  1425   001254  0E00               	movlw	0
  1426   001256  0100               	movlb	0	; () banked
  1427   001258  6F7D               	movwf	(logf@k+1)& (0+255),b
  1428   00125A  0E00               	movlw	0
  1429   00125C  6F7C               	movwf	logf@k& (0+255),b
  1430   00125E                     
  1431                           ; BSR set to: 0
  1432   00125E  5199               	movf	(logf@ux+3)& (0+255),w,b
  1433   001260  E109               	bnz	u5520
  1434   001262  0E80               	movlw	128
  1435   001264  5D98               	subwf	(logf@ux+2)& (0+255),w,b
  1436   001266  A0D8               	btfss	status,0,c
  1437   001268  EF38  F009         	goto	u5521
  1438   00126C  EF3A  F009         	goto	u5520
  1439   001270                     u5521:
  1440   001270  EF41  F009         	goto	l4807
  1441   001274                     u5520:
  1442   001274                     
  1443                           ; BSR set to: 0
  1444   001274  AF99               	btfss	(logf@ux+3)& (0+255),7,b
  1445   001276  EF3F  F009         	goto	u5531
  1446   00127A  EF41  F009         	goto	u5530
  1447   00127E                     u5531:
  1448   00127E  EF9C  F009         	goto	l4825
  1449   001282                     u5530:
  1450   001282                     l4807:
  1451                           
  1452                           ; BSR set to: 0
  1453   001282  90D8               	bcf	status,0,c
  1454   001284  3596               	rlcf	logf@ux& (0+255),w,b
  1455   001286  6E47               	movwf	??_logf^0,c
  1456   001288  3597               	rlcf	(logf@ux+1)& (0+255),w,b
  1457   00128A  6E48               	movwf	(??_logf+1)^0,c
  1458   00128C  3598               	rlcf	(logf@ux+2)& (0+255),w,b
  1459   00128E  6E49               	movwf	(??_logf+2)^0,c
  1460   001290  3599               	rlcf	(logf@ux+3)& (0+255),w,b
  1461   001292  6E4A               	movwf	(??_logf+3)^0,c
  1462   001294  5047               	movf	??_logf^0,w,c
  1463   001296  1048               	iorwf	(??_logf+1)^0,w,c
  1464   001298  1049               	iorwf	(??_logf+2)^0,w,c
  1465   00129A  104A               	iorwf	(??_logf+3)^0,w,c
  1466   00129C  A4D8               	btfss	status,2,c
  1467   00129E  EF53  F009         	goto	u5541
  1468   0012A2  EF55  F009         	goto	u5540
  1469   0012A6                     u5541:
  1470   0012A6  EF67  F009         	goto	l889
  1471   0012AA                     u5540:
  1472   0012AA                     
  1473                           ; BSR set to: 0
  1474   0012AA  0E00               	movlw	0
  1475   0012AC  6F96               	movwf	logf@ux& (0+255),b
  1476   0012AE  0E00               	movlw	0
  1477   0012B0  6F97               	movwf	(logf@ux+1)& (0+255),b
  1478   0012B2  0E80               	movlw	128
  1479   0012B4  6F98               	movwf	(logf@ux+2)& (0+255),b
  1480   0012B6  0EFF               	movlw	255
  1481   0012B8  6F99               	movwf	(logf@ux+3)& (0+255),b
  1482   0012BA                     l4811:
  1483                           
  1484                           ; BSR set to: 0
  1485   0012BA  C096  F043         	movff	logf@ux,?_logf
  1486   0012BE  C097  F044         	movff	logf@ux+1,?_logf+1
  1487   0012C2  C098  F045         	movff	logf@ux+2,?_logf+2
  1488   0012C6  C099  F046         	movff	logf@ux+3,?_logf+3
  1489   0012CA  EF27  F00C         	goto	l890
  1490   0012CE                     l889:
  1491                           
  1492                           ; BSR set to: 0
  1493   0012CE  AF99               	btfss	(logf@ux+3)& (0+255),7,b
  1494   0012D0  EF6C  F009         	goto	u5551
  1495   0012D4  EF6E  F009         	goto	u5550
  1496   0012D8                     u5551:
  1497   0012D8  EF7C  F009         	goto	l4821
  1498   0012DC                     u5550:
  1499   0012DC                     
  1500                           ; BSR set to: 0
  1501   0012DC  0E00               	movlw	0
  1502   0012DE  6FCE               	movwf	(_errno+1)& (0+255),b
  1503   0012E0  0E21               	movlw	33
  1504   0012E2  6FCD               	movwf	_errno& (0+255),b
  1505   0012E4  0EFF               	movlw	255
  1506   0012E6  6F96               	movwf	logf@ux& (0+255),b
  1507   0012E8  0EFF               	movlw	255
  1508   0012EA  6F97               	movwf	(logf@ux+1)& (0+255),b
  1509   0012EC  0EFF               	movlw	255
  1510   0012EE  6F98               	movwf	(logf@ux+2)& (0+255),b
  1511   0012F0  0E7F               	movlw	127
  1512   0012F2  6F99               	movwf	(logf@ux+3)& (0+255),b
  1513   0012F4  EF5D  F009         	goto	l4811
  1514   0012F8                     l4821:
  1515                           
  1516                           ; BSR set to: 0
  1517   0012F8  0EE7               	movlw	231
  1518   0012FA  277C               	addwf	logf@k& (0+255),f,b
  1519   0012FC  0EFF               	movlw	255
  1520   0012FE  237D               	addwfc	(logf@k+1)& (0+255),f,b
  1521   001300                     
  1522                           ; BSR set to: 0
  1523   001300  C096  F001         	movff	logf@ux,___flmul@b
  1524   001304  C097  F002         	movff	logf@ux+1,___flmul@b+1
  1525   001308  C098  F003         	movff	logf@ux+2,___flmul@b+2
  1526   00130C  C099  F004         	movff	logf@ux+3,___flmul@b+3
  1527   001310  0E00               	movlw	0
  1528   001312  6E05               	movwf	___flmul@a^0,c
  1529   001314  0E00               	movlw	0
  1530   001316  6E06               	movwf	(___flmul@a+1)^0,c
  1531   001318  0E00               	movlw	0
  1532   00131A  6E07               	movwf	(___flmul@a+2)^0,c
  1533   00131C  0E4C               	movlw	76
  1534   00131E  6E08               	movwf	(___flmul@a+3)^0,c
  1535   001320  EC88  F00E         	call	___flmul	;wreg free
  1536   001324  C001  F096         	movff	?___flmul,logf@ux
  1537   001328  C002  F097         	movff	?___flmul+1,logf@ux+1
  1538   00132C  C003  F098         	movff	?___flmul+2,logf@ux+2
  1539   001330  C004  F099         	movff	?___flmul+3,logf@ux+3
  1540   001334  EFC9  F009         	goto	l4837
  1541   001338                     l4825:
  1542                           
  1543                           ; BSR set to: 0
  1544   001338  0E80               	movlw	128
  1545   00133A  5D98               	subwf	(logf@ux+2)& (0+255),w,b
  1546   00133C  0E7F               	movlw	127
  1547   00133E  5999               	subwfb	(logf@ux+3)& (0+255),w,b
  1548   001340  A0D8               	btfss	status,0,c
  1549   001342  EFA5  F009         	goto	u5561
  1550   001346  EFA7  F009         	goto	u5560
  1551   00134A                     u5561:
  1552   00134A  EFB1  F009         	goto	l4831
  1553   00134E                     u5560:
  1554   00134E                     
  1555                           ; BSR set to: 0
  1556   00134E  C043  F043         	movff	logf@x,?_logf
  1557   001352  C044  F044         	movff	logf@x+1,?_logf+1
  1558   001356  C045  F045         	movff	logf@x+2,?_logf+2
  1559   00135A  C046  F046         	movff	logf@x+3,?_logf+3
  1560   00135E  EF27  F00C         	goto	l890
  1561   001362                     l4831:
  1562                           
  1563                           ; BSR set to: 0
  1564   001362  0E80               	movlw	128
  1565   001364  1998               	xorwf	(logf@ux+2)& (0+255),w,b
  1566   001366  E109               	bnz	u5571
  1567   001368  0E3F               	movlw	63
  1568   00136A  1999               	xorwf	(logf@ux+3)& (0+255),w,b
  1569   00136C  1196               	iorwf	logf@ux& (0+255),w,b
  1570   00136E  1197               	iorwf	(logf@ux+1)& (0+255),w,b
  1571   001370  A4D8               	btfss	status,2,c
  1572   001372  EFBD  F009         	goto	u5571
  1573   001376  EFBF  F009         	goto	u5570
  1574   00137A                     u5571:
  1575   00137A  EFC9  F009         	goto	l4837
  1576   00137E                     u5570:
  1577   00137E                     
  1578                           ; BSR set to: 0
  1579   00137E  0E00               	movlw	0
  1580   001380  6E43               	movwf	?_logf^0,c
  1581   001382  0E00               	movlw	0
  1582   001384  6E44               	movwf	(?_logf+1)^0,c
  1583   001386  0E00               	movlw	0
  1584   001388  6E45               	movwf	(?_logf+2)^0,c
  1585   00138A  0E00               	movlw	0
  1586   00138C  6E46               	movwf	(?_logf+3)^0,c
  1587   00138E  EF27  F00C         	goto	l890
  1588   001392                     l4837:
  1589   001392  0E0D               	movlw	13
  1590   001394  0100               	movlb	0	; () banked
  1591   001396  2796               	addwf	logf@ux& (0+255),f,b
  1592   001398  0EFB               	movlw	251
  1593   00139A  2397               	addwfc	(logf@ux+1)& (0+255),f,b
  1594   00139C  0E4A               	movlw	74
  1595   00139E  2398               	addwfc	(logf@ux+2)& (0+255),f,b
  1596   0013A0  0E00               	movlw	0
  1597   0013A2  2399               	addwfc	(logf@ux+3)& (0+255),f,b
  1598   0013A4  C096  F047         	movff	logf@ux,??_logf
  1599   0013A8  C097  F048         	movff	logf@ux+1,??_logf+1
  1600   0013AC  C098  F049         	movff	logf@ux+2,??_logf+2
  1601   0013B0  C099  F04A         	movff	logf@ux+3,??_logf+3
  1602   0013B4  0E18               	movlw	24
  1603   0013B6  EFE2  F009         	goto	u5580
  1604   0013BA                     u5585:
  1605   0013BA  90D8               	bcf	status,0,c
  1606   0013BC  324A               	rrcf	(??_logf+3)^0,f,c
  1607   0013BE  3249               	rrcf	(??_logf+2)^0,f,c
  1608   0013C0  3248               	rrcf	(??_logf+1)^0,f,c
  1609   0013C2  3247               	rrcf	??_logf^0,f,c
  1610   0013C4                     u5580:
  1611   0013C4  2EE8               	decfsz	wreg,f,c
  1612   0013C6  EFDD  F009         	goto	u5585
  1613   0013CA  0E81               	movlw	129
  1614   0013CC  2447               	addwf	??_logf^0,w,c
  1615   0013CE  6E4B               	movwf	(??_logf+4)^0,c
  1616   0013D0  0EFF               	movlw	255
  1617   0013D2  2048               	addwfc	(??_logf+1)^0,w,c
  1618   0013D4  6E4C               	movwf	(??_logf+5)^0,c
  1619   0013D6  504B               	movf	(??_logf+4)^0,w,c
  1620   0013D8  277C               	addwf	logf@k& (0+255),f,b
  1621   0013DA  504C               	movf	(??_logf+5)^0,w,c
  1622   0013DC  237D               	addwfc	(logf@k+1)& (0+255),f,b
  1623   0013DE  0EFF               	movlw	255
  1624   0013E0  1596               	andwf	logf@ux& (0+255),w,b
  1625   0013E2  6E47               	movwf	??_logf^0,c
  1626   0013E4  0EFF               	movlw	255
  1627   0013E6  1597               	andwf	(logf@ux+1)& (0+255),w,b
  1628   0013E8  6E48               	movwf	(??_logf+1)^0,c
  1629   0013EA  0E7F               	movlw	127
  1630   0013EC  1598               	andwf	(logf@ux+2)& (0+255),w,b
  1631   0013EE  6E49               	movwf	(??_logf+2)^0,c
  1632   0013F0  0E00               	movlw	0
  1633   0013F2  1599               	andwf	(logf@ux+3)& (0+255),w,b
  1634   0013F4  6E4A               	movwf	(??_logf+3)^0,c
  1635   0013F6  0EF3               	movlw	243
  1636   0013F8  2447               	addwf	??_logf^0,w,c
  1637   0013FA  6F96               	movwf	logf@ux& (0+255),b
  1638   0013FC  0E04               	movlw	4
  1639   0013FE  2048               	addwfc	(??_logf+1)^0,w,c
  1640   001400  6F97               	movwf	(logf@ux+1)& (0+255),b
  1641   001402  0E35               	movlw	53
  1642   001404  2049               	addwfc	(??_logf+2)^0,w,c
  1643   001406  6F98               	movwf	(logf@ux+2)& (0+255),b
  1644   001408  0E3F               	movlw	63
  1645   00140A  204A               	addwfc	(??_logf+3)^0,w,c
  1646   00140C  6F99               	movwf	(logf@ux+3)& (0+255),b
  1647   00140E                     
  1648                           ; BSR set to: 0
  1649   00140E  C096  F02A         	movff	logf@ux,___flsub@b
  1650   001412  C097  F02B         	movff	logf@ux+1,___flsub@b+1
  1651   001416  C098  F02C         	movff	logf@ux+2,___flsub@b+2
  1652   00141A  C099  F02D         	movff	logf@ux+3,___flsub@b+3
  1653   00141E  0E00               	movlw	0
  1654   001420  6E2E               	movwf	___flsub@a^0,c
  1655   001422  0E00               	movlw	0
  1656   001424  6E2F               	movwf	(___flsub@a+1)^0,c
  1657   001426  0E80               	movlw	128
  1658   001428  6E30               	movwf	(___flsub@a+2)^0,c
  1659   00142A  0E3F               	movlw	63
  1660   00142C  6E31               	movwf	(___flsub@a+3)^0,c
  1661   00142E  ECC4  F01A         	call	___flsub	;wreg free
  1662   001432  C02A  F096         	movff	?___flsub,logf@ux
  1663   001436  C02B  F097         	movff	?___flsub+1,logf@ux+1
  1664   00143A  C02C  F098         	movff	?___flsub+2,logf@ux+2
  1665   00143E  C02D  F099         	movff	?___flsub+3,logf@ux+3
  1666   001442  C096  F02A         	movff	logf@ux,___fldiv@b
  1667   001446  C097  F02B         	movff	logf@ux+1,___fldiv@b+1
  1668   00144A  C098  F02C         	movff	logf@ux+2,___fldiv@b+2
  1669   00144E  C099  F02D         	movff	logf@ux+3,___fldiv@b+3
  1670   001452  0E00               	movlw	0
  1671   001454  6E1E               	movwf	___fladd@a^0,c
  1672   001456  0E00               	movlw	0
  1673   001458  6E1F               	movwf	(___fladd@a+1)^0,c
  1674   00145A  0E00               	movlw	0
  1675   00145C  6E20               	movwf	(___fladd@a+2)^0,c
  1676   00145E  0E40               	movlw	64
  1677   001460  6E21               	movwf	(___fladd@a+3)^0,c
  1678   001462  C096  F01A         	movff	logf@ux,___fladd@b
  1679   001466  C097  F01B         	movff	logf@ux+1,___fladd@b+1
  1680   00146A  C098  F01C         	movff	logf@ux+2,___fladd@b+2
  1681   00146E  C099  F01D         	movff	logf@ux+3,___fladd@b+3
  1682   001472  EC28  F00C         	call	___fladd	;wreg free
  1683   001476  C01A  F02E         	movff	?___fladd,___fldiv@a
  1684   00147A  C01B  F02F         	movff	?___fladd+1,___fldiv@a+1
  1685   00147E  C01C  F030         	movff	?___fladd+2,___fldiv@a+2
  1686   001482  C01D  F031         	movff	?___fladd+3,___fldiv@a+3
  1687   001486  EC9D  F010         	call	___fldiv	;wreg free
  1688   00148A  C02A  F086         	movff	?___fldiv,logf@s
  1689   00148E  C02B  F087         	movff	?___fldiv+1,logf@s+1
  1690   001492  C02C  F088         	movff	?___fldiv+2,logf@s+2
  1691   001496  C02D  F089         	movff	?___fldiv+3,logf@s+3
  1692   00149A  C086  F001         	movff	logf@s,___flmul@b
  1693   00149E  C087  F002         	movff	logf@s+1,___flmul@b+1
  1694   0014A2  C088  F003         	movff	logf@s+2,___flmul@b+2
  1695   0014A6  C089  F004         	movff	logf@s+3,___flmul@b+3
  1696   0014AA  C086  F005         	movff	logf@s,___flmul@a
  1697   0014AE  C087  F006         	movff	logf@s+1,___flmul@a+1
  1698   0014B2  C088  F007         	movff	logf@s+2,___flmul@a+2
  1699   0014B6  C089  F008         	movff	logf@s+3,___flmul@a+3
  1700   0014BA  EC88  F00E         	call	___flmul	;wreg free
  1701   0014BE  C001  F08A         	movff	?___flmul,logf@z
  1702   0014C2  C002  F08B         	movff	?___flmul+1,logf@z+1
  1703   0014C6  C003  F08C         	movff	?___flmul+2,logf@z+2
  1704   0014CA  C004  F08D         	movff	?___flmul+3,logf@z+3
  1705   0014CE  C08A  F001         	movff	logf@z,___flmul@b
  1706   0014D2  C08B  F002         	movff	logf@z+1,___flmul@b+1
  1707   0014D6  C08C  F003         	movff	logf@z+2,___flmul@b+2
  1708   0014DA  C08D  F004         	movff	logf@z+3,___flmul@b+3
  1709   0014DE  C08A  F005         	movff	logf@z,___flmul@a
  1710   0014E2  C08B  F006         	movff	logf@z+1,___flmul@a+1
  1711   0014E6  C08C  F007         	movff	logf@z+2,___flmul@a+2
  1712   0014EA  C08D  F008         	movff	logf@z+3,___flmul@a+3
  1713   0014EE  EC88  F00E         	call	___flmul	;wreg free
  1714   0014F2  C001  F08E         	movff	?___flmul,logf@w
  1715   0014F6  C002  F08F         	movff	?___flmul+1,logf@w+1
  1716   0014FA  C003  F090         	movff	?___flmul+2,logf@w+2
  1717   0014FE  C004  F091         	movff	?___flmul+3,logf@w+3
  1718   001502  0E13               	movlw	19
  1719   001504  6E1E               	movwf	___fladd@a^0,c
  1720   001506  0ECE               	movlw	206
  1721   001508  6E1F               	movwf	(___fladd@a+1)^0,c
  1722   00150A  0ECC               	movlw	204
  1723   00150C  6E20               	movwf	(___fladd@a+2)^0,c
  1724   00150E  0E3E               	movlw	62
  1725   001510  6E21               	movwf	(___fladd@a+3)^0,c
  1726   001512  0E26               	movlw	38
  1727   001514  6E05               	movwf	___flmul@a^0,c
  1728   001516  0E9E               	movlw	158
  1729   001518  6E06               	movwf	(___flmul@a+1)^0,c
  1730   00151A  0E78               	movlw	120
  1731   00151C  6E07               	movwf	(___flmul@a+2)^0,c
  1732   00151E  0E3E               	movlw	62
  1733   001520  6E08               	movwf	(___flmul@a+3)^0,c
  1734   001522  C08E  F001         	movff	logf@w,___flmul@b
  1735   001526  C08F  F002         	movff	logf@w+1,___flmul@b+1
  1736   00152A  C090  F003         	movff	logf@w+2,___flmul@b+2
  1737   00152E  C091  F004         	movff	logf@w+3,___flmul@b+3
  1738   001532  EC88  F00E         	call	___flmul	;wreg free
  1739   001536  C001  F01A         	movff	?___flmul,___fladd@b
  1740   00153A  C002  F01B         	movff	?___flmul+1,___fladd@b+1
  1741   00153E  C003  F01C         	movff	?___flmul+2,___fladd@b+2
  1742   001542  C004  F01D         	movff	?___flmul+3,___fladd@b+3
  1743   001546  EC28  F00C         	call	___fladd	;wreg free
  1744   00154A  C01A  F092         	movff	?___fladd,_logf$1218
  1745   00154E  C01B  F093         	movff	?___fladd+1,_logf$1218+1
  1746   001552  C01C  F094         	movff	?___fladd+2,_logf$1218+2
  1747   001556  C01D  F095         	movff	?___fladd+3,_logf$1218+3
  1748   00155A  C092  F001         	movff	_logf$1218,___flmul@b
  1749   00155E  C093  F002         	movff	_logf$1218+1,___flmul@b+1
  1750   001562  C094  F003         	movff	_logf$1218+2,___flmul@b+2
  1751   001566  C095  F004         	movff	_logf$1218+3,___flmul@b+3
  1752   00156A  C08E  F005         	movff	logf@w,___flmul@a
  1753   00156E  C08F  F006         	movff	logf@w+1,___flmul@a+1
  1754   001572  C090  F007         	movff	logf@w+2,___flmul@a+2
  1755   001576  C091  F008         	movff	logf@w+3,___flmul@a+3
  1756   00157A  EC88  F00E         	call	___flmul	;wreg free
  1757   00157E  C001  F064         	movff	?___flmul,logf@t1
  1758   001582  C002  F065         	movff	?___flmul+1,logf@t1+1
  1759   001586  C003  F066         	movff	?___flmul+2,logf@t1+2
  1760   00158A  C004  F067         	movff	?___flmul+3,logf@t1+3
  1761   00158E  0EAA               	movlw	170
  1762   001590  6E1E               	movwf	___fladd@a^0,c
  1763   001592  0EAA               	movlw	170
  1764   001594  6E1F               	movwf	(___fladd@a+1)^0,c
  1765   001596  0E2A               	movlw	42
  1766   001598  6E20               	movwf	(___fladd@a+2)^0,c
  1767   00159A  0E3F               	movlw	63
  1768   00159C  6E21               	movwf	(___fladd@a+3)^0,c
  1769   00159E  0EEE               	movlw	238
  1770   0015A0  6E05               	movwf	___flmul@a^0,c
  1771   0015A2  0EE9               	movlw	233
  1772   0015A4  6E06               	movwf	(___flmul@a+1)^0,c
  1773   0015A6  0E91               	movlw	145
  1774   0015A8  6E07               	movwf	(___flmul@a+2)^0,c
  1775   0015AA  0E3E               	movlw	62
  1776   0015AC  6E08               	movwf	(___flmul@a+3)^0,c
  1777   0015AE  C08E  F001         	movff	logf@w,___flmul@b
  1778   0015B2  C08F  F002         	movff	logf@w+1,___flmul@b+1
  1779   0015B6  C090  F003         	movff	logf@w+2,___flmul@b+2
  1780   0015BA  C091  F004         	movff	logf@w+3,___flmul@b+3
  1781   0015BE  EC88  F00E         	call	___flmul	;wreg free
  1782   0015C2  C001  F01A         	movff	?___flmul,___fladd@b
  1783   0015C6  C002  F01B         	movff	?___flmul+1,___fladd@b+1
  1784   0015CA  C003  F01C         	movff	?___flmul+2,___fladd@b+2
  1785   0015CE  C004  F01D         	movff	?___flmul+3,___fladd@b+3
  1786   0015D2  EC28  F00C         	call	___fladd	;wreg free
  1787   0015D6  C01A  F092         	movff	?___fladd,_logf$1218
  1788   0015DA  C01B  F093         	movff	?___fladd+1,_logf$1218+1
  1789   0015DE  C01C  F094         	movff	?___fladd+2,_logf$1218+2
  1790   0015E2  C01D  F095         	movff	?___fladd+3,_logf$1218+3
  1791   0015E6  C092  F001         	movff	_logf$1218,___flmul@b
  1792   0015EA  C093  F002         	movff	_logf$1218+1,___flmul@b+1
  1793   0015EE  C094  F003         	movff	_logf$1218+2,___flmul@b+2
  1794   0015F2  C095  F004         	movff	_logf$1218+3,___flmul@b+3
  1795   0015F6  C08A  F005         	movff	logf@z,___flmul@a
  1796   0015FA  C08B  F006         	movff	logf@z+1,___flmul@a+1
  1797   0015FE  C08C  F007         	movff	logf@z+2,___flmul@a+2
  1798   001602  C08D  F008         	movff	logf@z+3,___flmul@a+3
  1799   001606  EC88  F00E         	call	___flmul	;wreg free
  1800   00160A  C001  F068         	movff	?___flmul,logf@t2
  1801   00160E  C002  F069         	movff	?___flmul+1,logf@t2+1
  1802   001612  C003  F06A         	movff	?___flmul+2,logf@t2+2
  1803   001616  C004  F06B         	movff	?___flmul+3,logf@t2+3
  1804   00161A  C068  F01A         	movff	logf@t2,___fladd@b
  1805   00161E  C069  F01B         	movff	logf@t2+1,___fladd@b+1
  1806   001622  C06A  F01C         	movff	logf@t2+2,___fladd@b+2
  1807   001626  C06B  F01D         	movff	logf@t2+3,___fladd@b+3
  1808   00162A  C064  F01E         	movff	logf@t1,___fladd@a
  1809   00162E  C065  F01F         	movff	logf@t1+1,___fladd@a+1
  1810   001632  C066  F020         	movff	logf@t1+2,___fladd@a+2
  1811   001636  C067  F021         	movff	logf@t1+3,___fladd@a+3
  1812   00163A  EC28  F00C         	call	___fladd	;wreg free
  1813   00163E  C01A  F060         	movff	?___fladd,logf@R
  1814   001642  C01B  F061         	movff	?___fladd+1,logf@R+1
  1815   001646  C01C  F062         	movff	?___fladd+2,logf@R+2
  1816   00164A  C01D  F063         	movff	?___fladd+3,logf@R+3
  1817   00164E  0E00               	movlw	0
  1818   001650  6E05               	movwf	___flmul@a^0,c
  1819   001652  0E00               	movlw	0
  1820   001654  6E06               	movwf	(___flmul@a+1)^0,c
  1821   001656  0E00               	movlw	0
  1822   001658  6E07               	movwf	(___flmul@a+2)^0,c
  1823   00165A  0E3F               	movlw	63
  1824   00165C  6E08               	movwf	(___flmul@a+3)^0,c
  1825   00165E  C096  F001         	movff	logf@ux,___flmul@b
  1826   001662  C097  F002         	movff	logf@ux+1,___flmul@b+1
  1827   001666  C098  F003         	movff	logf@ux+2,___flmul@b+2
  1828   00166A  C099  F004         	movff	logf@ux+3,___flmul@b+3
  1829   00166E  EC88  F00E         	call	___flmul	;wreg free
  1830   001672  C001  F092         	movff	?___flmul,_logf$1218
  1831   001676  C002  F093         	movff	?___flmul+1,_logf$1218+1
  1832   00167A  C003  F094         	movff	?___flmul+2,_logf$1218+2
  1833   00167E  C004  F095         	movff	?___flmul+3,_logf$1218+3
  1834   001682  C092  F001         	movff	_logf$1218,___flmul@b
  1835   001686  C093  F002         	movff	_logf$1218+1,___flmul@b+1
  1836   00168A  C094  F003         	movff	_logf$1218+2,___flmul@b+2
  1837   00168E  C095  F004         	movff	_logf$1218+3,___flmul@b+3
  1838   001692  C096  F005         	movff	logf@ux,___flmul@a
  1839   001696  C097  F006         	movff	logf@ux+1,___flmul@a+1
  1840   00169A  C098  F007         	movff	logf@ux+2,___flmul@a+2
  1841   00169E  C099  F008         	movff	logf@ux+3,___flmul@a+3
  1842   0016A2  EC88  F00E         	call	___flmul	;wreg free
  1843   0016A6  C001  F07E         	movff	?___flmul,logf@hfsq
  1844   0016AA  C002  F07F         	movff	?___flmul+1,logf@hfsq+1
  1845   0016AE  C003  F080         	movff	?___flmul+2,logf@hfsq+2
  1846   0016B2  C004  F081         	movff	?___flmul+3,logf@hfsq+3
  1847   0016B6  C07C  F00F         	movff	logf@k,___xxtofl@val
  1848   0016BA  C07D  F010         	movff	logf@k+1,___xxtofl@val+1
  1849   0016BE  0E00               	movlw	0
  1850   0016C0  BE10               	btfsc	(___xxtofl@val+1)^0,7,c
  1851   0016C2  0EFF               	movlw	-1
  1852   0016C4  6E11               	movwf	(___xxtofl@val+2)^0,c
  1853   0016C6  6E12               	movwf	(___xxtofl@val+3)^0,c
  1854   0016C8  0E01               	movlw	1
  1855   0016CA  EC68  F015         	call	___xxtofl
  1856   0016CE  C00F  F082         	movff	?___xxtofl,logf@dk
  1857   0016D2  C010  F083         	movff	?___xxtofl+1,logf@dk+1
  1858   0016D6  C011  F084         	movff	?___xxtofl+2,logf@dk+2
  1859   0016DA  C012  F085         	movff	?___xxtofl+3,logf@dk+3
  1860   0016DE  C086  F005         	movff	logf@s,___flmul@a
  1861   0016E2  C087  F006         	movff	logf@s+1,___flmul@a+1
  1862   0016E6  C088  F007         	movff	logf@s+2,___flmul@a+2
  1863   0016EA  C089  F008         	movff	logf@s+3,___flmul@a+3
  1864   0016EE  C060  F01E         	movff	logf@R,___fladd@a
  1865   0016F2  C061  F01F         	movff	logf@R+1,___fladd@a+1
  1866   0016F6  C062  F020         	movff	logf@R+2,___fladd@a+2
  1867   0016FA  C063  F021         	movff	logf@R+3,___fladd@a+3
  1868   0016FE  C07E  F01A         	movff	logf@hfsq,___fladd@b
  1869   001702  C07F  F01B         	movff	logf@hfsq+1,___fladd@b+1
  1870   001706  C080  F01C         	movff	logf@hfsq+2,___fladd@b+2
  1871   00170A  C081  F01D         	movff	logf@hfsq+3,___fladd@b+3
  1872   00170E  EC28  F00C         	call	___fladd	;wreg free
  1873   001712  C01A  F001         	movff	?___fladd,___flmul@b
  1874   001716  C01B  F002         	movff	?___fladd+1,___flmul@b+1
  1875   00171A  C01C  F003         	movff	?___fladd+2,___flmul@b+2
  1876   00171E  C01D  F004         	movff	?___fladd+3,___flmul@b+3
  1877   001722  EC88  F00E         	call	___flmul	;wreg free
  1878   001726  C001  F06C         	movff	?___flmul,_logf$1219
  1879   00172A  C002  F06D         	movff	?___flmul+1,_logf$1219+1
  1880   00172E  C003  F06E         	movff	?___flmul+2,_logf$1219+2
  1881   001732  C004  F06F         	movff	?___flmul+3,_logf$1219+3
  1882   001736  0ED1               	movlw	209
  1883   001738  6E05               	movwf	___flmul@a^0,c
  1884   00173A  0EF7               	movlw	247
  1885   00173C  6E06               	movwf	(___flmul@a+1)^0,c
  1886   00173E  0E17               	movlw	23
  1887   001740  6E07               	movwf	(___flmul@a+2)^0,c
  1888   001742  0E37               	movlw	55
  1889   001744  6E08               	movwf	(___flmul@a+3)^0,c
  1890   001746  C082  F001         	movff	logf@dk,___flmul@b
  1891   00174A  C083  F002         	movff	logf@dk+1,___flmul@b+1
  1892   00174E  C084  F003         	movff	logf@dk+2,___flmul@b+2
  1893   001752  C085  F004         	movff	logf@dk+3,___flmul@b+3
  1894   001756  EC88  F00E         	call	___flmul	;wreg free
  1895   00175A  C001  F01E         	movff	?___flmul,___fladd@a
  1896   00175E  C002  F01F         	movff	?___flmul+1,___fladd@a+1
  1897   001762  C003  F020         	movff	?___flmul+2,___fladd@a+2
  1898   001766  C004  F021         	movff	?___flmul+3,___fladd@a+3
  1899   00176A  C06C  F01A         	movff	_logf$1219,___fladd@b
  1900   00176E  C06D  F01B         	movff	_logf$1219+1,___fladd@b+1
  1901   001772  C06E  F01C         	movff	_logf$1219+2,___fladd@b+2
  1902   001776  C06F  F01D         	movff	_logf$1219+3,___fladd@b+3
  1903   00177A  EC28  F00C         	call	___fladd	;wreg free
  1904   00177E  C01A  F070         	movff	?___fladd,_logf$1220
  1905   001782  C01B  F071         	movff	?___fladd+1,_logf$1220+1
  1906   001786  C01C  F072         	movff	?___fladd+2,_logf$1220+2
  1907   00178A  C01D  F073         	movff	?___fladd+3,_logf$1220+3
  1908   00178E  C07E  F02E         	movff	logf@hfsq,___flsub@a
  1909   001792  C07F  F02F         	movff	logf@hfsq+1,___flsub@a+1
  1910   001796  C080  F030         	movff	logf@hfsq+2,___flsub@a+2
  1911   00179A  C081  F031         	movff	logf@hfsq+3,___flsub@a+3
  1912   00179E  C070  F02A         	movff	_logf$1220,___flsub@b
  1913   0017A2  C071  F02B         	movff	_logf$1220+1,___flsub@b+1
  1914   0017A6  C072  F02C         	movff	_logf$1220+2,___flsub@b+2
  1915   0017AA  C073  F02D         	movff	_logf$1220+3,___flsub@b+3
  1916   0017AE  ECC4  F01A         	call	___flsub	;wreg free
  1917   0017B2  C02A  F074         	movff	?___flsub,_logf$1221
  1918   0017B6  C02B  F075         	movff	?___flsub+1,_logf$1221+1
  1919   0017BA  C02C  F076         	movff	?___flsub+2,_logf$1221+2
  1920   0017BE  C02D  F077         	movff	?___flsub+3,_logf$1221+3
  1921   0017C2  C096  F01E         	movff	logf@ux,___fladd@a
  1922   0017C6  C097  F01F         	movff	logf@ux+1,___fladd@a+1
  1923   0017CA  C098  F020         	movff	logf@ux+2,___fladd@a+2
  1924   0017CE  C099  F021         	movff	logf@ux+3,___fladd@a+3
  1925   0017D2  C074  F01A         	movff	_logf$1221,___fladd@b
  1926   0017D6  C075  F01B         	movff	_logf$1221+1,___fladd@b+1
  1927   0017DA  C076  F01C         	movff	_logf$1221+2,___fladd@b+2
  1928   0017DE  C077  F01D         	movff	_logf$1221+3,___fladd@b+3
  1929   0017E2  EC28  F00C         	call	___fladd	;wreg free
  1930   0017E6  C01A  F078         	movff	?___fladd,_logf$1222
  1931   0017EA  C01B  F079         	movff	?___fladd+1,_logf$1222+1
  1932   0017EE  C01C  F07A         	movff	?___fladd+2,_logf$1222+2
  1933   0017F2  C01D  F07B         	movff	?___fladd+3,_logf$1222+3
  1934   0017F6  C078  F01A         	movff	_logf$1222,___fladd@b
  1935   0017FA  C079  F01B         	movff	_logf$1222+1,___fladd@b+1
  1936   0017FE  C07A  F01C         	movff	_logf$1222+2,___fladd@b+2
  1937   001802  C07B  F01D         	movff	_logf$1222+3,___fladd@b+3
  1938   001806  0E80               	movlw	128
  1939   001808  6E05               	movwf	___flmul@a^0,c
  1940   00180A  0E71               	movlw	113
  1941   00180C  6E06               	movwf	(___flmul@a+1)^0,c
  1942   00180E  0E31               	movlw	49
  1943   001810  6E07               	movwf	(___flmul@a+2)^0,c
  1944   001812  0E3F               	movlw	63
  1945   001814  6E08               	movwf	(___flmul@a+3)^0,c
  1946   001816  C082  F001         	movff	logf@dk,___flmul@b
  1947   00181A  C083  F002         	movff	logf@dk+1,___flmul@b+1
  1948   00181E  C084  F003         	movff	logf@dk+2,___flmul@b+2
  1949   001822  C085  F004         	movff	logf@dk+3,___flmul@b+3
  1950   001826  EC88  F00E         	call	___flmul	;wreg free
  1951   00182A  C001  F01E         	movff	?___flmul,___fladd@a
  1952   00182E  C002  F01F         	movff	?___flmul+1,___fladd@a+1
  1953   001832  C003  F020         	movff	?___flmul+2,___fladd@a+2
  1954   001836  C004  F021         	movff	?___flmul+3,___fladd@a+3
  1955   00183A  EC28  F00C         	call	___fladd	;wreg free
  1956   00183E  C01A  F043         	movff	?___fladd,?_logf
  1957   001842  C01B  F044         	movff	?___fladd+1,?_logf+1
  1958   001846  C01C  F045         	movff	?___fladd+2,?_logf+2
  1959   00184A  C01D  F046         	movff	?___fladd+3,?_logf+3
  1960   00184E                     l890:
  1961   00184E  0012               	return		;funcret
  1962   001850                     __end_of_logf:
  1963                           	callstack 0
  1964                           
  1965 ;; *************** function ___xxtofl *****************
  1966 ;; Defined at:
  1967 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\xxtofl.c"
  1968 ;; Parameters:    Size  Location     Type
  1969 ;;  sign            1    wreg     unsigned char 
  1970 ;;  val             4   14[COMRAM] long 
  1971 ;; Auto vars:     Size  Location     Type
  1972 ;;  sign            1   22[COMRAM] unsigned char 
  1973 ;;  arg             4   24[COMRAM] unsigned long 
  1974 ;;  exp             1   23[COMRAM] unsigned char 
  1975 ;; Return value:  Size  Location     Type
  1976 ;;                  4   14[COMRAM] unsigned char 
  1977 ;; Registers used:
  1978 ;;		wreg, status,2, status,0
  1979 ;; Tracked objects:
  1980 ;;		On entry : 0/0
  1981 ;;		On exit  : 0/0
  1982 ;;		Unchanged: 0/0
  1983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1984 ;;      Params:         4       0       0       0       0       0       0       0       0
  1985 ;;      Locals:         6       0       0       0       0       0       0       0       0
  1986 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1987 ;;      Totals:        14       0       0       0       0       0       0       0       0
  1988 ;;Total ram usage:       14 bytes
  1989 ;; Hardware stack levels used: 1
  1990 ;; This function calls:
  1991 ;;		Nothing
  1992 ;; This function is called by:
  1993 ;;		_termistorin
  1994 ;;		_logf
  1995 ;;		_termistorout
  1996 ;; This function uses a non-reentrant model
  1997 ;;
  1998                           
  1999                           	psect	text4
  2000   002AD0                     __ptext4:
  2001                           	callstack 0
  2002   002AD0                     ___xxtofl:
  2003                           	callstack 27
  2004                           
  2005                           ;incstack = 0
  2006                           ;___xxtofl@sign stored from wreg
  2007   002AD0  6E17               	movwf	___xxtofl@sign^0,c
  2008   002AD2  5017               	movf	___xxtofl@sign^0,w,c
  2009   002AD4  B4D8               	btfsc	status,2,c
  2010   002AD6  EF6F  F015         	goto	u3601
  2011   002ADA  EF71  F015         	goto	u3600
  2012   002ADE                     u3601:
  2013   002ADE  EF93  F015         	goto	l851
  2014   002AE2                     u3600:
  2015   002AE2  BE12               	btfsc	(___xxtofl@val+3)^0,7,c
  2016   002AE4  EF78  F015         	goto	u3610
  2017   002AE8  EF76  F015         	goto	u3611
  2018   002AEC                     u3611:
  2019   002AEC  EF93  F015         	goto	l851
  2020   002AF0                     u3610:
  2021   002AF0  C00F  F013         	movff	___xxtofl@val,??___xxtofl
  2022   002AF4  C010  F014         	movff	___xxtofl@val+1,??___xxtofl+1
  2023   002AF8  C011  F015         	movff	___xxtofl@val+2,??___xxtofl+2
  2024   002AFC  C012  F016         	movff	___xxtofl@val+3,??___xxtofl+3
  2025   002B00  1E13               	comf	??___xxtofl^0,f,c
  2026   002B02  1E14               	comf	(??___xxtofl+1)^0,f,c
  2027   002B04  1E15               	comf	(??___xxtofl+2)^0,f,c
  2028   002B06  1E16               	comf	(??___xxtofl+3)^0,f,c
  2029   002B08  2A13               	incf	??___xxtofl^0,f,c
  2030   002B0A  0E00               	movlw	0
  2031   002B0C  2214               	addwfc	(??___xxtofl+1)^0,f,c
  2032   002B0E  2215               	addwfc	(??___xxtofl+2)^0,f,c
  2033   002B10  2216               	addwfc	(??___xxtofl+3)^0,f,c
  2034   002B12  C013  F019         	movff	??___xxtofl,___xxtofl@arg
  2035   002B16  C014  F01A         	movff	??___xxtofl+1,___xxtofl@arg+1
  2036   002B1A  C015  F01B         	movff	??___xxtofl+2,___xxtofl@arg+2
  2037   002B1E  C016  F01C         	movff	??___xxtofl+3,___xxtofl@arg+3
  2038   002B22  EF9B  F015         	goto	l3409
  2039   002B26                     l851:
  2040   002B26  C00F  F019         	movff	___xxtofl@val,___xxtofl@arg
  2041   002B2A  C010  F01A         	movff	___xxtofl@val+1,___xxtofl@arg+1
  2042   002B2E  C011  F01B         	movff	___xxtofl@val+2,___xxtofl@arg+2
  2043   002B32  C012  F01C         	movff	___xxtofl@val+3,___xxtofl@arg+3
  2044   002B36                     l3409:
  2045   002B36  500F               	movf	___xxtofl@val^0,w,c
  2046   002B38  1010               	iorwf	(___xxtofl@val+1)^0,w,c
  2047   002B3A  1011               	iorwf	(___xxtofl@val+2)^0,w,c
  2048   002B3C  1012               	iorwf	(___xxtofl@val+3)^0,w,c
  2049   002B3E  A4D8               	btfss	status,2,c
  2050   002B40  EFA4  F015         	goto	u3621
  2051   002B44  EFA6  F015         	goto	u3620
  2052   002B48                     u3621:
  2053   002B48  EFB0  F015         	goto	l3415
  2054   002B4C                     u3620:
  2055   002B4C  0E00               	movlw	0
  2056   002B4E  6E0F               	movwf	?___xxtofl^0,c
  2057   002B50  0E00               	movlw	0
  2058   002B52  6E10               	movwf	(?___xxtofl+1)^0,c
  2059   002B54  0E00               	movlw	0
  2060   002B56  6E11               	movwf	(?___xxtofl+2)^0,c
  2061   002B58  0E00               	movlw	0
  2062   002B5A  6E12               	movwf	(?___xxtofl+3)^0,c
  2063   002B5C  EF41  F016         	goto	l854
  2064   002B60                     l3415:
  2065   002B60  0E96               	movlw	150
  2066   002B62  6E18               	movwf	___xxtofl@exp^0,c
  2067   002B64  EFBA  F015         	goto	l3419
  2068   002B68                     l3417:
  2069   002B68  2A18               	incf	___xxtofl@exp^0,f,c
  2070   002B6A  90D8               	bcf	status,0,c
  2071   002B6C  321C               	rrcf	(___xxtofl@arg+3)^0,f,c
  2072   002B6E  321B               	rrcf	(___xxtofl@arg+2)^0,f,c
  2073   002B70  321A               	rrcf	(___xxtofl@arg+1)^0,f,c
  2074   002B72  3219               	rrcf	___xxtofl@arg^0,f,c
  2075   002B74                     l3419:
  2076   002B74  0E00               	movlw	0
  2077   002B76  1419               	andwf	___xxtofl@arg^0,w,c
  2078   002B78  6E13               	movwf	??___xxtofl^0,c
  2079   002B7A  0E00               	movlw	0
  2080   002B7C  141A               	andwf	(___xxtofl@arg+1)^0,w,c
  2081   002B7E  6E14               	movwf	(??___xxtofl+1)^0,c
  2082   002B80  0E00               	movlw	0
  2083   002B82  141B               	andwf	(___xxtofl@arg+2)^0,w,c
  2084   002B84  6E15               	movwf	(??___xxtofl+2)^0,c
  2085   002B86  0EFE               	movlw	254
  2086   002B88  141C               	andwf	(___xxtofl@arg+3)^0,w,c
  2087   002B8A  6E16               	movwf	(??___xxtofl+3)^0,c
  2088   002B8C  5013               	movf	??___xxtofl^0,w,c
  2089   002B8E  1014               	iorwf	(??___xxtofl+1)^0,w,c
  2090   002B90  1015               	iorwf	(??___xxtofl+2)^0,w,c
  2091   002B92  1016               	iorwf	(??___xxtofl+3)^0,w,c
  2092   002B94  A4D8               	btfss	status,2,c
  2093   002B96  EFCF  F015         	goto	u3631
  2094   002B9A  EFD1  F015         	goto	u3630
  2095   002B9E                     u3631:
  2096   002B9E  EFB4  F015         	goto	l3417
  2097   002BA2                     u3630:
  2098   002BA2  EFDF  F015         	goto	l858
  2099   002BA6                     l3421:
  2100   002BA6  2A18               	incf	___xxtofl@exp^0,f,c
  2101   002BA8  0E01               	movlw	1
  2102   002BAA  2619               	addwf	___xxtofl@arg^0,f,c
  2103   002BAC  0E00               	movlw	0
  2104   002BAE  221A               	addwfc	(___xxtofl@arg+1)^0,f,c
  2105   002BB0  221B               	addwfc	(___xxtofl@arg+2)^0,f,c
  2106   002BB2  221C               	addwfc	(___xxtofl@arg+3)^0,f,c
  2107   002BB4  90D8               	bcf	status,0,c
  2108   002BB6  321C               	rrcf	(___xxtofl@arg+3)^0,f,c
  2109   002BB8  321B               	rrcf	(___xxtofl@arg+2)^0,f,c
  2110   002BBA  321A               	rrcf	(___xxtofl@arg+1)^0,f,c
  2111   002BBC  3219               	rrcf	___xxtofl@arg^0,f,c
  2112   002BBE                     l858:
  2113   002BBE  0E00               	movlw	0
  2114   002BC0  1419               	andwf	___xxtofl@arg^0,w,c
  2115   002BC2  6E13               	movwf	??___xxtofl^0,c
  2116   002BC4  0E00               	movlw	0
  2117   002BC6  141A               	andwf	(___xxtofl@arg+1)^0,w,c
  2118   002BC8  6E14               	movwf	(??___xxtofl+1)^0,c
  2119   002BCA  0E00               	movlw	0
  2120   002BCC  141B               	andwf	(___xxtofl@arg+2)^0,w,c
  2121   002BCE  6E15               	movwf	(??___xxtofl+2)^0,c
  2122   002BD0  0EFF               	movlw	255
  2123   002BD2  141C               	andwf	(___xxtofl@arg+3)^0,w,c
  2124   002BD4  6E16               	movwf	(??___xxtofl+3)^0,c
  2125   002BD6  5013               	movf	??___xxtofl^0,w,c
  2126   002BD8  1014               	iorwf	(??___xxtofl+1)^0,w,c
  2127   002BDA  1015               	iorwf	(??___xxtofl+2)^0,w,c
  2128   002BDC  1016               	iorwf	(??___xxtofl+3)^0,w,c
  2129   002BDE  A4D8               	btfss	status,2,c
  2130   002BE0  EFF4  F015         	goto	u3641
  2131   002BE4  EFF6  F015         	goto	u3640
  2132   002BE8                     u3641:
  2133   002BE8  EFD3  F015         	goto	l3421
  2134   002BEC                     u3640:
  2135   002BEC  EFFE  F015         	goto	l3429
  2136   002BF0                     l3427:
  2137   002BF0  0618               	decf	___xxtofl@exp^0,f,c
  2138   002BF2  90D8               	bcf	status,0,c
  2139   002BF4  3619               	rlcf	___xxtofl@arg^0,f,c
  2140   002BF6  361A               	rlcf	(___xxtofl@arg+1)^0,f,c
  2141   002BF8  361B               	rlcf	(___xxtofl@arg+2)^0,f,c
  2142   002BFA  361C               	rlcf	(___xxtofl@arg+3)^0,f,c
  2143   002BFC                     l3429:
  2144   002BFC  BE1B               	btfsc	(___xxtofl@arg+2)^0,7,c
  2145   002BFE  EF03  F016         	goto	u3651
  2146   002C02  EF05  F016         	goto	u3650
  2147   002C06                     u3651:
  2148   002C06  EF0D  F016         	goto	l865
  2149   002C0A                     u3650:
  2150   002C0A  0E02               	movlw	2
  2151   002C0C  6018               	cpfslt	___xxtofl@exp^0,c
  2152   002C0E  EF0B  F016         	goto	u3661
  2153   002C12  EF0D  F016         	goto	u3660
  2154   002C16                     u3661:
  2155   002C16  EFF8  F015         	goto	l3427
  2156   002C1A                     u3660:
  2157   002C1A                     l865:
  2158   002C1A  B018               	btfsc	___xxtofl@exp^0,0,c
  2159   002C1C  EF12  F016         	goto	u3671
  2160   002C20  EF14  F016         	goto	u3670
  2161   002C24                     u3671:
  2162   002C24  EF15  F016         	goto	l3435
  2163   002C28                     u3670:
  2164   002C28  9E1B               	bcf	(___xxtofl@arg+2)^0,7,c
  2165   002C2A                     l3435:
  2166   002C2A  90D8               	bcf	status,0,c
  2167   002C2C  3218               	rrcf	___xxtofl@exp^0,f,c
  2168   002C2E  C018  F013         	movff	___xxtofl@exp,??___xxtofl
  2169   002C32  6A14               	clrf	(??___xxtofl+1)^0,c
  2170   002C34  6A15               	clrf	(??___xxtofl+2)^0,c
  2171   002C36  6A16               	clrf	(??___xxtofl+3)^0,c
  2172   002C38  C013  F016         	movff	??___xxtofl,??___xxtofl+3
  2173   002C3C  6A15               	clrf	(??___xxtofl+2)^0,c
  2174   002C3E  6A14               	clrf	(??___xxtofl+1)^0,c
  2175   002C40  6A13               	clrf	??___xxtofl^0,c
  2176   002C42  5013               	movf	??___xxtofl^0,w,c
  2177   002C44  1219               	iorwf	___xxtofl@arg^0,f,c
  2178   002C46  5014               	movf	(??___xxtofl+1)^0,w,c
  2179   002C48  121A               	iorwf	(___xxtofl@arg+1)^0,f,c
  2180   002C4A  5015               	movf	(??___xxtofl+2)^0,w,c
  2181   002C4C  121B               	iorwf	(___xxtofl@arg+2)^0,f,c
  2182   002C4E  5016               	movf	(??___xxtofl+3)^0,w,c
  2183   002C50  121C               	iorwf	(___xxtofl@arg+3)^0,f,c
  2184   002C52  5017               	movf	___xxtofl@sign^0,w,c
  2185   002C54  B4D8               	btfsc	status,2,c
  2186   002C56  EF2F  F016         	goto	u3681
  2187   002C5A  EF31  F016         	goto	u3680
  2188   002C5E                     u3681:
  2189   002C5E  EF39  F016         	goto	l3445
  2190   002C62                     u3680:
  2191   002C62  BE12               	btfsc	(___xxtofl@val+3)^0,7,c
  2192   002C64  EF38  F016         	goto	u3690
  2193   002C68  EF36  F016         	goto	u3691
  2194   002C6C                     u3691:
  2195   002C6C  EF39  F016         	goto	l3445
  2196   002C70                     u3690:
  2197   002C70  8E1C               	bsf	(___xxtofl@arg+3)^0,7,c
  2198   002C72                     l3445:
  2199   002C72  C019  F00F         	movff	___xxtofl@arg,?___xxtofl
  2200   002C76  C01A  F010         	movff	___xxtofl@arg+1,?___xxtofl+1
  2201   002C7A  C01B  F011         	movff	___xxtofl@arg+2,?___xxtofl+2
  2202   002C7E  C01C  F012         	movff	___xxtofl@arg+3,?___xxtofl+3
  2203   002C82                     l854:
  2204   002C82  0012               	return		;funcret
  2205   002C84                     __end_of___xxtofl:
  2206                           	callstack 0
  2207                           
  2208 ;; *************** function ___aldiv *****************
  2209 ;; Defined at:
  2210 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\aldiv.c"
  2211 ;; Parameters:    Size  Location     Type
  2212 ;;  dividend        4    0[COMRAM] long 
  2213 ;;  divisor         4    4[COMRAM] long 
  2214 ;; Auto vars:     Size  Location     Type
  2215 ;;  quotient        4   10[COMRAM] long 
  2216 ;;  sign            1    9[COMRAM] unsigned char 
  2217 ;;  counter         1    8[COMRAM] unsigned char 
  2218 ;; Return value:  Size  Location     Type
  2219 ;;                  4    0[COMRAM] long 
  2220 ;; Registers used:
  2221 ;;		wreg, status,2, status,0
  2222 ;; Tracked objects:
  2223 ;;		On entry : 0/0
  2224 ;;		On exit  : 0/0
  2225 ;;		Unchanged: 0/0
  2226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2227 ;;      Params:         8       0       0       0       0       0       0       0       0
  2228 ;;      Locals:         6       0       0       0       0       0       0       0       0
  2229 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2230 ;;      Totals:        14       0       0       0       0       0       0       0       0
  2231 ;;Total ram usage:       14 bytes
  2232 ;; Hardware stack levels used: 1
  2233 ;; This function calls:
  2234 ;;		Nothing
  2235 ;; This function is called by:
  2236 ;;		_termistorin
  2237 ;;		_termistorout
  2238 ;; This function uses a non-reentrant model
  2239 ;;
  2240                           
  2241                           	psect	text5
  2242   002C84                     __ptext5:
  2243                           	callstack 0
  2244   002C84                     ___aldiv:
  2245                           	callstack 28
  2246   002C84  0E00               	movlw	0
  2247   002C86  6E0A               	movwf	___aldiv@sign^0,c
  2248   002C88  BE08               	btfsc	(___aldiv@divisor+3)^0,7,c
  2249   002C8A  EF4B  F016         	goto	u3810
  2250   002C8E  EF49  F016         	goto	u3811
  2251   002C92                     u3811:
  2252   002C92  EF55  F016         	goto	l3613
  2253   002C96                     u3810:
  2254   002C96  1E08               	comf	(___aldiv@divisor+3)^0,f,c
  2255   002C98  1E07               	comf	(___aldiv@divisor+2)^0,f,c
  2256   002C9A  1E06               	comf	(___aldiv@divisor+1)^0,f,c
  2257   002C9C  6C05               	negf	___aldiv@divisor^0,c
  2258   002C9E  0E00               	movlw	0
  2259   002CA0  2206               	addwfc	(___aldiv@divisor+1)^0,f,c
  2260   002CA2  2207               	addwfc	(___aldiv@divisor+2)^0,f,c
  2261   002CA4  2208               	addwfc	(___aldiv@divisor+3)^0,f,c
  2262   002CA6  0E01               	movlw	1
  2263   002CA8  6E0A               	movwf	___aldiv@sign^0,c
  2264   002CAA                     l3613:
  2265   002CAA  BE04               	btfsc	(___aldiv@dividend+3)^0,7,c
  2266   002CAC  EF5C  F016         	goto	u3820
  2267   002CB0  EF5A  F016         	goto	u3821
  2268   002CB4                     u3821:
  2269   002CB4  EF66  F016         	goto	l3619
  2270   002CB8                     u3820:
  2271   002CB8  1E04               	comf	(___aldiv@dividend+3)^0,f,c
  2272   002CBA  1E03               	comf	(___aldiv@dividend+2)^0,f,c
  2273   002CBC  1E02               	comf	(___aldiv@dividend+1)^0,f,c
  2274   002CBE  6C01               	negf	___aldiv@dividend^0,c
  2275   002CC0  0E00               	movlw	0
  2276   002CC2  2202               	addwfc	(___aldiv@dividend+1)^0,f,c
  2277   002CC4  2203               	addwfc	(___aldiv@dividend+2)^0,f,c
  2278   002CC6  2204               	addwfc	(___aldiv@dividend+3)^0,f,c
  2279   002CC8  0E01               	movlw	1
  2280   002CCA  1A0A               	xorwf	___aldiv@sign^0,f,c
  2281   002CCC                     l3619:
  2282   002CCC  0E00               	movlw	0
  2283   002CCE  6E0B               	movwf	___aldiv@quotient^0,c
  2284   002CD0  0E00               	movlw	0
  2285   002CD2  6E0C               	movwf	(___aldiv@quotient+1)^0,c
  2286   002CD4  0E00               	movlw	0
  2287   002CD6  6E0D               	movwf	(___aldiv@quotient+2)^0,c
  2288   002CD8  0E00               	movlw	0
  2289   002CDA  6E0E               	movwf	(___aldiv@quotient+3)^0,c
  2290   002CDC  5005               	movf	___aldiv@divisor^0,w,c
  2291   002CDE  1006               	iorwf	(___aldiv@divisor+1)^0,w,c
  2292   002CE0  1007               	iorwf	(___aldiv@divisor+2)^0,w,c
  2293   002CE2  1008               	iorwf	(___aldiv@divisor+3)^0,w,c
  2294   002CE4  B4D8               	btfsc	status,2,c
  2295   002CE6  EF77  F016         	goto	u3831
  2296   002CEA  EF79  F016         	goto	u3830
  2297   002CEE                     u3831:
  2298   002CEE  EFAF  F016         	goto	l3641
  2299   002CF2                     u3830:
  2300   002CF2  0E01               	movlw	1
  2301   002CF4  6E09               	movwf	___aldiv@counter^0,c
  2302   002CF6  EF83  F016         	goto	l3627
  2303   002CFA                     l3625:
  2304   002CFA  90D8               	bcf	status,0,c
  2305   002CFC  3605               	rlcf	___aldiv@divisor^0,f,c
  2306   002CFE  3606               	rlcf	(___aldiv@divisor+1)^0,f,c
  2307   002D00  3607               	rlcf	(___aldiv@divisor+2)^0,f,c
  2308   002D02  3608               	rlcf	(___aldiv@divisor+3)^0,f,c
  2309   002D04  2A09               	incf	___aldiv@counter^0,f,c
  2310   002D06                     l3627:
  2311   002D06  AE08               	btfss	(___aldiv@divisor+3)^0,7,c
  2312   002D08  EF88  F016         	goto	u3841
  2313   002D0C  EF8A  F016         	goto	u3840
  2314   002D10                     u3841:
  2315   002D10  EF7D  F016         	goto	l3625
  2316   002D14                     u3840:
  2317   002D14                     l3629:
  2318   002D14  90D8               	bcf	status,0,c
  2319   002D16  360B               	rlcf	___aldiv@quotient^0,f,c
  2320   002D18  360C               	rlcf	(___aldiv@quotient+1)^0,f,c
  2321   002D1A  360D               	rlcf	(___aldiv@quotient+2)^0,f,c
  2322   002D1C  360E               	rlcf	(___aldiv@quotient+3)^0,f,c
  2323   002D1E  5005               	movf	___aldiv@divisor^0,w,c
  2324   002D20  5C01               	subwf	___aldiv@dividend^0,w,c
  2325   002D22  5006               	movf	(___aldiv@divisor+1)^0,w,c
  2326   002D24  5802               	subwfb	(___aldiv@dividend+1)^0,w,c
  2327   002D26  5007               	movf	(___aldiv@divisor+2)^0,w,c
  2328   002D28  5803               	subwfb	(___aldiv@dividend+2)^0,w,c
  2329   002D2A  5008               	movf	(___aldiv@divisor+3)^0,w,c
  2330   002D2C  5804               	subwfb	(___aldiv@dividend+3)^0,w,c
  2331   002D2E  A0D8               	btfss	status,0,c
  2332   002D30  EF9C  F016         	goto	u3851
  2333   002D34  EF9E  F016         	goto	u3850
  2334   002D38                     u3851:
  2335   002D38  EFA7  F016         	goto	l3637
  2336   002D3C                     u3850:
  2337   002D3C  5005               	movf	___aldiv@divisor^0,w,c
  2338   002D3E  5E01               	subwf	___aldiv@dividend^0,f,c
  2339   002D40  5006               	movf	(___aldiv@divisor+1)^0,w,c
  2340   002D42  5A02               	subwfb	(___aldiv@dividend+1)^0,f,c
  2341   002D44  5007               	movf	(___aldiv@divisor+2)^0,w,c
  2342   002D46  5A03               	subwfb	(___aldiv@dividend+2)^0,f,c
  2343   002D48  5008               	movf	(___aldiv@divisor+3)^0,w,c
  2344   002D4A  5A04               	subwfb	(___aldiv@dividend+3)^0,f,c
  2345   002D4C  800B               	bsf	___aldiv@quotient^0,0,c
  2346   002D4E                     l3637:
  2347   002D4E  90D8               	bcf	status,0,c
  2348   002D50  3208               	rrcf	(___aldiv@divisor+3)^0,f,c
  2349   002D52  3207               	rrcf	(___aldiv@divisor+2)^0,f,c
  2350   002D54  3206               	rrcf	(___aldiv@divisor+1)^0,f,c
  2351   002D56  3205               	rrcf	___aldiv@divisor^0,f,c
  2352   002D58  2E09               	decfsz	___aldiv@counter^0,f,c
  2353   002D5A  EF8A  F016         	goto	l3629
  2354   002D5E                     l3641:
  2355   002D5E  500A               	movf	___aldiv@sign^0,w,c
  2356   002D60  B4D8               	btfsc	status,2,c
  2357   002D62  EFB5  F016         	goto	u3861
  2358   002D66  EFB7  F016         	goto	u3860
  2359   002D6A                     u3861:
  2360   002D6A  EFBF  F016         	goto	l3645
  2361   002D6E                     u3860:
  2362   002D6E  1E0E               	comf	(___aldiv@quotient+3)^0,f,c
  2363   002D70  1E0D               	comf	(___aldiv@quotient+2)^0,f,c
  2364   002D72  1E0C               	comf	(___aldiv@quotient+1)^0,f,c
  2365   002D74  6C0B               	negf	___aldiv@quotient^0,c
  2366   002D76  0E00               	movlw	0
  2367   002D78  220C               	addwfc	(___aldiv@quotient+1)^0,f,c
  2368   002D7A  220D               	addwfc	(___aldiv@quotient+2)^0,f,c
  2369   002D7C  220E               	addwfc	(___aldiv@quotient+3)^0,f,c
  2370   002D7E                     l3645:
  2371   002D7E  C00B  F001         	movff	___aldiv@quotient,?___aldiv
  2372   002D82  C00C  F002         	movff	___aldiv@quotient+1,?___aldiv+1
  2373   002D86  C00D  F003         	movff	___aldiv@quotient+2,?___aldiv+2
  2374   002D8A  C00E  F004         	movff	___aldiv@quotient+3,?___aldiv+3
  2375   002D8E  0012               	return		;funcret
  2376   002D90                     __end_of___aldiv:
  2377                           	callstack 0
  2378                           
  2379 ;; *************** function _sprintf *****************
  2380 ;; Defined at:
  2381 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_sprintf.c"
  2382 ;; Parameters:    Size  Location     Type
  2383 ;;  s               2   57[BANK0 ] PTR unsigned char 
  2384 ;;		 -> TempoutSTR(32), TempinSTR(32), 
  2385 ;;  fmt             1   59[BANK0 ] PTR const unsigned char 
  2386 ;;		 -> STR_3(15), STR_2(14), 
  2387 ;; Auto vars:     Size  Location     Type
  2388 ;;  f              12   67[BANK0 ] struct _IO_FILE
  2389 ;;  ret             2    0        int 
  2390 ;;  ap              1   66[BANK0 ] PTR void [1]
  2391 ;;		 -> ?_sprintf(2), 
  2392 ;; Return value:  Size  Location     Type
  2393 ;;                  2   57[BANK0 ] int 
  2394 ;; Registers used:
  2395 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2396 ;; Tracked objects:
  2397 ;;		On entry : 0/0
  2398 ;;		On exit  : 0/0
  2399 ;;		Unchanged: 0/0
  2400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2401 ;;      Params:         0       9       0       0       0       0       0       0       0
  2402 ;;      Locals:         0      13       0       0       0       0       0       0       0
  2403 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2404 ;;      Totals:         0      22       0       0       0       0       0       0       0
  2405 ;;Total ram usage:       22 bytes
  2406 ;; Hardware stack levels used: 1
  2407 ;; Hardware stack levels required when called: 7
  2408 ;; This function calls:
  2409 ;;		_vfprintf
  2410 ;; This function is called by:
  2411 ;;		_menu
  2412 ;; This function uses a non-reentrant model
  2413 ;;
  2414                           
  2415                           	psect	text6
  2416   003610                     __ptext6:
  2417                           	callstack 0
  2418   003610                     _sprintf:
  2419                           	callstack 22
  2420   003610  0E9C               	movlw	low (?_sprintf+3)
  2421   003612  0100               	movlb	0	; () banked
  2422   003614  6FA2               	movwf	sprintf@ap& (0+255),b
  2423   003616  C099  F0A3         	movff	sprintf@s,sprintf@f
  2424   00361A  C09A  F0A4         	movff	sprintf@s+1,sprintf@f+1
  2425   00361E                     
  2426                           ; BSR set to: 0
  2427   00361E  0E00               	movlw	0
  2428   003620  6FA7               	movwf	(sprintf@f+4)& (0+255),b
  2429   003622  0E00               	movlw	0
  2430   003624  6FA6               	movwf	(sprintf@f+3)& (0+255),b
  2431   003626                     
  2432                           ; BSR set to: 0
  2433   003626  0E00               	movlw	0
  2434   003628  6FAE               	movwf	(sprintf@f+11)& (0+255),b
  2435   00362A  0E00               	movlw	0
  2436   00362C  6FAD               	movwf	(sprintf@f+10)& (0+255),b
  2437   00362E                     
  2438                           ; BSR set to: 0
  2439   00362E  0EA3               	movlw	low sprintf@f
  2440   003630  6F95               	movwf	vfprintf@fp& (0+255),b
  2441   003632  C09B  F096         	movff	sprintf@fmt,vfprintf@fmt
  2442   003636  0EA2               	movlw	low sprintf@ap
  2443   003638  6F97               	movwf	vfprintf@ap& (0+255),b
  2444   00363A  ECE7  F01A         	call	_vfprintf	;wreg free
  2445   00363E  0100               	movlb	0	; () banked
  2446   003640  51A6               	movf	(sprintf@f+3)& (0+255),w,b
  2447   003642  2599               	addwf	sprintf@s& (0+255),w,b
  2448   003644  6ED9               	movwf	fsr2l,c
  2449   003646  51A7               	movf	(sprintf@f+4)& (0+255),w,b
  2450   003648  219A               	addwfc	(sprintf@s+1)& (0+255),w,b
  2451   00364A  6EDA               	movwf	fsr2h,c
  2452   00364C  6ADF               	clrf	indf2,c
  2453   00364E                     
  2454                           ; BSR set to: 0
  2455   00364E  0012               	return		;funcret
  2456   003650                     __end_of_sprintf:
  2457                           	callstack 0
  2458                           
  2459 ;; *************** function _vfprintf *****************
  2460 ;; Defined at:
  2461 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  2462 ;; Parameters:    Size  Location     Type
  2463 ;;  fp              1   53[BANK0 ] PTR struct _IO_FILE
  2464 ;;		 -> sprintf@f(12), 
  2465 ;;  fmt             1   54[BANK0 ] PTR const unsigned char 
  2466 ;;		 -> STR_3(15), STR_2(14), 
  2467 ;;  ap              1   55[BANK0 ] PTR PTR void 
  2468 ;;		 -> sprintf@ap(1), 
  2469 ;; Auto vars:     Size  Location     Type
  2470 ;;  cfmt            1   56[BANK0 ] PTR unsigned char 
  2471 ;;		 -> STR_3(15), STR_2(14), 
  2472 ;; Return value:  Size  Location     Type
  2473 ;;                  2   53[BANK0 ] int 
  2474 ;; Registers used:
  2475 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2476 ;; Tracked objects:
  2477 ;;		On entry : 0/0
  2478 ;;		On exit  : 0/0
  2479 ;;		Unchanged: 0/0
  2480 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2481 ;;      Params:         0       3       0       0       0       0       0       0       0
  2482 ;;      Locals:         0       1       0       0       0       0       0       0       0
  2483 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2484 ;;      Totals:         0       4       0       0       0       0       0       0       0
  2485 ;;Total ram usage:        4 bytes
  2486 ;; Hardware stack levels used: 1
  2487 ;; Hardware stack levels required when called: 6
  2488 ;; This function calls:
  2489 ;;		_vfpfcnvrt
  2490 ;; This function is called by:
  2491 ;;		_sprintf
  2492 ;; This function uses a non-reentrant model
  2493 ;;
  2494                           
  2495                           	psect	text7
  2496   0035CE                     __ptext7:
  2497                           	callstack 0
  2498   0035CE                     _vfprintf:
  2499                           	callstack 22
  2500   0035CE                     
  2501                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  2502   0035CE  C096  F098         	movff	vfprintf@fmt,vfprintf@cfmt
  2503                           
  2504                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  2505   0035D2  EFF4  F01A         	goto	l4879
  2506   0035D6                     l4877:
  2507                           
  2508                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  2509   0035D6  C095  F08C         	movff	vfprintf@fp,vfpfcnvrt@fp
  2510   0035DA  0E98               	movlw	low vfprintf@cfmt
  2511   0035DC  0100               	movlb	0	; () banked
  2512   0035DE  6F8D               	movwf	vfpfcnvrt@fmt& (0+255),b
  2513   0035E0  C097  F08E         	movff	vfprintf@ap,vfpfcnvrt@ap
  2514   0035E4  EC6A  F012         	call	_vfpfcnvrt	;wreg free
  2515   0035E8                     l4879:
  2516                           
  2517                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  2518   0035E8  C098  FFF6         	movff	vfprintf@cfmt,tblptrl
  2519   0035EC                     	if	1	;There is more than 1 active tblptr byte
  2520   0035EC  0E08               	movlw	high __smallconst
  2521   0035EE  6EF7               	movwf	tblptrh,c
  2522   0035F0                     	endif
  2523   0035F0                     	if	0	;tblptru may be non-zero
  2524   0035F0                     	endif
  2525   0035F0                     	if	0	;tblptru may be non-zero
  2526   0035F0                     	endif
  2527   0035F0  0008               	tblrd		*
  2528   0035F2  50F5               	movf	tablat,w,c
  2529   0035F4  0900               	iorlw	0
  2530   0035F6  A4D8               	btfss	status,2,c
  2531   0035F8  EF00  F01B         	goto	u5591
  2532   0035FC  EF02  F01B         	goto	u5590
  2533   003600                     u5591:
  2534   003600  EFEB  F01A         	goto	l4877
  2535   003604                     u5590:
  2536   003604                     
  2537                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  2538   003604  0E00               	movlw	0
  2539   003606  0100               	movlb	0	; () banked
  2540   003608  6F96               	movwf	(?_vfprintf+1)& (0+255),b
  2541   00360A  0E00               	movlw	0
  2542   00360C  6F95               	movwf	?_vfprintf& (0+255),b
  2543   00360E                     
  2544                           ; BSR set to: 0
  2545   00360E  0012               	return		;funcret
  2546   003610                     __end_of_vfprintf:
  2547                           	callstack 0
  2548                           
  2549 ;; *************** function _vfpfcnvrt *****************
  2550 ;; Defined at:
  2551 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  2552 ;; Parameters:    Size  Location     Type
  2553 ;;  fp              1   44[BANK0 ] PTR struct _IO_FILE
  2554 ;;		 -> sprintf@f(12), 
  2555 ;;  fmt             1   45[BANK0 ] PTR PTR unsigned char 
  2556 ;;		 -> vfprintf@cfmt(1), 
  2557 ;;  ap              1   46[BANK0 ] PTR PTR void 
  2558 ;;		 -> sprintf@ap(1), 
  2559 ;; Auto vars:     Size  Location     Type
  2560 ;;  convarg         4   47[BANK0 ] struct .
  2561 ;;  cp              1   52[BANK0 ] PTR unsigned char 
  2562 ;;		 -> STR_3(15), STR_2(14), 
  2563 ;;  c               1   51[BANK0 ] unsigned char 
  2564 ;;  done            1    0        _Bool 
  2565 ;; Return value:  Size  Location     Type
  2566 ;;                  1    wreg      void 
  2567 ;; Registers used:
  2568 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2569 ;; Tracked objects:
  2570 ;;		On entry : 0/0
  2571 ;;		On exit  : 0/0
  2572 ;;		Unchanged: 0/0
  2573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2574 ;;      Params:         0       3       0       0       0       0       0       0       0
  2575 ;;      Locals:         0       6       0       0       0       0       0       0       0
  2576 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2577 ;;      Totals:         1       9       0       0       0       0       0       0       0
  2578 ;;Total ram usage:       10 bytes
  2579 ;; Hardware stack levels used: 1
  2580 ;; Hardware stack levels required when called: 5
  2581 ;; This function calls:
  2582 ;;		_efgtoa
  2583 ;;		_fputc
  2584 ;;		_read_prec_or_width
  2585 ;; This function is called by:
  2586 ;;		_vfprintf
  2587 ;; This function uses a non-reentrant model
  2588 ;;
  2589                           
  2590                           	psect	text8
  2591   0024D4                     __ptext8:
  2592                           	callstack 0
  2593   0024D4                     _vfpfcnvrt:
  2594                           	callstack 22
  2595   0024D4                     
  2596                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  2597   0024D4  0100               	movlb	0	; () banked
  2598   0024D6  518D               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2599   0024D8  6ED9               	movwf	fsr2l,c
  2600   0024DA  6ADA               	clrf	fsr2h,c
  2601   0024DC  CFDF FFF6          	movff	indf2,tblptrl
  2602   0024E0                     	if	1	;There is more than 1 active tblptr byte
  2603   0024E0  0E08               	movlw	high __smallconst
  2604   0024E2  6EF7               	movwf	tblptrh,c
  2605   0024E4                     	endif
  2606   0024E4                     	if	0	;tblptru may be non-zero
  2607   0024E4                     	endif
  2608   0024E4                     	if	0	;tblptru may be non-zero
  2609   0024E4                     	endif
  2610   0024E4  0008               	tblrd		*
  2611   0024E6  50F5               	movf	tablat,w,c
  2612   0024E8  0A25               	xorlw	37
  2613   0024EA  A4D8               	btfss	status,2,c
  2614   0024EC  EF7A  F012         	goto	u5481
  2615   0024F0  EF7C  F012         	goto	u5480
  2616   0024F4                     u5481:
  2617   0024F4  EF6A  F013         	goto	l4793
  2618   0024F8                     u5480:
  2619   0024F8                     
  2620                           ; BSR set to: 0
  2621                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  2622   0024F8  518D               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2623   0024FA  6ED9               	movwf	fsr2l,c
  2624   0024FC  6ADA               	clrf	fsr2h,c
  2625   0024FE  2ADF               	incf	indf2,f,c
  2626   002500                     
  2627                           ; BSR set to: 0
  2628                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  2629   002500  0E00               	movlw	0
  2630   002502  6FCA               	movwf	(_width+1)& (0+255),b
  2631   002504  0E00               	movlw	0
  2632   002506  6FC9               	movwf	_width& (0+255),b
  2633   002508  C0C9  F0D3         	movff	_width,_flags
  2634   00250C                     
  2635                           ; BSR set to: 0
  2636                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  2637   00250C  69CB               	setf	_prec& (0+255),b
  2638   00250E  69CC               	setf	(_prec+1)& (0+255),b
  2639   002510                     
  2640                           ; BSR set to: 0
  2641                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1265:         if 
      +                          ((*fmt)[0] == '.') {
  2642   002510  518D               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2643   002512  6ED9               	movwf	fsr2l,c
  2644   002514  6ADA               	clrf	fsr2h,c
  2645   002516  CFDF FFF6          	movff	indf2,tblptrl
  2646   00251A                     	if	1	;There is more than 1 active tblptr byte
  2647   00251A  0E08               	movlw	high __smallconst
  2648   00251C  6EF7               	movwf	tblptrh,c
  2649   00251E                     	endif
  2650   00251E                     	if	0	;tblptru may be non-zero
  2651   00251E                     	endif
  2652   00251E                     	if	0	;tblptru may be non-zero
  2653   00251E                     	endif
  2654   00251E  0008               	tblrd		*
  2655   002520  50F5               	movf	tablat,w,c
  2656   002522  0A2E               	xorlw	46
  2657   002524  A4D8               	btfss	status,2,c
  2658   002526  EF97  F012         	goto	u5491
  2659   00252A  EF99  F012         	goto	u5490
  2660   00252E                     u5491:
  2661   00252E  EFA7  F012         	goto	l4745
  2662   002532                     u5490:
  2663   002532                     
  2664                           ; BSR set to: 0
  2665                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1266:            
      +                           ++*fmt;
  2666   002532  518D               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2667   002534  6ED9               	movwf	fsr2l,c
  2668   002536  6ADA               	clrf	fsr2h,c
  2669   002538  2ADF               	incf	indf2,f,c
  2670   00253A                     
  2671                           ; BSR set to: 0
  2672                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1267:    prec = r
      +                          ead_prec_or_width(fmt, ap);
  2673   00253A  C08D  F007         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  2674   00253E  C08E  F008         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  2675   002542  ECC0  F019         	call	_read_prec_or_width	;wreg free
  2676   002546  C007  F0CB         	movff	?_read_prec_or_width,_prec
  2677   00254A  C008  F0CC         	movff	?_read_prec_or_width+1,_prec+1
  2678   00254E                     l4745:
  2679                           
  2680                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1273:         if 
      +                          ((*fmt)[0] == 'c') {
  2681   00254E  0100               	movlb	0	; () banked
  2682   002550  518D               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2683   002552  6ED9               	movwf	fsr2l,c
  2684   002554  6ADA               	clrf	fsr2h,c
  2685   002556  CFDF FFF6          	movff	indf2,tblptrl
  2686   00255A                     	if	1	;There is more than 1 active tblptr byte
  2687   00255A  0E08               	movlw	high __smallconst
  2688   00255C  6EF7               	movwf	tblptrh,c
  2689   00255E                     	endif
  2690   00255E                     	if	0	;tblptru may be non-zero
  2691   00255E                     	endif
  2692   00255E                     	if	0	;tblptru may be non-zero
  2693   00255E                     	endif
  2694   00255E  0008               	tblrd		*
  2695   002560  50F5               	movf	tablat,w,c
  2696   002562  0A63               	xorlw	99
  2697   002564  A4D8               	btfss	status,2,c
  2698   002566  EFB7  F012         	goto	u5501
  2699   00256A  EFB9  F012         	goto	u5500
  2700   00256E                     u5501:
  2701   00256E  EFD0  F012         	goto	l4755
  2702   002572                     u5500:
  2703   002572                     
  2704                           ; BSR set to: 0
  2705                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1274:            
      +                           ++*fmt;
  2706   002572  518D               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2707   002574  6ED9               	movwf	fsr2l,c
  2708   002576  6ADA               	clrf	fsr2h,c
  2709   002578  2ADF               	incf	indf2,f,c
  2710   00257A                     
  2711                           ; BSR set to: 0
  2712                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1275:            
      +                           c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  2713   00257A  518E               	movf	vfpfcnvrt@ap& (0+255),w,b
  2714   00257C  6ED9               	movwf	fsr2l,c
  2715   00257E  6ADA               	clrf	fsr2h,c
  2716   002580  50DF               	movf	indf2,w,c
  2717   002582  2ADF               	incf	indf2,f,c
  2718   002584  2ADF               	incf	indf2,f,c
  2719   002586  6ED9               	movwf	fsr2l,c
  2720   002588  6ADA               	clrf	fsr2h,c
  2721   00258A  50DF               	movf	indf2,w,c
  2722   00258C  6F93               	movwf	vfpfcnvrt@c& (0+255),b
  2723   00258E                     
  2724                           ; BSR set to: 0
  2725                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1277:    fputc(c,
      +                           fp);
  2726   00258E  C093  F001         	movff	vfpfcnvrt@c,fputc@c
  2727   002592  6A02               	clrf	(fputc@c+1)^0,c
  2728   002594  C08C  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2729   002598  ECB3  F018         	call	_fputc	;wreg free
  2730   00259C  EF7B  F013         	goto	l1001
  2731   0025A0                     l4755:
  2732                           
  2733                           ; BSR set to: 0
  2734                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1689:   cp = *fmt
      +                          ;
  2735   0025A0  518D               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2736   0025A2  6ED9               	movwf	fsr2l,c
  2737   0025A4  6ADA               	clrf	fsr2h,c
  2738   0025A6  50DF               	movf	indf2,w,c
  2739   0025A8  6F94               	movwf	vfpfcnvrt@cp& (0+255),b
  2740   0025AA                     
  2741                           ; BSR set to: 0
  2742                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1690:   c = *cp;
  2743   0025AA  C094  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2744   0025AE                     	if	1	;There is more than 1 active tblptr byte
  2745   0025AE  0E08               	movlw	high __smallconst
  2746   0025B0  6EF7               	movwf	tblptrh,c
  2747   0025B2                     	endif
  2748   0025B2                     	if	0	;tblptru may be non-zero
  2749   0025B2                     	endif
  2750   0025B2                     	if	0	;tblptru may be non-zero
  2751   0025B2                     	endif
  2752   0025B2  0008               	tblrd		*
  2753   0025B4  CFF5 F093          	movff	tablat,vfpfcnvrt@c
  2754                           
  2755                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1691:   switch(c)
      +                           {
  2756   0025B8  EFE9  F012         	goto	l4767
  2757   0025BC                     l4759:
  2758                           
  2759                           ; BSR set to: 0
  2760                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1695:     cp++;
  2761   0025BC  2B94               	incf	vfpfcnvrt@cp& (0+255),f,b
  2762                           
  2763                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1696:     break;
  2764   0025BE  EFF8  F012         	goto	l4769
  2765   0025C2                     l4761:
  2766                           
  2767                           ; BSR set to: 0
  2768                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1721:     c = 'l'
      +                          ;
  2769   0025C2  0E6C               	movlw	108
  2770   0025C4  6F93               	movwf	vfpfcnvrt@c& (0+255),b
  2771                           
  2772                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1722:     break;
  2773   0025C6  EFF8  F012         	goto	l4769
  2774   0025CA                     l4763:
  2775                           
  2776                           ; BSR set to: 0
  2777                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1724:     c = 0;
  2778   0025CA  0E00               	movlw	0
  2779   0025CC  6F93               	movwf	vfpfcnvrt@c& (0+255),b
  2780                           
  2781                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1725:     break;
  2782   0025CE  EFF8  F012         	goto	l4769
  2783   0025D2                     l4767:
  2784                           
  2785                           ; BSR set to: 0
  2786   0025D2  5193               	movf	vfpfcnvrt@c& (0+255),w,b
  2787                           
  2788                           ; Switch size 1, requested type "simple"
  2789                           ; Number of cases is 3, Range of values is 76 to 108
  2790                           ; switch strategies available:
  2791                           ; Name         Instructions Cycles
  2792                           ; simple_byte           10     6 (average)
  2793                           ;	Chosen strategy is simple_byte
  2794   0025D4  0A4C               	xorlw	76	; case 76
  2795   0025D6  B4D8               	btfsc	status,2,c
  2796   0025D8  EFDE  F012         	goto	l4759
  2797   0025DC  0A2A               	xorlw	42	; case 102
  2798   0025DE  B4D8               	btfsc	status,2,c
  2799   0025E0  EFE1  F012         	goto	l4761
  2800   0025E4  0A0A               	xorlw	10	; case 108
  2801   0025E6  B4D8               	btfsc	status,2,c
  2802   0025E8  EFDE  F012         	goto	l4759
  2803   0025EC  EFE5  F012         	goto	l4763
  2804   0025F0                     l4769:
  2805                           
  2806                           ; BSR set to: 0
  2807   0025F0  C094  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2808   0025F4                     	if	1	;There is more than 1 active tblptr byte
  2809   0025F4  0E08               	movlw	high __smallconst
  2810   0025F6  6EF7               	movwf	tblptrh,c
  2811   0025F8                     	endif
  2812   0025F8                     	if	0	;tblptru may be non-zero
  2813   0025F8                     	endif
  2814   0025F8                     	if	0	;tblptru may be non-zero
  2815   0025F8                     	endif
  2816   0025F8  0008               	tblrd		*
  2817   0025FA  50F5               	movf	tablat,w,c
  2818   0025FC  0A66               	xorlw	102
  2819   0025FE  A4D8               	btfss	status,2,c
  2820   002600  EF04  F013         	goto	u5511
  2821   002604  EF06  F013         	goto	u5510
  2822   002608                     u5511:
  2823   002608  EF63  F013         	goto	l4789
  2824   00260C                     u5510:
  2825   00260C  EF30  F013         	goto	l4777
  2826   002610                     l4771:
  2827                           
  2828                           ; BSR set to: 0
  2829                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1756:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2830   002610  518E               	movf	vfpfcnvrt@ap& (0+255),w,b
  2831   002612  6ED9               	movwf	fsr2l,c
  2832   002614  6ADA               	clrf	fsr2h,c
  2833   002616  CFDF F05F          	movff	indf2,??_vfpfcnvrt
  2834   00261A  0E04               	movlw	4
  2835   00261C  26DF               	addwf	indf2,f,c
  2836   00261E  505F               	movf	??_vfpfcnvrt^0,w,c
  2837   002620  6ED9               	movwf	fsr2l,c
  2838   002622  6ADA               	clrf	fsr2h,c
  2839   002624  CFDE F08F          	movff	postinc2,vfpfcnvrt@convarg
  2840   002628  CFDE F090          	movff	postinc2,vfpfcnvrt@convarg+1
  2841   00262C  CFDE F091          	movff	postinc2,vfpfcnvrt@convarg+2
  2842   002630  CFDE F092          	movff	postinc2,vfpfcnvrt@convarg+3
  2843                           
  2844                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1757:      break;
  2845   002634  EF3B  F013         	goto	l4779
  2846   002638                     l4773:
  2847                           
  2848                           ; BSR set to: 0
  2849                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1759:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  2850   002638  518E               	movf	vfpfcnvrt@ap& (0+255),w,b
  2851   00263A  6ED9               	movwf	fsr2l,c
  2852   00263C  6ADA               	clrf	fsr2h,c
  2853   00263E  CFDF F05F          	movff	indf2,??_vfpfcnvrt
  2854   002642  0E04               	movlw	4
  2855   002644  26DF               	addwf	indf2,f,c
  2856   002646  505F               	movf	??_vfpfcnvrt^0,w,c
  2857   002648  6ED9               	movwf	fsr2l,c
  2858   00264A  6ADA               	clrf	fsr2h,c
  2859   00264C  CFDE F08F          	movff	postinc2,vfpfcnvrt@convarg
  2860   002650  CFDE F090          	movff	postinc2,vfpfcnvrt@convarg+1
  2861   002654  CFDE F091          	movff	postinc2,vfpfcnvrt@convarg+2
  2862   002658  CFDE F092          	movff	postinc2,vfpfcnvrt@convarg+3
  2863                           
  2864                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1760:      break;
  2865   00265C  EF3B  F013         	goto	l4779
  2866   002660                     l4777:
  2867                           
  2868                           ; BSR set to: 0
  2869   002660  5193               	movf	vfpfcnvrt@c& (0+255),w,b
  2870                           
  2871                           ; Switch size 1, requested type "simple"
  2872                           ; Number of cases is 2, Range of values is 76 to 108
  2873                           ; switch strategies available:
  2874                           ; Name         Instructions Cycles
  2875                           ; simple_byte            7     4 (average)
  2876                           ;	Chosen strategy is simple_byte
  2877   002662  0A4C               	xorlw	76	; case 76
  2878   002664  B4D8               	btfsc	status,2,c
  2879   002666  EF1C  F013         	goto	l4773
  2880   00266A  0A20               	xorlw	32	; case 108
  2881   00266C  B4D8               	btfsc	status,2,c
  2882   00266E  EF08  F013         	goto	l4771
  2883   002672  EF3B  F013         	goto	l4779
  2884   002676                     l4779:
  2885                           
  2886                           ; BSR set to: 0
  2887                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1762:    *fmt = c
      +                          p+1;
  2888   002676  518D               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2889   002678  6ED9               	movwf	fsr2l,c
  2890   00267A  6ADA               	clrf	fsr2h,c
  2891   00267C  2994               	incf	vfpfcnvrt@cp& (0+255),w,b
  2892   00267E  6EDF               	movwf	indf2,c
  2893                           
  2894                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1763:    switch (
      +                          *cp) {
  2895   002680  EF57  F013         	goto	l4787
  2896   002684                     l4781:
  2897                           
  2898                           ; BSR set to: 0
  2899                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1790:      return
      +                           (void) efgtoa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
  2900   002684  C08C  F057         	movff	vfpfcnvrt@fp,efgtoa@fp
  2901   002688  C08F  F058         	movff	vfpfcnvrt@convarg,efgtoa@f
  2902   00268C  C090  F059         	movff	vfpfcnvrt@convarg+1,efgtoa@f+1
  2903   002690  C091  F05A         	movff	vfpfcnvrt@convarg+2,efgtoa@f+2
  2904   002694  C092  F05B         	movff	vfpfcnvrt@convarg+3,efgtoa@f+3
  2905   002698  C094  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2906   00269C                     	if	1	;There is more than 1 active tblptr byte
  2907   00269C  0E08               	movlw	high __smallconst
  2908   00269E  6EF7               	movwf	tblptrh,c
  2909   0026A0                     	endif
  2910   0026A0                     	if	0	;tblptru may be non-zero
  2911   0026A0                     	endif
  2912   0026A0                     	if	0	;tblptru may be non-zero
  2913   0026A0                     	endif
  2914   0026A0  0008               	tblrd		*
  2915   0026A2  CFF5 F05C          	movff	tablat,efgtoa@c
  2916   0026A6  EC26  F004         	call	_efgtoa	;wreg free
  2917   0026AA  EF7B  F013         	goto	l1001
  2918   0026AE                     l4787:
  2919                           
  2920                           ; BSR set to: 0
  2921   0026AE  C094  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2922   0026B2                     	if	1	;There is more than 1 active tblptr byte
  2923   0026B2  0E08               	movlw	high __smallconst
  2924   0026B4  6EF7               	movwf	tblptrh,c
  2925   0026B6                     	endif
  2926   0026B6                     	if	0	;tblptru may be non-zero
  2927   0026B6                     	endif
  2928   0026B6                     	if	0	;tblptru may be non-zero
  2929   0026B6                     	endif
  2930   0026B6  0008               	tblrd		*
  2931   0026B8  50F5               	movf	tablat,w,c
  2932                           
  2933                           ; Switch size 1, requested type "simple"
  2934                           ; Number of cases is 1, Range of values is 102 to 102
  2935                           ; switch strategies available:
  2936                           ; Name         Instructions Cycles
  2937                           ; simple_byte            4     3 (average)
  2938                           ;	Chosen strategy is simple_byte
  2939   0026BA  0A66               	xorlw	102	; case 102
  2940   0026BC  B4D8               	btfsc	status,2,c
  2941   0026BE  EF42  F013         	goto	l4781
  2942   0026C2  EF63  F013         	goto	l4789
  2943   0026C6                     l4789:
  2944                           
  2945                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  2946   0026C6  0100               	movlb	0	; () banked
  2947   0026C8  518D               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2948   0026CA  6ED9               	movwf	fsr2l,c
  2949   0026CC  6ADA               	clrf	fsr2h,c
  2950   0026CE  2ADF               	incf	indf2,f,c
  2951   0026D0  EF7B  F013         	goto	l1001
  2952   0026D4                     l4793:
  2953                           
  2954                           ; BSR set to: 0
  2955                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  2956   0026D4  518D               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2957   0026D6  6ED9               	movwf	fsr2l,c
  2958   0026D8  6ADA               	clrf	fsr2h,c
  2959   0026DA  CFDF FFF6          	movff	indf2,tblptrl
  2960   0026DE                     	if	1	;There is more than 1 active tblptr byte
  2961   0026DE  0E08               	movlw	high __smallconst
  2962   0026E0  6EF7               	movwf	tblptrh,c
  2963   0026E2                     	endif
  2964   0026E2                     	if	0	;tblptru may be non-zero
  2965   0026E2                     	endif
  2966   0026E2                     	if	0	;tblptru may be non-zero
  2967   0026E2                     	endif
  2968   0026E2  0008               	tblrd		*
  2969   0026E4  50F5               	movf	tablat,w,c
  2970   0026E6  6E01               	movwf	fputc@c^0,c
  2971   0026E8  6A02               	clrf	(fputc@c+1)^0,c
  2972   0026EA  C08C  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2973   0026EE  ECB3  F018         	call	_fputc	;wreg free
  2974   0026F2  EF63  F013         	goto	l4789
  2975   0026F6                     l1001:
  2976   0026F6  0012               	return		;funcret
  2977   0026F8                     __end_of_vfpfcnvrt:
  2978                           	callstack 0
  2979                           
  2980 ;; *************** function _read_prec_or_width *****************
  2981 ;; Defined at:
  2982 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  2983 ;; Parameters:    Size  Location     Type
  2984 ;;  fmt             1    6[COMRAM] PTR PTR const unsigned c
  2985 ;;		 -> vfprintf@cfmt(1), 
  2986 ;;  ap              1    7[COMRAM] PTR PTR void [1]
  2987 ;;		 -> sprintf@ap(1), 
  2988 ;; Auto vars:     Size  Location     Type
  2989 ;;  c               1    8[COMRAM] unsigned char 
  2990 ;;  n               2    9[COMRAM] int 
  2991 ;; Return value:  Size  Location     Type
  2992 ;;                  2    6[COMRAM] int 
  2993 ;; Registers used:
  2994 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2995 ;; Tracked objects:
  2996 ;;		On entry : 0/0
  2997 ;;		On exit  : 0/0
  2998 ;;		Unchanged: 0/0
  2999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3000 ;;      Params:         2       0       0       0       0       0       0       0       0
  3001 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3002 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3003 ;;      Totals:         5       0       0       0       0       0       0       0       0
  3004 ;;Total ram usage:        5 bytes
  3005 ;; Hardware stack levels used: 1
  3006 ;; Hardware stack levels required when called: 1
  3007 ;; This function calls:
  3008 ;;		___wmul
  3009 ;; This function is called by:
  3010 ;;		_vfpfcnvrt
  3011 ;; This function uses a non-reentrant model
  3012 ;;
  3013                           
  3014                           	psect	text9
  3015   003380                     __ptext9:
  3016                           	callstack 0
  3017   003380                     _read_prec_or_width:
  3018                           	callstack 25
  3019   003380                     
  3020                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1159:     int n =
      +                           0;
  3021   003380  0E00               	movlw	0
  3022   003382  6E0B               	movwf	(read_prec_or_width@n+1)^0,c
  3023   003384  0E00               	movlw	0
  3024   003386  6E0A               	movwf	read_prec_or_width@n^0,c
  3025   003388                     
  3026                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1160:     if ((*f
      +                          mt)[0] == '*') {
  3027   003388  5007               	movf	read_prec_or_width@fmt^0,w,c
  3028   00338A  6ED9               	movwf	fsr2l,c
  3029   00338C  6ADA               	clrf	fsr2h,c
  3030   00338E  CFDF FFF6          	movff	indf2,tblptrl
  3031   003392                     	if	1	;There is more than 1 active tblptr byte
  3032   003392  0E08               	movlw	high __smallconst
  3033   003394  6EF7               	movwf	tblptrh,c
  3034   003396                     	endif
  3035   003396                     	if	0	;tblptru may be non-zero
  3036   003396                     	endif
  3037   003396                     	if	0	;tblptru may be non-zero
  3038   003396                     	endif
  3039   003396  0008               	tblrd		*
  3040   003398  50F5               	movf	tablat,w,c
  3041   00339A  0A2A               	xorlw	42
  3042   00339C  A4D8               	btfss	status,2,c
  3043   00339E  EFD3  F019         	goto	u5461
  3044   0033A2  EFD5  F019         	goto	u5460
  3045   0033A6                     u5461:
  3046   0033A6  EFFB  F019         	goto	l4729
  3047   0033AA                     u5460:
  3048   0033AA                     
  3049                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1161:         ++*
      +                          fmt;
  3050   0033AA  5007               	movf	read_prec_or_width@fmt^0,w,c
  3051   0033AC  6ED9               	movwf	fsr2l,c
  3052   0033AE  6ADA               	clrf	fsr2h,c
  3053   0033B0  2ADF               	incf	indf2,f,c
  3054   0033B2                     
  3055                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1162:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
  3056   0033B2  5008               	movf	read_prec_or_width@ap^0,w,c
  3057   0033B4  6ED9               	movwf	fsr2l,c
  3058   0033B6  6ADA               	clrf	fsr2h,c
  3059   0033B8  0E02               	movlw	2
  3060   0033BA  26DF               	addwf	indf2,f,c
  3061   0033BC  5CDF               	subwf	indf2,w,c
  3062   0033BE  6ED9               	movwf	fsr2l,c
  3063   0033C0  6ADA               	clrf	fsr2h,c
  3064   0033C2  CFDE F00A          	movff	postinc2,read_prec_or_width@n
  3065   0033C6  CFDE F00B          	movff	postinc2,read_prec_or_width@n+1
  3066                           
  3067                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1163:     } else 
      +                          {
  3068   0033CA  EF0E  F01A         	goto	l991
  3069   0033CE                     l4725:
  3070                           
  3071                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1166:            
      +                           n = n * 10 + c;
  3072   0033CE  C00A  F001         	movff	read_prec_or_width@n,___wmul@multiplier
  3073   0033D2  C00B  F002         	movff	read_prec_or_width@n+1,___wmul@multiplier+1
  3074   0033D6  0E00               	movlw	0
  3075   0033D8  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  3076   0033DA  0E0A               	movlw	10
  3077   0033DC  6E03               	movwf	___wmul@multiplicand^0,c
  3078   0033DE  ECD9  F01B         	call	___wmul	;wreg free
  3079   0033E2  5009               	movf	read_prec_or_width@c^0,w,c
  3080   0033E4  2401               	addwf	?___wmul^0,w,c
  3081   0033E6  6E0A               	movwf	read_prec_or_width@n^0,c
  3082   0033E8  0E00               	movlw	0
  3083   0033EA  2002               	addwfc	(?___wmul+1)^0,w,c
  3084   0033EC  6E0B               	movwf	(read_prec_or_width@n+1)^0,c
  3085   0033EE                     
  3086                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1167:            
      +                           ++*fmt;
  3087   0033EE  5007               	movf	read_prec_or_width@fmt^0,w,c
  3088   0033F0  6ED9               	movwf	fsr2l,c
  3089   0033F2  6ADA               	clrf	fsr2h,c
  3090   0033F4  2ADF               	incf	indf2,f,c
  3091   0033F6                     l4729:
  3092                           
  3093                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1165:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  3094   0033F6  5007               	movf	read_prec_or_width@fmt^0,w,c
  3095   0033F8  6ED9               	movwf	fsr2l,c
  3096   0033FA  6ADA               	clrf	fsr2h,c
  3097   0033FC  CFDF FFF6          	movff	indf2,tblptrl
  3098   003400                     	if	1	;There is more than 1 active tblptr byte
  3099   003400  0E08               	movlw	high __smallconst
  3100   003402  6EF7               	movwf	tblptrh,c
  3101   003404                     	endif
  3102   003404                     	if	0	;tblptru may be non-zero
  3103   003404                     	endif
  3104   003404                     	if	0	;tblptru may be non-zero
  3105   003404                     	endif
  3106   003404  0008               	tblrd		*
  3107   003406  50F5               	movf	tablat,w,c
  3108   003408  0FD0               	addlw	208
  3109   00340A  6E09               	movwf	read_prec_or_width@c^0,c
  3110   00340C  0E09               	movlw	9
  3111   00340E  6409               	cpfsgt	read_prec_or_width@c^0,c
  3112   003410  EF0C  F01A         	goto	u5471
  3113   003414  EF0E  F01A         	goto	u5470
  3114   003418                     u5471:
  3115   003418  EFE7  F019         	goto	l4725
  3116   00341C                     u5470:
  3117   00341C                     l991:
  3118                           
  3119                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1170:     return 
      +                          n;
  3120   00341C  C00A  F007         	movff	read_prec_or_width@n,?_read_prec_or_width
  3121   003420  C00B  F008         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
  3122   003424  0012               	return		;funcret
  3123   003426                     __end_of_read_prec_or_width:
  3124                           	callstack 0
  3125                           
  3126 ;; *************** function ___wmul *****************
  3127 ;; Defined at:
  3128 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul16.c"
  3129 ;; Parameters:    Size  Location     Type
  3130 ;;  multiplier      2    0[COMRAM] unsigned int 
  3131 ;;  multiplicand    2    2[COMRAM] unsigned int 
  3132 ;; Auto vars:     Size  Location     Type
  3133 ;;  product         2    4[COMRAM] unsigned int 
  3134 ;; Return value:  Size  Location     Type
  3135 ;;                  2    0[COMRAM] unsigned int 
  3136 ;; Registers used:
  3137 ;;		wreg, status,2, status,0, prodl, prodh
  3138 ;; Tracked objects:
  3139 ;;		On entry : 0/0
  3140 ;;		On exit  : 0/0
  3141 ;;		Unchanged: 0/0
  3142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3143 ;;      Params:         4       0       0       0       0       0       0       0       0
  3144 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3145 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3146 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3147 ;;Total ram usage:        6 bytes
  3148 ;; Hardware stack levels used: 1
  3149 ;; This function calls:
  3150 ;;		Nothing
  3151 ;; This function is called by:
  3152 ;;		_read_prec_or_width
  3153 ;; This function uses a non-reentrant model
  3154 ;;
  3155                           
  3156                           	psect	text10
  3157   0037B2                     __ptext10:
  3158                           	callstack 0
  3159   0037B2                     ___wmul:
  3160                           	callstack 25
  3161   0037B2  5001               	movf	___wmul@multiplier^0,w,c
  3162   0037B4  0203               	mulwf	___wmul@multiplicand^0,c
  3163   0037B6  CFF3 F005          	movff	prodl,___wmul@product
  3164   0037BA  CFF4 F006          	movff	prodh,___wmul@product+1
  3165   0037BE  5001               	movf	___wmul@multiplier^0,w,c
  3166   0037C0  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  3167   0037C2  50F3               	movf	243,w,c
  3168   0037C4  2606               	addwf	(___wmul@product+1)^0,f,c
  3169   0037C6  5002               	movf	(___wmul@multiplier+1)^0,w,c
  3170   0037C8  0203               	mulwf	___wmul@multiplicand^0,c
  3171   0037CA  50F3               	movf	243,w,c
  3172   0037CC  2606               	addwf	(___wmul@product+1)^0,f,c
  3173   0037CE  C005  F001         	movff	___wmul@product,?___wmul
  3174   0037D2  C006  F002         	movff	___wmul@product+1,?___wmul+1
  3175   0037D6  0012               	return		;funcret
  3176   0037D8                     __end_of___wmul:
  3177                           	callstack 0
  3178                           
  3179 ;; *************** function _efgtoa *****************
  3180 ;; Defined at:
  3181 ;;		line 587 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  3182 ;; Parameters:    Size  Location     Type
  3183 ;;  fp              1   86[COMRAM] PTR struct _IO_FILE
  3184 ;;		 -> sprintf@f(12), 
  3185 ;;  f               4   87[COMRAM] PTR struct _IO_FILE
  3186 ;;  c               1   91[COMRAM] unsigned char 
  3187 ;; Auto vars:     Size  Location     Type
  3188 ;;  u               4   40[BANK0 ] struct flui
  3189 ;;  g               4   34[BANK0 ] struct flui
  3190 ;;  l               4   29[BANK0 ] struct flui
  3191 ;;  h               4   25[BANK0 ] struct flui
  3192 ;;  ou              4   19[BANK0 ] struct flui
  3193 ;;  n               2   38[BANK0 ] int 
  3194 ;;  i               2   23[BANK0 ] int 
  3195 ;;  w               2   17[BANK0 ] int 
  3196 ;;  e               2   15[BANK0 ] int 
  3197 ;;  m               2   13[BANK0 ] int 
  3198 ;;  d               2   11[BANK0 ] int 
  3199 ;;  t               2    4[BANK0 ] int 
  3200 ;;  p               2    2[BANK0 ] int 
  3201 ;;  ne              2    0[BANK0 ] int 
  3202 ;;  sign            1   33[BANK0 ] unsigned char 
  3203 ;;  nmode           1   10[BANK0 ] unsigned char 
  3204 ;;  mode            1    9[BANK0 ] unsigned char 
  3205 ;;  pp              1    8[BANK0 ] unsigned char 
  3206 ;;  esign           1    0        unsigned char 
  3207 ;; Return value:  Size  Location     Type
  3208 ;;                  1    wreg      void 
  3209 ;; Registers used:
  3210 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3211 ;; Tracked objects:
  3212 ;;		On entry : 0/0
  3213 ;;		On exit  : 0/0
  3214 ;;		Unchanged: 0/0
  3215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3216 ;;      Params:         6       0       0       0       0       0       0       0       0
  3217 ;;      Locals:         0      44       0       0       0       0       0       0       0
  3218 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3219 ;;      Totals:         8      44       0       0       0       0       0       0       0
  3220 ;;Total ram usage:       52 bytes
  3221 ;; Hardware stack levels used: 1
  3222 ;; Hardware stack levels required when called: 4
  3223 ;; This function calls:
  3224 ;;		___fladd
  3225 ;;		___fldiv
  3226 ;;		___fleq
  3227 ;;		___flge
  3228 ;;		___flmul
  3229 ;;		___flneg
  3230 ;;		___flsub
  3231 ;;		___fltol
  3232 ;;		___fpclassifyf
  3233 ;;		_floorf
  3234 ;;		_labs
  3235 ;;		_memcpy
  3236 ;;		_pad
  3237 ;;		_strcpy
  3238 ;; This function is called by:
  3239 ;;		_vfpfcnvrt
  3240 ;; This function uses a non-reentrant model
  3241 ;;
  3242                           
  3243                           	psect	text11
  3244   00084C                     __ptext11:
  3245                           	callstack 0
  3246   00084C                     _efgtoa:
  3247                           	callstack 22
  3248   00084C                     
  3249                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 587: static void 
      +                          efgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.46\pic\sources
      +                          \c99\common\doprnt.c: 588: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common
      +                          \doprnt.c: 589:     char mode, nmode, pp, sign, esign;;C:\Program Files\Microchip\xc8\v2
      +                          .46\pic\sources\c99\common\doprnt.c: 590:     int d, e, i, m, n, ne, p, t, w;;C:\Program
      +                           Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 591:     long double h, l;
  3250   00084C  0E00               	movlw	0
  3251   00084E  0100               	movlb	0	; () banked
  3252   000850  6F81               	movwf	efgtoa@sign& (0+255),b
  3253   000852                     
  3254                           ; BSR set to: 0
  3255                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 596:     g.f = f;
  3256   000852  C058  F082         	movff	efgtoa@f,efgtoa@g
  3257   000856  C059  F083         	movff	efgtoa@f+1,efgtoa@g+1
  3258   00085A  C05A  F084         	movff	efgtoa@f+2,efgtoa@g+2
  3259   00085E  C05B  F085         	movff	efgtoa@f+3,efgtoa@g+3
  3260   000862                     
  3261                           ; BSR set to: 0
  3262                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 597:     if (g.f 
      +                          < 0.0) {
  3263   000862  BF85               	btfsc	(efgtoa@g+3)& (0+255),7,b
  3264   000864  EF38  F004         	goto	u5140
  3265   000868  EF36  F004         	goto	u5141
  3266   00086C                     u5141:
  3267   00086C  EF4C  F004         	goto	l4505
  3268   000870                     u5140:
  3269   000870                     
  3270                           ; BSR set to: 0
  3271                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 598:         sign
      +                           = 1;
  3272   000870  0E01               	movlw	1
  3273   000872  6F81               	movwf	efgtoa@sign& (0+255),b
  3274   000874                     
  3275                           ; BSR set to: 0
  3276                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 599:         g.f 
      +                          = -g.f;
  3277   000874  C082  F001         	movff	efgtoa@g,___flneg@f1
  3278   000878  C083  F002         	movff	efgtoa@g+1,___flneg@f1+1
  3279   00087C  C084  F003         	movff	efgtoa@g+2,___flneg@f1+2
  3280   000880  C085  F004         	movff	efgtoa@g+3,___flneg@f1+3
  3281   000884  ECA2  F01B         	call	___flneg	;wreg free
  3282   000888  C001  F082         	movff	?___flneg,efgtoa@g
  3283   00088C  C002  F083         	movff	?___flneg+1,efgtoa@g+1
  3284   000890  C003  F084         	movff	?___flneg+2,efgtoa@g+2
  3285   000894  C004  F085         	movff	?___flneg+3,efgtoa@g+3
  3286   000898                     l4505:
  3287                           
  3288                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 603:     n = 0;
  3289   000898  0E00               	movlw	0
  3290   00089A  0100               	movlb	0	; () banked
  3291   00089C  6F87               	movwf	(efgtoa@n+1)& (0+255),b
  3292   00089E  0E00               	movlw	0
  3293   0008A0  6F86               	movwf	efgtoa@n& (0+255),b
  3294   0008A2                     
  3295                           ; BSR set to: 0
  3296                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 604:     w = widt
      +                          h;
  3297   0008A2  C0C9  F071         	movff	_width,efgtoa@w
  3298   0008A6  C0CA  F072         	movff	_width+1,efgtoa@w+1
  3299   0008AA                     
  3300                           ; BSR set to: 0
  3301                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 605:     if (sign
  3302   0008AA  5181               	movf	efgtoa@sign& (0+255),w,b
  3303   0008AC  B4D8               	btfsc	status,2,c
  3304   0008AE  EF5B  F004         	goto	u5151
  3305   0008B2  EF5D  F004         	goto	u5150
  3306   0008B6                     u5151:
  3307   0008B6  EF71  F004         	goto	l4519
  3308   0008BA                     u5150:
  3309   0008BA                     
  3310                           ; BSR set to: 0
  3311                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 609:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 610:   sign = sign ? '-
      +                          ' : '+';
  3312   0008BA  5181               	movf	efgtoa@sign& (0+255),w,b
  3313   0008BC  A4D8               	btfss	status,2,c
  3314   0008BE  EF63  F004         	goto	u5161
  3315   0008C2  EF65  F004         	goto	u5160
  3316   0008C6                     u5161:
  3317   0008C6  EF6B  F004         	goto	l4515
  3318   0008CA                     u5160:
  3319   0008CA                     
  3320                           ; BSR set to: 0
  3321   0008CA  0E00               	movlw	0
  3322   0008CC  6F67               	movwf	(_efgtoa$863+1)& (0+255),b
  3323   0008CE  0E2B               	movlw	43
  3324   0008D0  6F66               	movwf	_efgtoa$863& (0+255),b
  3325   0008D2  EF6F  F004         	goto	l4517
  3326   0008D6                     l4515:
  3327                           
  3328                           ; BSR set to: 0
  3329   0008D6  0E00               	movlw	0
  3330   0008D8  6F67               	movwf	(_efgtoa$863+1)& (0+255),b
  3331   0008DA  0E2D               	movlw	45
  3332   0008DC  6F66               	movwf	_efgtoa$863& (0+255),b
  3333   0008DE                     l4517:
  3334                           
  3335                           ; BSR set to: 0
  3336   0008DE  C066  F081         	movff	_efgtoa$863,efgtoa@sign
  3337   0008E2                     l4519:
  3338                           
  3339                           ; BSR set to: 0
  3340                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 619:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
  3341   0008E2  C082  F001         	movff	efgtoa@g,___fpclassifyf@x
  3342   0008E6  C083  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3343   0008EA  C084  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3344   0008EE  C085  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3345   0008F2  ECCD  F017         	call	___fpclassifyf	;wreg free
  3346   0008F6  0401               	decf	?___fpclassifyf^0,w,c
  3347   0008F8  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  3348   0008FA  A4D8               	btfss	status,2,c
  3349   0008FC  EF82  F004         	goto	u5171
  3350   000900  EF84  F004         	goto	u5170
  3351   000904                     u5171:
  3352   000904  EFB3  F004         	goto	l4537
  3353   000908                     u5170:
  3354   000908                     
  3355                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 620:   if (sign) 
      +                          {
  3356   000908  0100               	movlb	0	; () banked
  3357   00090A  5181               	movf	efgtoa@sign& (0+255),w,b
  3358   00090C  B4D8               	btfsc	status,2,c
  3359   00090E  EF8B  F004         	goto	u5181
  3360   000912  EF8D  F004         	goto	u5180
  3361   000916                     u5181:
  3362   000916  EF96  F004         	goto	l4529
  3363   00091A                     u5180:
  3364   00091A                     
  3365                           ; BSR set to: 0
  3366                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 621:    dbuf[0] =
      +                           sign;
  3367   00091A  C081  F100         	movff	efgtoa@sign,_dbuf
  3368   00091E                     
  3369                           ; BSR set to: 0
  3370                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 622:    w--;
  3371   00091E  0771               	decf	efgtoa@w& (0+255),f,b
  3372   000920  A0D8               	btfss	status,0,c
  3373   000922  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  3374   000924                     
  3375                           ; BSR set to: 0
  3376                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 623:    n = 1;
  3377   000924  0E00               	movlw	0
  3378   000926  6F87               	movwf	(efgtoa@n+1)& (0+255),b
  3379   000928  0E01               	movlw	1
  3380   00092A  6F86               	movwf	efgtoa@n& (0+255),b
  3381   00092C                     l4529:
  3382                           
  3383                           ; BSR set to: 0
  3384                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 631:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 632:             strcpy(&d
      +                          buf[n], "inf");
  3385   00092C  0E00               	movlw	low _dbuf
  3386   00092E  2586               	addwf	efgtoa@n& (0+255),w,b
  3387   000930  6E01               	movwf	strcpy@dest^0,c
  3388   000932  0E01               	movlw	high _dbuf
  3389   000934  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3390   000936  6E02               	movwf	(strcpy@dest+1)^0,c
  3391   000938  0E43               	movlw	low STR_4
  3392   00093A  6E03               	movwf	strcpy@src^0,c
  3393   00093C  EC85  F01B         	call	_strcpy	;wreg free
  3394   000940                     l4531:
  3395                           
  3396                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 633:         };C:
      +                          \Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 634:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
  3397   000940  0100               	movlb	0	; () banked
  3398   000942  0EFD               	movlw	253
  3399   000944  2771               	addwf	efgtoa@w& (0+255),f,b
  3400   000946  0EFF               	movlw	255
  3401   000948  2372               	addwfc	(efgtoa@w+1)& (0+255),f,b
  3402   00094A                     
  3403                           ; BSR set to: 0
  3404                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 635:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
  3405   00094A  C057  F00F         	movff	efgtoa@fp,pad@fp
  3406   00094E  0E00               	movlw	low _dbuf
  3407   000950  6E10               	movwf	pad@buf^0,c
  3408   000952  0E01               	movlw	high _dbuf
  3409   000954  6E11               	movwf	(pad@buf+1)^0,c
  3410   000956  C071  F012         	movff	efgtoa@w,pad@p
  3411   00095A  C072  F013         	movff	efgtoa@w+1,pad@p+1
  3412   00095E  EC13  F01A         	call	_pad	;wreg free
  3413   000962  EF19  F009         	goto	l946
  3414   000966                     l4537:
  3415                           
  3416                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 637:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
  3417   000966  C082  F001         	movff	efgtoa@g,___fpclassifyf@x
  3418   00096A  C083  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3419   00096E  C084  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3420   000972  C085  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3421   000976  ECCD  F017         	call	___fpclassifyf	;wreg free
  3422   00097A  5001               	movf	?___fpclassifyf^0,w,c
  3423   00097C  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  3424   00097E  A4D8               	btfss	status,2,c
  3425   000980  EFC4  F004         	goto	u5191
  3426   000984  EFC6  F004         	goto	u5190
  3427   000988                     u5191:
  3428   000988  EFE4  F004         	goto	l4555
  3429   00098C                     u5190:
  3430   00098C                     
  3431                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 638:   if (sign) 
      +                          {
  3432   00098C  0100               	movlb	0	; () banked
  3433   00098E  5181               	movf	efgtoa@sign& (0+255),w,b
  3434   000990  B4D8               	btfsc	status,2,c
  3435   000992  EFCD  F004         	goto	u5201
  3436   000996  EFCF  F004         	goto	u5200
  3437   00099A                     u5201:
  3438   00099A  EFD8  F004         	goto	l4547
  3439   00099E                     u5200:
  3440   00099E                     
  3441                           ; BSR set to: 0
  3442                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 639:    dbuf[0] =
      +                           sign;
  3443   00099E  C081  F100         	movff	efgtoa@sign,_dbuf
  3444   0009A2                     
  3445                           ; BSR set to: 0
  3446                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 640:    w--;
  3447   0009A2  0771               	decf	efgtoa@w& (0+255),f,b
  3448   0009A4  A0D8               	btfss	status,0,c
  3449   0009A6  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  3450   0009A8                     
  3451                           ; BSR set to: 0
  3452                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 641:    n = 1;
  3453   0009A8  0E00               	movlw	0
  3454   0009AA  6F87               	movwf	(efgtoa@n+1)& (0+255),b
  3455   0009AC  0E01               	movlw	1
  3456   0009AE  6F86               	movwf	efgtoa@n& (0+255),b
  3457   0009B0                     l4547:
  3458                           
  3459                           ; BSR set to: 0
  3460                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 649:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 650:             strcpy(&d
      +                          buf[n], "nan");
  3461   0009B0  0E00               	movlw	low _dbuf
  3462   0009B2  2586               	addwf	efgtoa@n& (0+255),w,b
  3463   0009B4  6E01               	movwf	strcpy@dest^0,c
  3464   0009B6  0E01               	movlw	high _dbuf
  3465   0009B8  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3466   0009BA  6E02               	movwf	(strcpy@dest+1)^0,c
  3467   0009BC  0E47               	movlw	low STR_7
  3468   0009BE  6E03               	movwf	strcpy@src^0,c
  3469   0009C0  EC85  F01B         	call	_strcpy	;wreg free
  3470   0009C4  EFA0  F004         	goto	l4531
  3471   0009C8                     l4555:
  3472                           
  3473                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 657:     u.f = 1.
      +                          0;
  3474   0009C8  0E00               	movlw	0
  3475   0009CA  0100               	movlb	0	; () banked
  3476   0009CC  6F88               	movwf	efgtoa@u& (0+255),b
  3477   0009CE  0E00               	movlw	0
  3478   0009D0  6F89               	movwf	(efgtoa@u+1)& (0+255),b
  3479   0009D2  0E80               	movlw	128
  3480   0009D4  6F8A               	movwf	(efgtoa@u+2)& (0+255),b
  3481   0009D6  0E3F               	movlw	63
  3482   0009D8  6F8B               	movwf	(efgtoa@u+3)& (0+255),b
  3483                           
  3484                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 658:     e = 0;
  3485   0009DA  0E00               	movlw	0
  3486   0009DC  6F70               	movwf	(efgtoa@e+1)& (0+255),b
  3487   0009DE  0E00               	movlw	0
  3488   0009E0  6F6F               	movwf	efgtoa@e& (0+255),b
  3489   0009E2                     
  3490                           ; BSR set to: 0
  3491                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 659:  if (!(g.f =
      +                          = 0.0)) {
  3492   0009E2  C082  F001         	movff	efgtoa@g,___fleq@ff1
  3493   0009E6  C083  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  3494   0009EA  C084  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  3495   0009EE  C085  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  3496   0009F2  0E00               	movlw	0
  3497   0009F4  6E05               	movwf	___fleq@ff2^0,c
  3498   0009F6  0E00               	movlw	0
  3499   0009F8  6E06               	movwf	(___fleq@ff2+1)^0,c
  3500   0009FA  0E00               	movlw	0
  3501   0009FC  6E07               	movwf	(___fleq@ff2+2)^0,c
  3502   0009FE  0E00               	movlw	0
  3503   000A00  6E08               	movwf	(___fleq@ff2+3)^0,c
  3504   000A02  EC6B  F019         	call	___fleq	;wreg free
  3505   000A06  B0D8               	btfsc	status,0,c
  3506   000A08  EF08  F005         	goto	u5211
  3507   000A0C  EF0A  F005         	goto	u5210
  3508   000A10                     u5211:
  3509   000A10  EFE9  F005         	goto	l949
  3510   000A14                     u5210:
  3511   000A14  EF17  F005         	goto	l4563
  3512   000A18                     l951:
  3513                           
  3514                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 661:    u = ou;
  3515   000A18  C073  F088         	movff	efgtoa@ou,efgtoa@u
  3516   000A1C  C074  F089         	movff	efgtoa@ou+1,efgtoa@u+1
  3517   000A20  C075  F08A         	movff	efgtoa@ou+2,efgtoa@u+2
  3518   000A24  C076  F08B         	movff	efgtoa@ou+3,efgtoa@u+3
  3519   000A28                     
  3520                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 662:    ++e;
  3521   000A28  0100               	movlb	0	; () banked
  3522   000A2A  4B6F               	infsnz	efgtoa@e& (0+255),f,b
  3523   000A2C  2B70               	incf	(efgtoa@e+1)& (0+255),f,b
  3524   000A2E                     l4563:
  3525                           
  3526                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 660:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
  3527   000A2E  C088  F001         	movff	efgtoa@u,___flmul@b
  3528   000A32  C089  F002         	movff	efgtoa@u+1,___flmul@b+1
  3529   000A36  C08A  F003         	movff	efgtoa@u+2,___flmul@b+2
  3530   000A3A  C08B  F004         	movff	efgtoa@u+3,___flmul@b+3
  3531   000A3E  0E00               	movlw	0
  3532   000A40  6E05               	movwf	___flmul@a^0,c
  3533   000A42  0E00               	movlw	0
  3534   000A44  6E06               	movwf	(___flmul@a+1)^0,c
  3535   000A46  0E20               	movlw	32
  3536   000A48  6E07               	movwf	(___flmul@a+2)^0,c
  3537   000A4A  0E41               	movlw	65
  3538   000A4C  6E08               	movwf	(___flmul@a+3)^0,c
  3539   000A4E  EC88  F00E         	call	___flmul	;wreg free
  3540   000A52  C001  F073         	movff	?___flmul,efgtoa@ou
  3541   000A56  C002  F074         	movff	?___flmul+1,efgtoa@ou+1
  3542   000A5A  C003  F075         	movff	?___flmul+2,efgtoa@ou+2
  3543   000A5E  C004  F076         	movff	?___flmul+3,efgtoa@ou+3
  3544   000A62  0100               	movlb	0	; () banked
  3545   000A64  5173               	movf	efgtoa@ou& (0+255),w,b
  3546   000A66  5D82               	subwf	efgtoa@g& (0+255),w,b
  3547   000A68  6E01               	movwf	labs@a^0,c
  3548   000A6A  5174               	movf	(efgtoa@ou+1)& (0+255),w,b
  3549   000A6C  5983               	subwfb	(efgtoa@g+1)& (0+255),w,b
  3550   000A6E  6E02               	movwf	(labs@a+1)^0,c
  3551   000A70  5175               	movf	(efgtoa@ou+2)& (0+255),w,b
  3552   000A72  5984               	subwfb	(efgtoa@g+2)& (0+255),w,b
  3553   000A74  6E03               	movwf	(labs@a+2)^0,c
  3554   000A76  5176               	movf	(efgtoa@ou+3)& (0+255),w,b
  3555   000A78  5985               	subwfb	(efgtoa@g+3)& (0+255),w,b
  3556   000A7A  6E04               	movwf	(labs@a+3)^0,c
  3557   000A7C  EC46  F01A         	call	_labs	;wreg free
  3558   000A80  BE04               	btfsc	(?_labs+3)^0,7,c
  3559   000A82  EF4E  F005         	goto	u5221
  3560   000A86  5004               	movf	(?_labs+3)^0,w,c
  3561   000A88  1003               	iorwf	(?_labs+2)^0,w,c
  3562   000A8A  1002               	iorwf	(?_labs+1)^0,w,c
  3563   000A8C  E109               	bnz	u5220
  3564   000A8E  0E02               	movlw	2
  3565   000A90  5C01               	subwf	?_labs^0,w,c
  3566   000A92  A0D8               	btfss	status,0,c
  3567   000A94  EF4E  F005         	goto	u5221
  3568   000A98  EF50  F005         	goto	u5220
  3569   000A9C                     u5221:
  3570   000A9C  EF0C  F005         	goto	l951
  3571   000AA0                     u5220:
  3572   000AA0  C073  F01A         	movff	efgtoa@ou,___flge@ff1
  3573   000AA4  C074  F01B         	movff	efgtoa@ou+1,___flge@ff1+1
  3574   000AA8  C075  F01C         	movff	efgtoa@ou+2,___flge@ff1+2
  3575   000AAC  C076  F01D         	movff	efgtoa@ou+3,___flge@ff1+3
  3576   000AB0  C082  F01E         	movff	efgtoa@g,___flge@ff2
  3577   000AB4  C083  F01F         	movff	efgtoa@g+1,___flge@ff2+1
  3578   000AB8  C084  F020         	movff	efgtoa@g+2,___flge@ff2+2
  3579   000ABC  C085  F021         	movff	efgtoa@g+3,___flge@ff2+3
  3580   000AC0  EC4B  F017         	call	___flge	;wreg free
  3581   000AC4  A0D8               	btfss	status,0,c
  3582   000AC6  EF67  F005         	goto	u5231
  3583   000ACA  EF69  F005         	goto	u5230
  3584   000ACE                     u5231:
  3585   000ACE  EF0C  F005         	goto	l951
  3586   000AD2                     u5230:
  3587   000AD2                     
  3588                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 664:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
  3589   000AD2  0100               	movlb	0	; () banked
  3590   000AD4  5188               	movf	efgtoa@u& (0+255),w,b
  3591   000AD6  5D82               	subwf	efgtoa@g& (0+255),w,b
  3592   000AD8  6E01               	movwf	labs@a^0,c
  3593   000ADA  5189               	movf	(efgtoa@u+1)& (0+255),w,b
  3594   000ADC  5983               	subwfb	(efgtoa@g+1)& (0+255),w,b
  3595   000ADE  6E02               	movwf	(labs@a+1)^0,c
  3596   000AE0  518A               	movf	(efgtoa@u+2)& (0+255),w,b
  3597   000AE2  5984               	subwfb	(efgtoa@g+2)& (0+255),w,b
  3598   000AE4  6E03               	movwf	(labs@a+2)^0,c
  3599   000AE6  518B               	movf	(efgtoa@u+3)& (0+255),w,b
  3600   000AE8  5985               	subwfb	(efgtoa@g+3)& (0+255),w,b
  3601   000AEA  6E04               	movwf	(labs@a+3)^0,c
  3602   000AEC  EC46  F01A         	call	_labs	;wreg free
  3603   000AF0  BE04               	btfsc	(?_labs+3)^0,7,c
  3604   000AF2  EF88  F005         	goto	u5240
  3605   000AF6  5004               	movf	(?_labs+3)^0,w,c
  3606   000AF8  1003               	iorwf	(?_labs+2)^0,w,c
  3607   000AFA  1002               	iorwf	(?_labs+1)^0,w,c
  3608   000AFC  E107               	bnz	u5241
  3609   000AFE  0E02               	movlw	2
  3610   000B00  5C01               	subwf	?_labs^0,w,c
  3611   000B02  B0D8               	btfsc	status,0,c
  3612   000B04  EF86  F005         	goto	u5241
  3613   000B08  EF88  F005         	goto	u5240
  3614   000B0C                     u5241:
  3615   000B0C  EFD0  F005         	goto	l4581
  3616   000B10                     u5240:
  3617   000B10                     l4571:
  3618                           
  3619                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 665:    g = u;
  3620   000B10  C088  F082         	movff	efgtoa@u,efgtoa@g
  3621   000B14  C089  F083         	movff	efgtoa@u+1,efgtoa@g+1
  3622   000B18  C08A  F084         	movff	efgtoa@u+2,efgtoa@g+2
  3623   000B1C  C08B  F085         	movff	efgtoa@u+3,efgtoa@g+3
  3624                           
  3625                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 666:   }
  3626   000B20  EFE9  F005         	goto	l949
  3627   000B24                     l4573:
  3628                           
  3629                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 669:     u.f = u.
      +                          f/10.0;
  3630   000B24  C088  F02A         	movff	efgtoa@u,___fldiv@b
  3631   000B28  C089  F02B         	movff	efgtoa@u+1,___fldiv@b+1
  3632   000B2C  C08A  F02C         	movff	efgtoa@u+2,___fldiv@b+2
  3633   000B30  C08B  F02D         	movff	efgtoa@u+3,___fldiv@b+3
  3634   000B34  0E00               	movlw	0
  3635   000B36  6E2E               	movwf	___fldiv@a^0,c
  3636   000B38  0E00               	movlw	0
  3637   000B3A  6E2F               	movwf	(___fldiv@a+1)^0,c
  3638   000B3C  0E20               	movlw	32
  3639   000B3E  6E30               	movwf	(___fldiv@a+2)^0,c
  3640   000B40  0E41               	movlw	65
  3641   000B42  6E31               	movwf	(___fldiv@a+3)^0,c
  3642   000B44  EC9D  F010         	call	___fldiv	;wreg free
  3643   000B48  C02A  F088         	movff	?___fldiv,efgtoa@u
  3644   000B4C  C02B  F089         	movff	?___fldiv+1,efgtoa@u+1
  3645   000B50  C02C  F08A         	movff	?___fldiv+2,efgtoa@u+2
  3646   000B54  C02D  F08B         	movff	?___fldiv+3,efgtoa@u+3
  3647   000B58                     
  3648                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 670:     --e;
  3649   000B58  0100               	movlb	0	; () banked
  3650   000B5A  076F               	decf	efgtoa@e& (0+255),f,b
  3651   000B5C  A0D8               	btfss	status,0,c
  3652   000B5E  0770               	decf	(efgtoa@e+1)& (0+255),f,b
  3653   000B60                     
  3654                           ; BSR set to: 0
  3655                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 671:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
  3656   000B60  5188               	movf	efgtoa@u& (0+255),w,b
  3657   000B62  5D82               	subwf	efgtoa@g& (0+255),w,b
  3658   000B64  6E01               	movwf	labs@a^0,c
  3659   000B66  5189               	movf	(efgtoa@u+1)& (0+255),w,b
  3660   000B68  5983               	subwfb	(efgtoa@g+1)& (0+255),w,b
  3661   000B6A  6E02               	movwf	(labs@a+1)^0,c
  3662   000B6C  518A               	movf	(efgtoa@u+2)& (0+255),w,b
  3663   000B6E  5984               	subwfb	(efgtoa@g+2)& (0+255),w,b
  3664   000B70  6E03               	movwf	(labs@a+2)^0,c
  3665   000B72  518B               	movf	(efgtoa@u+3)& (0+255),w,b
  3666   000B74  5985               	subwfb	(efgtoa@g+3)& (0+255),w,b
  3667   000B76  6E04               	movwf	(labs@a+3)^0,c
  3668   000B78  EC46  F01A         	call	_labs	;wreg free
  3669   000B7C  BE04               	btfsc	(?_labs+3)^0,7,c
  3670   000B7E  EFCE  F005         	goto	u5250
  3671   000B82  5004               	movf	(?_labs+3)^0,w,c
  3672   000B84  1003               	iorwf	(?_labs+2)^0,w,c
  3673   000B86  1002               	iorwf	(?_labs+1)^0,w,c
  3674   000B88  E107               	bnz	u5251
  3675   000B8A  0E02               	movlw	2
  3676   000B8C  5C01               	subwf	?_labs^0,w,c
  3677   000B8E  B0D8               	btfsc	status,0,c
  3678   000B90  EFCC  F005         	goto	u5251
  3679   000B94  EFCE  F005         	goto	u5250
  3680   000B98                     u5251:
  3681   000B98  EFD0  F005         	goto	l4581
  3682   000B9C                     u5250:
  3683   000B9C  EF88  F005         	goto	l4571
  3684   000BA0                     l4581:
  3685                           
  3686                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 668:    while (g.
      +                          f < u.f) {
  3687   000BA0  C082  F01A         	movff	efgtoa@g,___flge@ff1
  3688   000BA4  C083  F01B         	movff	efgtoa@g+1,___flge@ff1+1
  3689   000BA8  C084  F01C         	movff	efgtoa@g+2,___flge@ff1+2
  3690   000BAC  C085  F01D         	movff	efgtoa@g+3,___flge@ff1+3
  3691   000BB0  C088  F01E         	movff	efgtoa@u,___flge@ff2
  3692   000BB4  C089  F01F         	movff	efgtoa@u+1,___flge@ff2+1
  3693   000BB8  C08A  F020         	movff	efgtoa@u+2,___flge@ff2+2
  3694   000BBC  C08B  F021         	movff	efgtoa@u+3,___flge@ff2+3
  3695   000BC0  EC4B  F017         	call	___flge	;wreg free
  3696   000BC4  A0D8               	btfss	status,0,c
  3697   000BC6  EFE7  F005         	goto	u5261
  3698   000BCA  EFE9  F005         	goto	u5260
  3699   000BCE                     u5261:
  3700   000BCE  EF92  F005         	goto	l4573
  3701   000BD2                     u5260:
  3702   000BD2                     l949:
  3703                           
  3704                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 683:  mode = c;
  3705   000BD2  C05C  F069         	movff	efgtoa@c,efgtoa@mode
  3706                           
  3707                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 685:     nmode = 
      +                          mode;
  3708   000BD6  C069  F06A         	movff	efgtoa@mode,efgtoa@nmode
  3709   000BDA                     
  3710                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 695:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 696:         p = (prec < 0)
      +                           ? 6 : prec;
  3711   000BDA  0100               	movlb	0	; () banked
  3712   000BDC  BFCC               	btfsc	(_prec+1)& (0+255),7,b
  3713   000BDE  EFF3  F005         	goto	u5271
  3714   000BE2  EFF5  F005         	goto	u5270
  3715   000BE6                     u5271:
  3716   000BE6  EFFB  F005         	goto	l4587
  3717   000BEA                     u5270:
  3718   000BEA                     
  3719                           ; BSR set to: 0
  3720   000BEA  C0CB  F062         	movff	_prec,efgtoa@p
  3721   000BEE  C0CC  F063         	movff	_prec+1,efgtoa@p+1
  3722   000BF2  EFFF  F005         	goto	l4589
  3723   000BF6                     l4587:
  3724                           
  3725                           ; BSR set to: 0
  3726   000BF6  0E00               	movlw	0
  3727   000BF8  6F63               	movwf	(efgtoa@p+1)& (0+255),b
  3728   000BFA  0E06               	movlw	6
  3729   000BFC  6F62               	movwf	efgtoa@p& (0+255),b
  3730   000BFE                     l4589:
  3731                           
  3732                           ; BSR set to: 0
  3733                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 697:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 711:     m = p;
  3734   000BFE  C062  F06D         	movff	efgtoa@p,efgtoa@m
  3735   000C02  C063  F06E         	movff	efgtoa@p+1,efgtoa@m+1
  3736   000C06                     
  3737                           ; BSR set to: 0
  3738                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 715:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 716:         ++m;
  3739   000C06  4B6D               	infsnz	efgtoa@m& (0+255),f,b
  3740   000C08  2B6E               	incf	(efgtoa@m+1)& (0+255),f,b
  3741   000C0A                     
  3742                           ; BSR set to: 0
  3743                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 717:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 721:     if (nmode == 'f
      +                          ') {
  3744   000C0A  0E66               	movlw	102
  3745   000C0C  196A               	xorwf	efgtoa@nmode& (0+255),w,b
  3746   000C0E  A4D8               	btfss	status,2,c
  3747   000C10  EF0C  F006         	goto	u5281
  3748   000C14  EF0E  F006         	goto	u5280
  3749   000C18                     u5281:
  3750   000C18  EF2E  F006         	goto	l4603
  3751   000C1C                     u5280:
  3752   000C1C                     
  3753                           ; BSR set to: 0
  3754                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 722:         if (
      +                          e < 0) {
  3755   000C1C  BF70               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3756   000C1E  EF15  F006         	goto	u5290
  3757   000C22  EF13  F006         	goto	u5291
  3758   000C26                     u5291:
  3759   000C26  EF21  F006         	goto	l4599
  3760   000C2A                     u5290:
  3761   000C2A                     
  3762                           ; BSR set to: 0
  3763                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 723:             
      +                          u.f = 1.0;
  3764   000C2A  0E00               	movlw	0
  3765   000C2C  6F88               	movwf	efgtoa@u& (0+255),b
  3766   000C2E  0E00               	movlw	0
  3767   000C30  6F89               	movwf	(efgtoa@u+1)& (0+255),b
  3768   000C32  0E80               	movlw	128
  3769   000C34  6F8A               	movwf	(efgtoa@u+2)& (0+255),b
  3770   000C36  0E3F               	movlw	63
  3771   000C38  6F8B               	movwf	(efgtoa@u+3)& (0+255),b
  3772                           
  3773                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 724:             
      +                          e = 0;
  3774   000C3A  0E00               	movlw	0
  3775   000C3C  6F70               	movwf	(efgtoa@e+1)& (0+255),b
  3776   000C3E  0E00               	movlw	0
  3777   000C40  6F6F               	movwf	efgtoa@e& (0+255),b
  3778   000C42                     l4599:
  3779                           
  3780                           ; BSR set to: 0
  3781                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 726:         if (
      +                          !(mode == 'g')) {
  3782   000C42  0E67               	movlw	103
  3783   000C44  1969               	xorwf	efgtoa@mode& (0+255),w,b
  3784   000C46  B4D8               	btfsc	status,2,c
  3785   000C48  EF28  F006         	goto	u5301
  3786   000C4C  EF2A  F006         	goto	u5300
  3787   000C50                     u5301:
  3788   000C50  EF2E  F006         	goto	l4603
  3789   000C54                     u5300:
  3790   000C54                     
  3791                           ; BSR set to: 0
  3792                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 727:             
      +                          m += e;
  3793   000C54  516F               	movf	efgtoa@e& (0+255),w,b
  3794   000C56  276D               	addwf	efgtoa@m& (0+255),f,b
  3795   000C58  5170               	movf	(efgtoa@e+1)& (0+255),w,b
  3796   000C5A  236E               	addwfc	(efgtoa@m+1)& (0+255),f,b
  3797   000C5C                     l4603:
  3798                           
  3799                           ; BSR set to: 0
  3800                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 733:     i = 0;
  3801   000C5C  0E00               	movlw	0
  3802   000C5E  6F78               	movwf	(efgtoa@i+1)& (0+255),b
  3803   000C60  0E00               	movlw	0
  3804   000C62  6F77               	movwf	efgtoa@i& (0+255),b
  3805   000C64                     
  3806                           ; BSR set to: 0
  3807                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 734:     h = g.f;
  3808   000C64  C082  F079         	movff	efgtoa@g,efgtoa@h
  3809   000C68  C083  F07A         	movff	efgtoa@g+1,efgtoa@h+1
  3810   000C6C  C084  F07B         	movff	efgtoa@g+2,efgtoa@h+2
  3811   000C70  C085  F07C         	movff	efgtoa@g+3,efgtoa@h+3
  3812   000C74                     
  3813                           ; BSR set to: 0
  3814                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 735:     ou = u;
  3815   000C74  C088  F073         	movff	efgtoa@u,efgtoa@ou
  3816   000C78  C089  F074         	movff	efgtoa@u+1,efgtoa@ou+1
  3817   000C7C  C08A  F075         	movff	efgtoa@u+2,efgtoa@ou+2
  3818   000C80  C08B  F076         	movff	efgtoa@u+3,efgtoa@ou+3
  3819                           
  3820                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
  3821   000C84  EFBF  F006         	goto	l4617
  3822   000C88                     l4609:
  3823                           
  3824                           ; BSR set to: 0
  3825                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 737:         l = 
      +                          floorf(h/u.f);
  3826   000C88  C079  F02A         	movff	efgtoa@h,___fldiv@b
  3827   000C8C  C07A  F02B         	movff	efgtoa@h+1,___fldiv@b+1
  3828   000C90  C07B  F02C         	movff	efgtoa@h+2,___fldiv@b+2
  3829   000C94  C07C  F02D         	movff	efgtoa@h+3,___fldiv@b+3
  3830   000C98  C088  F02E         	movff	efgtoa@u,___fldiv@a
  3831   000C9C  C089  F02F         	movff	efgtoa@u+1,___fldiv@a+1
  3832   000CA0  C08A  F030         	movff	efgtoa@u+2,___fldiv@a+2
  3833   000CA4  C08B  F031         	movff	efgtoa@u+3,___fldiv@a+3
  3834   000CA8  EC9D  F010         	call	___fldiv	;wreg free
  3835   000CAC  C02A  F043         	movff	?___fldiv,floorf@x
  3836   000CB0  C02B  F044         	movff	?___fldiv+1,floorf@x+1
  3837   000CB4  C02C  F045         	movff	?___fldiv+2,floorf@x+2
  3838   000CB8  C02D  F046         	movff	?___fldiv+3,floorf@x+3
  3839   000CBC  EC7C  F013         	call	_floorf	;wreg free
  3840   000CC0  C043  F07D         	movff	?_floorf,efgtoa@l
  3841   000CC4  C044  F07E         	movff	?_floorf+1,efgtoa@l+1
  3842   000CC8  C045  F07F         	movff	?_floorf+2,efgtoa@l+2
  3843   000CCC  C046  F080         	movff	?_floorf+3,efgtoa@l+3
  3844                           
  3845                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 738:         d = 
      +                          (int)l;
  3846   000CD0  C07D  F001         	movff	efgtoa@l,___fltol@f1
  3847   000CD4  C07E  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3848   000CD8  C07F  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3849   000CDC  C080  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3850   000CE0  ECC8  F016         	call	___fltol	;wreg free
  3851   000CE4  C001  F06B         	movff	?___fltol,efgtoa@d
  3852   000CE8  C002  F06C         	movff	?___fltol+1,efgtoa@d+1
  3853   000CEC                     
  3854                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 739:         h -=
      +                           l*u.f;
  3855   000CEC  C079  F02A         	movff	efgtoa@h,___flsub@b
  3856   000CF0  C07A  F02B         	movff	efgtoa@h+1,___flsub@b+1
  3857   000CF4  C07B  F02C         	movff	efgtoa@h+2,___flsub@b+2
  3858   000CF8  C07C  F02D         	movff	efgtoa@h+3,___flsub@b+3
  3859   000CFC  C07D  F005         	movff	efgtoa@l,___flmul@a
  3860   000D00  C07E  F006         	movff	efgtoa@l+1,___flmul@a+1
  3861   000D04  C07F  F007         	movff	efgtoa@l+2,___flmul@a+2
  3862   000D08  C080  F008         	movff	efgtoa@l+3,___flmul@a+3
  3863   000D0C  C088  F001         	movff	efgtoa@u,___flmul@b
  3864   000D10  C089  F002         	movff	efgtoa@u+1,___flmul@b+1
  3865   000D14  C08A  F003         	movff	efgtoa@u+2,___flmul@b+2
  3866   000D18  C08B  F004         	movff	efgtoa@u+3,___flmul@b+3
  3867   000D1C  EC88  F00E         	call	___flmul	;wreg free
  3868   000D20  C001  F02E         	movff	?___flmul,___flsub@a
  3869   000D24  C002  F02F         	movff	?___flmul+1,___flsub@a+1
  3870   000D28  C003  F030         	movff	?___flmul+2,___flsub@a+2
  3871   000D2C  C004  F031         	movff	?___flmul+3,___flsub@a+3
  3872   000D30  ECC4  F01A         	call	___flsub	;wreg free
  3873   000D34  C02A  F079         	movff	?___flsub,efgtoa@h
  3874   000D38  C02B  F07A         	movff	?___flsub+1,efgtoa@h+1
  3875   000D3C  C02C  F07B         	movff	?___flsub+2,efgtoa@h+2
  3876   000D40  C02D  F07C         	movff	?___flsub+3,efgtoa@h+3
  3877   000D44                     
  3878                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 740:         u.f 
      +                          = u.f/10.0;
  3879   000D44  C088  F02A         	movff	efgtoa@u,___fldiv@b
  3880   000D48  C089  F02B         	movff	efgtoa@u+1,___fldiv@b+1
  3881   000D4C  C08A  F02C         	movff	efgtoa@u+2,___fldiv@b+2
  3882   000D50  C08B  F02D         	movff	efgtoa@u+3,___fldiv@b+3
  3883   000D54  0E00               	movlw	0
  3884   000D56  6E2E               	movwf	___fldiv@a^0,c
  3885   000D58  0E00               	movlw	0
  3886   000D5A  6E2F               	movwf	(___fldiv@a+1)^0,c
  3887   000D5C  0E20               	movlw	32
  3888   000D5E  6E30               	movwf	(___fldiv@a+2)^0,c
  3889   000D60  0E41               	movlw	65
  3890   000D62  6E31               	movwf	(___fldiv@a+3)^0,c
  3891   000D64  EC9D  F010         	call	___fldiv	;wreg free
  3892   000D68  C02A  F088         	movff	?___fldiv,efgtoa@u
  3893   000D6C  C02B  F089         	movff	?___fldiv+1,efgtoa@u+1
  3894   000D70  C02C  F08A         	movff	?___fldiv+2,efgtoa@u+2
  3895   000D74  C02D  F08B         	movff	?___fldiv+3,efgtoa@u+3
  3896   000D78                     
  3897                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 741:         ++i;
  3898   000D78  0100               	movlb	0	; () banked
  3899   000D7A  4B77               	infsnz	efgtoa@i& (0+255),f,b
  3900   000D7C  2B78               	incf	(efgtoa@i+1)& (0+255),f,b
  3901   000D7E                     l4617:
  3902                           
  3903                           ; BSR set to: 0
  3904                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
  3905   000D7E  516D               	movf	efgtoa@m& (0+255),w,b
  3906   000D80  5D77               	subwf	efgtoa@i& (0+255),w,b
  3907   000D82  5178               	movf	(efgtoa@i+1)& (0+255),w,b
  3908   000D84  0A80               	xorlw	128
  3909   000D86  6E5D               	movwf	??_efgtoa^0,c
  3910   000D88  516E               	movf	(efgtoa@m+1)& (0+255),w,b
  3911   000D8A  0A80               	xorlw	128
  3912   000D8C  585D               	subwfb	??_efgtoa^0,w,c
  3913   000D8E  A0D8               	btfss	status,0,c
  3914   000D90  EFCC  F006         	goto	u5311
  3915   000D94  EFCE  F006         	goto	u5310
  3916   000D98                     u5311:
  3917   000D98  EF44  F006         	goto	l4609
  3918   000D9C                     u5310:
  3919   000D9C                     
  3920                           ; BSR set to: 0
  3921                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 745:     l = u.f*
      +                          5.0;
  3922   000D9C  C088  F001         	movff	efgtoa@u,___flmul@b
  3923   000DA0  C089  F002         	movff	efgtoa@u+1,___flmul@b+1
  3924   000DA4  C08A  F003         	movff	efgtoa@u+2,___flmul@b+2
  3925   000DA8  C08B  F004         	movff	efgtoa@u+3,___flmul@b+3
  3926   000DAC  0E00               	movlw	0
  3927   000DAE  6E05               	movwf	___flmul@a^0,c
  3928   000DB0  0E00               	movlw	0
  3929   000DB2  6E06               	movwf	(___flmul@a+1)^0,c
  3930   000DB4  0EA0               	movlw	160
  3931   000DB6  6E07               	movwf	(___flmul@a+2)^0,c
  3932   000DB8  0E40               	movlw	64
  3933   000DBA  6E08               	movwf	(___flmul@a+3)^0,c
  3934   000DBC  EC88  F00E         	call	___flmul	;wreg free
  3935   000DC0  C001  F07D         	movff	?___flmul,efgtoa@l
  3936   000DC4  C002  F07E         	movff	?___flmul+1,efgtoa@l+1
  3937   000DC8  C003  F07F         	movff	?___flmul+2,efgtoa@l+2
  3938   000DCC  C004  F080         	movff	?___flmul+3,efgtoa@l+3
  3939   000DD0                     
  3940                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 746:     if (h < 
      +                          l) {
  3941   000DD0  C079  F01A         	movff	efgtoa@h,___flge@ff1
  3942   000DD4  C07A  F01B         	movff	efgtoa@h+1,___flge@ff1+1
  3943   000DD8  C07B  F01C         	movff	efgtoa@h+2,___flge@ff1+2
  3944   000DDC  C07C  F01D         	movff	efgtoa@h+3,___flge@ff1+3
  3945   000DE0  C07D  F01E         	movff	efgtoa@l,___flge@ff2
  3946   000DE4  C07E  F01F         	movff	efgtoa@l+1,___flge@ff2+1
  3947   000DE8  C07F  F020         	movff	efgtoa@l+2,___flge@ff2+2
  3948   000DEC  C080  F021         	movff	efgtoa@l+3,___flge@ff2+3
  3949   000DF0  EC4B  F017         	call	___flge	;wreg free
  3950   000DF4  B0D8               	btfsc	status,0,c
  3951   000DF6  EFFF  F006         	goto	u5321
  3952   000DFA  EF01  F007         	goto	u5320
  3953   000DFE                     u5321:
  3954   000DFE  EF0C  F007         	goto	l4625
  3955   000E02                     u5320:
  3956   000E02                     
  3957                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 747:         l = 
      +                          0.0;
  3958   000E02  0E00               	movlw	0
  3959   000E04  0100               	movlb	0	; () banked
  3960   000E06  6F7D               	movwf	efgtoa@l& (0+255),b
  3961   000E08  0E00               	movlw	0
  3962   000E0A  6F7E               	movwf	(efgtoa@l+1)& (0+255),b
  3963   000E0C  0E00               	movlw	0
  3964   000E0E  6F7F               	movwf	(efgtoa@l+2)& (0+255),b
  3965   000E10  0E00               	movlw	0
  3966   000E12  6F80               	movwf	(efgtoa@l+3)& (0+255),b
  3967                           
  3968                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 748:     } else {
  3969   000E14  EF35  F007         	goto	l4631
  3970   000E18                     l4625:
  3971                           
  3972                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 750:         if (
      +                          (h == l) && !(d % 2)) {
  3973   000E18  C079  F001         	movff	efgtoa@h,___fleq@ff1
  3974   000E1C  C07A  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  3975   000E20  C07B  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  3976   000E24  C07C  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  3977   000E28  C07D  F005         	movff	efgtoa@l,___fleq@ff2
  3978   000E2C  C07E  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  3979   000E30  C07F  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  3980   000E34  C080  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  3981   000E38  EC6B  F019         	call	___fleq	;wreg free
  3982   000E3C  A0D8               	btfss	status,0,c
  3983   000E3E  EF23  F007         	goto	u5331
  3984   000E42  EF25  F007         	goto	u5330
  3985   000E46                     u5331:
  3986   000E46  EF35  F007         	goto	l4631
  3987   000E4A                     u5330:
  3988   000E4A  0100               	movlb	0	; () banked
  3989   000E4C  B16B               	btfsc	efgtoa@d& (0+255),0,b
  3990   000E4E  EF2B  F007         	goto	u5341
  3991   000E52  EF2D  F007         	goto	u5340
  3992   000E56                     u5341:
  3993   000E56  EF35  F007         	goto	l4631
  3994   000E5A                     u5340:
  3995   000E5A                     
  3996                           ; BSR set to: 0
  3997                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 751:             
      +                          l = 0.0;
  3998   000E5A  0E00               	movlw	0
  3999   000E5C  6F7D               	movwf	efgtoa@l& (0+255),b
  4000   000E5E  0E00               	movlw	0
  4001   000E60  6F7E               	movwf	(efgtoa@l+1)& (0+255),b
  4002   000E62  0E00               	movlw	0
  4003   000E64  6F7F               	movwf	(efgtoa@l+2)& (0+255),b
  4004   000E66  0E00               	movlw	0
  4005   000E68  6F80               	movwf	(efgtoa@l+3)& (0+255),b
  4006   000E6A                     l4631:
  4007                           
  4008                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 756:     h = g.f 
      +                          + l;
  4009   000E6A  C082  F01A         	movff	efgtoa@g,___fladd@b
  4010   000E6E  C083  F01B         	movff	efgtoa@g+1,___fladd@b+1
  4011   000E72  C084  F01C         	movff	efgtoa@g+2,___fladd@b+2
  4012   000E76  C085  F01D         	movff	efgtoa@g+3,___fladd@b+3
  4013   000E7A  C07D  F01E         	movff	efgtoa@l,___fladd@a
  4014   000E7E  C07E  F01F         	movff	efgtoa@l+1,___fladd@a+1
  4015   000E82  C07F  F020         	movff	efgtoa@l+2,___fladd@a+2
  4016   000E86  C080  F021         	movff	efgtoa@l+3,___fladd@a+3
  4017   000E8A  EC28  F00C         	call	___fladd	;wreg free
  4018   000E8E  C01A  F079         	movff	?___fladd,efgtoa@h
  4019   000E92  C01B  F07A         	movff	?___fladd+1,efgtoa@h+1
  4020   000E96  C01C  F07B         	movff	?___fladd+2,efgtoa@h+2
  4021   000E9A  C01D  F07C         	movff	?___fladd+3,efgtoa@h+3
  4022   000E9E                     
  4023                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 758:  if (h >= (o
      +                          u.f*10.0)) {
  4024   000E9E  C079  F01A         	movff	efgtoa@h,___flge@ff1
  4025   000EA2  C07A  F01B         	movff	efgtoa@h+1,___flge@ff1+1
  4026   000EA6  C07B  F01C         	movff	efgtoa@h+2,___flge@ff1+2
  4027   000EAA  C07C  F01D         	movff	efgtoa@h+3,___flge@ff1+3
  4028   000EAE  0E00               	movlw	0
  4029   000EB0  6E05               	movwf	___flmul@a^0,c
  4030   000EB2  0E00               	movlw	0
  4031   000EB4  6E06               	movwf	(___flmul@a+1)^0,c
  4032   000EB6  0E20               	movlw	32
  4033   000EB8  6E07               	movwf	(___flmul@a+2)^0,c
  4034   000EBA  0E41               	movlw	65
  4035   000EBC  6E08               	movwf	(___flmul@a+3)^0,c
  4036   000EBE  C073  F001         	movff	efgtoa@ou,___flmul@b
  4037   000EC2  C074  F002         	movff	efgtoa@ou+1,___flmul@b+1
  4038   000EC6  C075  F003         	movff	efgtoa@ou+2,___flmul@b+2
  4039   000ECA  C076  F004         	movff	efgtoa@ou+3,___flmul@b+3
  4040   000ECE  EC88  F00E         	call	___flmul	;wreg free
  4041   000ED2  C001  F01E         	movff	?___flmul,___flge@ff2
  4042   000ED6  C002  F01F         	movff	?___flmul+1,___flge@ff2+1
  4043   000EDA  C003  F020         	movff	?___flmul+2,___flge@ff2+2
  4044   000EDE  C004  F021         	movff	?___flmul+3,___flge@ff2+3
  4045   000EE2  EC4B  F017         	call	___flge	;wreg free
  4046   000EE6  A0D8               	btfss	status,0,c
  4047   000EE8  EF78  F007         	goto	u5351
  4048   000EEC  EF7A  F007         	goto	u5350
  4049   000EF0                     u5351:
  4050   000EF0  EFA3  F007         	goto	l4643
  4051   000EF4                     u5350:
  4052   000EF4                     
  4053                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 759:   e++;
  4054   000EF4  0100               	movlb	0	; () banked
  4055   000EF6  4B6F               	infsnz	efgtoa@e& (0+255),f,b
  4056   000EF8  2B70               	incf	(efgtoa@e+1)& (0+255),f,b
  4057   000EFA                     
  4058                           ; BSR set to: 0
  4059                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 760:   ou.f *= 10
      +                          .0;
  4060   000EFA  C073  F001         	movff	efgtoa@ou,___flmul@b
  4061   000EFE  C074  F002         	movff	efgtoa@ou+1,___flmul@b+1
  4062   000F02  C075  F003         	movff	efgtoa@ou+2,___flmul@b+2
  4063   000F06  C076  F004         	movff	efgtoa@ou+3,___flmul@b+3
  4064   000F0A  0E00               	movlw	0
  4065   000F0C  6E05               	movwf	___flmul@a^0,c
  4066   000F0E  0E00               	movlw	0
  4067   000F10  6E06               	movwf	(___flmul@a+1)^0,c
  4068   000F12  0E20               	movlw	32
  4069   000F14  6E07               	movwf	(___flmul@a+2)^0,c
  4070   000F16  0E41               	movlw	65
  4071   000F18  6E08               	movwf	(___flmul@a+3)^0,c
  4072   000F1A  EC88  F00E         	call	___flmul	;wreg free
  4073   000F1E  C001  F073         	movff	?___flmul,efgtoa@ou
  4074   000F22  C002  F074         	movff	?___flmul+1,efgtoa@ou+1
  4075   000F26  C003  F075         	movff	?___flmul+2,efgtoa@ou+2
  4076   000F2A  C004  F076         	movff	?___flmul+3,efgtoa@ou+3
  4077   000F2E                     
  4078                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 762:   if (nmode 
      +                          == 'f') {
  4079   000F2E  0E66               	movlw	102
  4080   000F30  0100               	movlb	0	; () banked
  4081   000F32  196A               	xorwf	efgtoa@nmode& (0+255),w,b
  4082   000F34  A4D8               	btfss	status,2,c
  4083   000F36  EF9F  F007         	goto	u5361
  4084   000F3A  EFA1  F007         	goto	u5360
  4085   000F3E                     u5361:
  4086   000F3E  EFA3  F007         	goto	l4643
  4087   000F42                     u5360:
  4088   000F42                     
  4089                           ; BSR set to: 0
  4090                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 764:    m++;
  4091   000F42  4B6D               	infsnz	efgtoa@m& (0+255),f,b
  4092   000F44  2B6E               	incf	(efgtoa@m+1)& (0+255),f,b
  4093   000F46                     l4643:
  4094                           
  4095                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 770:     u = ou;
  4096   000F46  C073  F088         	movff	efgtoa@ou,efgtoa@u
  4097   000F4A  C074  F089         	movff	efgtoa@ou+1,efgtoa@u+1
  4098   000F4E  C075  F08A         	movff	efgtoa@ou+2,efgtoa@u+2
  4099   000F52  C076  F08B         	movff	efgtoa@ou+3,efgtoa@u+3
  4100   000F56                     
  4101                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 774:  ne = e;
  4102   000F56  C06F  F060         	movff	efgtoa@e,efgtoa@ne
  4103   000F5A  C070  F061         	movff	efgtoa@e+1,efgtoa@ne+1
  4104   000F5E                     
  4105                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 776:     pp = 0;
  4106   000F5E  0E00               	movlw	0
  4107   000F60  0100               	movlb	0	; () banked
  4108   000F62  6F68               	movwf	efgtoa@pp& (0+255),b
  4109   000F64                     
  4110                           ; BSR set to: 0
  4111                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 777:     t = 0;
  4112   000F64  0E00               	movlw	0
  4113   000F66  6F65               	movwf	(efgtoa@t+1)& (0+255),b
  4114   000F68  0E00               	movlw	0
  4115   000F6A  6F64               	movwf	efgtoa@t& (0+255),b
  4116   000F6C                     
  4117                           ; BSR set to: 0
  4118                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 778:     i = 0;
  4119   000F6C  0E00               	movlw	0
  4120   000F6E  6F78               	movwf	(efgtoa@i+1)& (0+255),b
  4121   000F70  0E00               	movlw	0
  4122   000F72  6F77               	movwf	efgtoa@i& (0+255),b
  4123                           
  4124                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
  4125   000F74  EFA1  F008         	goto	l4693
  4126   000F78                     l4653:
  4127                           
  4128                           ; BSR set to: 0
  4129                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 780:         l = 
      +                          floorf(h/u.f);
  4130   000F78  C079  F02A         	movff	efgtoa@h,___fldiv@b
  4131   000F7C  C07A  F02B         	movff	efgtoa@h+1,___fldiv@b+1
  4132   000F80  C07B  F02C         	movff	efgtoa@h+2,___fldiv@b+2
  4133   000F84  C07C  F02D         	movff	efgtoa@h+3,___fldiv@b+3
  4134   000F88  C088  F02E         	movff	efgtoa@u,___fldiv@a
  4135   000F8C  C089  F02F         	movff	efgtoa@u+1,___fldiv@a+1
  4136   000F90  C08A  F030         	movff	efgtoa@u+2,___fldiv@a+2
  4137   000F94  C08B  F031         	movff	efgtoa@u+3,___fldiv@a+3
  4138   000F98  EC9D  F010         	call	___fldiv	;wreg free
  4139   000F9C  C02A  F043         	movff	?___fldiv,floorf@x
  4140   000FA0  C02B  F044         	movff	?___fldiv+1,floorf@x+1
  4141   000FA4  C02C  F045         	movff	?___fldiv+2,floorf@x+2
  4142   000FA8  C02D  F046         	movff	?___fldiv+3,floorf@x+3
  4143   000FAC  EC7C  F013         	call	_floorf	;wreg free
  4144   000FB0  C043  F07D         	movff	?_floorf,efgtoa@l
  4145   000FB4  C044  F07E         	movff	?_floorf+1,efgtoa@l+1
  4146   000FB8  C045  F07F         	movff	?_floorf+2,efgtoa@l+2
  4147   000FBC  C046  F080         	movff	?_floorf+3,efgtoa@l+3
  4148                           
  4149                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 781:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
  4150   000FC0  C07D  F001         	movff	efgtoa@l,___fltol@f1
  4151   000FC4  C07E  F002         	movff	efgtoa@l+1,___fltol@f1+1
  4152   000FC8  C07F  F003         	movff	efgtoa@l+2,___fltol@f1+2
  4153   000FCC  C080  F004         	movff	efgtoa@l+3,___fltol@f1+3
  4154   000FD0  ECC8  F016         	call	___fltol	;wreg free
  4155   000FD4  BE02               	btfsc	(?___fltol+1)^0,7,c
  4156   000FD6  EFF8  F007         	goto	u5370
  4157   000FDA  5002               	movf	(?___fltol+1)^0,w,c
  4158   000FDC  E107               	bnz	u5371
  4159   000FDE  0E0A               	movlw	10
  4160   000FE0  5C01               	subwf	?___fltol^0,w,c
  4161   000FE2  B0D8               	btfsc	status,0,c
  4162   000FE4  EFF6  F007         	goto	u5371
  4163   000FE8  EFF8  F007         	goto	u5370
  4164   000FEC                     u5371:
  4165   000FEC  EF08  F008         	goto	l4657
  4166   000FF0                     u5370:
  4167   000FF0  C07D  F001         	movff	efgtoa@l,___fltol@f1
  4168   000FF4  C07E  F002         	movff	efgtoa@l+1,___fltol@f1+1
  4169   000FF8  C07F  F003         	movff	efgtoa@l+2,___fltol@f1+2
  4170   000FFC  C080  F004         	movff	efgtoa@l+3,___fltol@f1+3
  4171   001000  ECC8  F016         	call	___fltol	;wreg free
  4172   001004  C001  F06B         	movff	?___fltol,efgtoa@d
  4173   001008  C002  F06C         	movff	?___fltol+1,efgtoa@d+1
  4174   00100C  EF0D  F008         	goto	l979
  4175   001010                     l4657:
  4176   001010  0E00               	movlw	0
  4177   001012  0100               	movlb	0	; () banked
  4178   001014  6F6C               	movwf	(efgtoa@d+1)& (0+255),b
  4179   001016  0E09               	movlw	9
  4180   001018  6F6B               	movwf	efgtoa@d& (0+255),b
  4181   00101A                     l979:
  4182                           
  4183                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 792:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 793:             if (!pp &
      +                          & (ne < 0)) {
  4184   00101A  0100               	movlb	0	; () banked
  4185   00101C  5168               	movf	efgtoa@pp& (0+255),w,b
  4186   00101E  A4D8               	btfss	status,2,c
  4187   001020  EF14  F008         	goto	u5381
  4188   001024  EF16  F008         	goto	u5380
  4189   001028                     u5381:
  4190   001028  EF3E  F008         	goto	l4677
  4191   00102C                     u5380:
  4192   00102C                     
  4193                           ; BSR set to: 0
  4194   00102C  BF61               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  4195   00102E  EF1D  F008         	goto	u5390
  4196   001032  EF1B  F008         	goto	u5391
  4197   001036                     u5391:
  4198   001036  EF3E  F008         	goto	l4677
  4199   00103A                     u5390:
  4200   00103A                     
  4201                           ; BSR set to: 0
  4202                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 794:             
      +                              dbuf[n++] = '.';
  4203   00103A  0E00               	movlw	low _dbuf
  4204   00103C  2586               	addwf	efgtoa@n& (0+255),w,b
  4205   00103E  6ED9               	movwf	fsr2l,c
  4206   001040  0E01               	movlw	high _dbuf
  4207   001042  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4208   001044  6EDA               	movwf	fsr2h,c
  4209   001046  0E2E               	movlw	46
  4210   001048  6EDF               	movwf	indf2,c
  4211   00104A                     
  4212                           ; BSR set to: 0
  4213   00104A  4B86               	infsnz	efgtoa@n& (0+255),f,b
  4214   00104C  2B87               	incf	(efgtoa@n+1)& (0+255),f,b
  4215   00104E                     
  4216                           ; BSR set to: 0
  4217                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 795:             
      +                              --w;
  4218   00104E  0771               	decf	efgtoa@w& (0+255),f,b
  4219   001050  A0D8               	btfss	status,0,c
  4220   001052  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  4221   001054                     
  4222                           ; BSR set to: 0
  4223                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 796:             
      +                              pp = 1;
  4224   001054  0E01               	movlw	1
  4225   001056  6F68               	movwf	efgtoa@pp& (0+255),b
  4226   001058  EF3E  F008         	goto	l4677
  4227   00105C                     l4669:
  4228                           
  4229                           ; BSR set to: 0
  4230                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 799:             
      +                              dbuf[n++] = '0';
  4231   00105C  0E00               	movlw	low _dbuf
  4232   00105E  2586               	addwf	efgtoa@n& (0+255),w,b
  4233   001060  6ED9               	movwf	fsr2l,c
  4234   001062  0E01               	movlw	high _dbuf
  4235   001064  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4236   001066  6EDA               	movwf	fsr2h,c
  4237   001068  0E30               	movlw	48
  4238   00106A  6EDF               	movwf	indf2,c
  4239   00106C                     
  4240                           ; BSR set to: 0
  4241   00106C  4B86               	infsnz	efgtoa@n& (0+255),f,b
  4242   00106E  2B87               	incf	(efgtoa@n+1)& (0+255),f,b
  4243   001070                     
  4244                           ; BSR set to: 0
  4245                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 800:             
      +                              --w;
  4246   001070  0771               	decf	efgtoa@w& (0+255),f,b
  4247   001072  A0D8               	btfss	status,0,c
  4248   001074  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  4249   001076                     
  4250                           ; BSR set to: 0
  4251                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 801:             
      +                              --t;
  4252   001076  0764               	decf	efgtoa@t& (0+255),f,b
  4253   001078  A0D8               	btfss	status,0,c
  4254   00107A  0765               	decf	(efgtoa@t+1)& (0+255),f,b
  4255   00107C                     l4677:
  4256                           
  4257                           ; BSR set to: 0
  4258                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 798:             
      +                          while (t) {
  4259   00107C  5164               	movf	efgtoa@t& (0+255),w,b
  4260   00107E  1165               	iorwf	(efgtoa@t+1)& (0+255),w,b
  4261   001080  A4D8               	btfss	status,2,c
  4262   001082  EF45  F008         	goto	u5401
  4263   001086  EF47  F008         	goto	u5400
  4264   00108A                     u5401:
  4265   00108A  EF2E  F008         	goto	l4669
  4266   00108E                     u5400:
  4267   00108E                     
  4268                           ; BSR set to: 0
  4269                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 803:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  4270   00108E  0E00               	movlw	low _dbuf
  4271   001090  2586               	addwf	efgtoa@n& (0+255),w,b
  4272   001092  6ED9               	movwf	fsr2l,c
  4273   001094  0E01               	movlw	high _dbuf
  4274   001096  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4275   001098  6EDA               	movwf	fsr2h,c
  4276   00109A  516B               	movf	efgtoa@d& (0+255),w,b
  4277   00109C  0F30               	addlw	48
  4278   00109E  6EDF               	movwf	indf2,c
  4279   0010A0                     
  4280                           ; BSR set to: 0
  4281   0010A0  4B86               	infsnz	efgtoa@n& (0+255),f,b
  4282   0010A2  2B87               	incf	(efgtoa@n+1)& (0+255),f,b
  4283   0010A4                     
  4284                           ; BSR set to: 0
  4285                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 804:             
      +                          --w;
  4286   0010A4  0771               	decf	efgtoa@w& (0+255),f,b
  4287   0010A6  A0D8               	btfss	status,0,c
  4288   0010A8  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  4289   0010AA                     
  4290                           ; BSR set to: 0
  4291                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 805:         };C:
      +                          \Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 806:         h -= l*
      +                          u.f;
  4292   0010AA  C079  F02A         	movff	efgtoa@h,___flsub@b
  4293   0010AE  C07A  F02B         	movff	efgtoa@h+1,___flsub@b+1
  4294   0010B2  C07B  F02C         	movff	efgtoa@h+2,___flsub@b+2
  4295   0010B6  C07C  F02D         	movff	efgtoa@h+3,___flsub@b+3
  4296   0010BA  C07D  F005         	movff	efgtoa@l,___flmul@a
  4297   0010BE  C07E  F006         	movff	efgtoa@l+1,___flmul@a+1
  4298   0010C2  C07F  F007         	movff	efgtoa@l+2,___flmul@a+2
  4299   0010C6  C080  F008         	movff	efgtoa@l+3,___flmul@a+3
  4300   0010CA  C088  F001         	movff	efgtoa@u,___flmul@b
  4301   0010CE  C089  F002         	movff	efgtoa@u+1,___flmul@b+1
  4302   0010D2  C08A  F003         	movff	efgtoa@u+2,___flmul@b+2
  4303   0010D6  C08B  F004         	movff	efgtoa@u+3,___flmul@b+3
  4304   0010DA  EC88  F00E         	call	___flmul	;wreg free
  4305   0010DE  C001  F02E         	movff	?___flmul,___flsub@a
  4306   0010E2  C002  F02F         	movff	?___flmul+1,___flsub@a+1
  4307   0010E6  C003  F030         	movff	?___flmul+2,___flsub@a+2
  4308   0010EA  C004  F031         	movff	?___flmul+3,___flsub@a+3
  4309   0010EE  ECC4  F01A         	call	___flsub	;wreg free
  4310   0010F2  C02A  F079         	movff	?___flsub,efgtoa@h
  4311   0010F6  C02B  F07A         	movff	?___flsub+1,efgtoa@h+1
  4312   0010FA  C02C  F07B         	movff	?___flsub+2,efgtoa@h+2
  4313   0010FE  C02D  F07C         	movff	?___flsub+3,efgtoa@h+3
  4314   001102                     
  4315                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 807:         u.f 
      +                          = u.f/10.0;
  4316   001102  C088  F02A         	movff	efgtoa@u,___fldiv@b
  4317   001106  C089  F02B         	movff	efgtoa@u+1,___fldiv@b+1
  4318   00110A  C08A  F02C         	movff	efgtoa@u+2,___fldiv@b+2
  4319   00110E  C08B  F02D         	movff	efgtoa@u+3,___fldiv@b+3
  4320   001112  0E00               	movlw	0
  4321   001114  6E2E               	movwf	___fldiv@a^0,c
  4322   001116  0E00               	movlw	0
  4323   001118  6E2F               	movwf	(___fldiv@a+1)^0,c
  4324   00111A  0E20               	movlw	32
  4325   00111C  6E30               	movwf	(___fldiv@a+2)^0,c
  4326   00111E  0E41               	movlw	65
  4327   001120  6E31               	movwf	(___fldiv@a+3)^0,c
  4328   001122  EC9D  F010         	call	___fldiv	;wreg free
  4329   001126  C02A  F088         	movff	?___fldiv,efgtoa@u
  4330   00112A  C02B  F089         	movff	?___fldiv+1,efgtoa@u+1
  4331   00112E  C02C  F08A         	movff	?___fldiv+2,efgtoa@u+2
  4332   001132  C02D  F08B         	movff	?___fldiv+3,efgtoa@u+3
  4333   001136                     
  4334                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 808:         --ne
      +                          ;
  4335   001136  0100               	movlb	0	; () banked
  4336   001138  0760               	decf	efgtoa@ne& (0+255),f,b
  4337   00113A  A0D8               	btfss	status,0,c
  4338   00113C  0761               	decf	(efgtoa@ne+1)& (0+255),f,b
  4339   00113E                     
  4340                           ; BSR set to: 0
  4341                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 809:         ++i;
  4342   00113E  4B77               	infsnz	efgtoa@i& (0+255),f,b
  4343   001140  2B78               	incf	(efgtoa@i+1)& (0+255),f,b
  4344   001142                     l4693:
  4345                           
  4346                           ; BSR set to: 0
  4347                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
  4348   001142  516D               	movf	efgtoa@m& (0+255),w,b
  4349   001144  5D77               	subwf	efgtoa@i& (0+255),w,b
  4350   001146  5178               	movf	(efgtoa@i+1)& (0+255),w,b
  4351   001148  0A80               	xorlw	128
  4352   00114A  6E5D               	movwf	??_efgtoa^0,c
  4353   00114C  516E               	movf	(efgtoa@m+1)& (0+255),w,b
  4354   00114E  0A80               	xorlw	128
  4355   001150  585D               	subwfb	??_efgtoa^0,w,c
  4356   001152  B0D8               	btfsc	status,0,c
  4357   001154  EFAE  F008         	goto	u5411
  4358   001158  EFB0  F008         	goto	u5410
  4359   00115C                     u5411:
  4360   00115C  EFBE  F008         	goto	l4697
  4361   001160                     u5410:
  4362   001160                     
  4363                           ; BSR set to: 0
  4364   001160  BF87               	btfsc	(efgtoa@n+1)& (0+255),7,b
  4365   001162  EFBC  F008         	goto	u5421
  4366   001166  5187               	movf	(efgtoa@n+1)& (0+255),w,b
  4367   001168  E109               	bnz	u5420
  4368   00116A  0E4B               	movlw	75
  4369   00116C  5D86               	subwf	efgtoa@n& (0+255),w,b
  4370   00116E  A0D8               	btfss	status,0,c
  4371   001170  EFBC  F008         	goto	u5421
  4372   001174  EFBE  F008         	goto	u5420
  4373   001178                     u5421:
  4374   001178  EFBC  F007         	goto	l4653
  4375   00117C                     u5420:
  4376   00117C                     l4697:
  4377                           
  4378                           ; BSR set to: 0
  4379                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 816:  i = sizeof(
      +                          dbuf) - 1;
  4380   00117C  0E00               	movlw	0
  4381   00117E  6F78               	movwf	(efgtoa@i+1)& (0+255),b
  4382   001180  0E4F               	movlw	79
  4383   001182  6F77               	movwf	efgtoa@i& (0+255),b
  4384   001184                     
  4385                           ; BSR set to: 0
  4386                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 817:     dbuf[i] 
      +                          = '\0';
  4387   001184  0E00               	movlw	low _dbuf
  4388   001186  2577               	addwf	efgtoa@i& (0+255),w,b
  4389   001188  6ED9               	movwf	fsr2l,c
  4390   00118A  0E01               	movlw	high _dbuf
  4391   00118C  2178               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4392   00118E  6EDA               	movwf	fsr2h,c
  4393   001190  6ADF               	clrf	indf2,c
  4394   001192                     
  4395                           ; BSR set to: 0
  4396                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 848:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
  4397   001192  0E00               	movlw	low _dbuf
  4398   001194  6E5D               	movwf	??_efgtoa^0,c
  4399   001196  0E01               	movlw	high _dbuf
  4400   001198  6E5E               	movwf	(??_efgtoa+1)^0,c
  4401   00119A  5186               	movf	efgtoa@n& (0+255),w,b
  4402   00119C  5E5D               	subwf	??_efgtoa^0,f,c
  4403   00119E  5187               	movf	(efgtoa@n+1)& (0+255),w,b
  4404   0011A0  5A5E               	subwfb	(??_efgtoa+1)^0,f,c
  4405   0011A2  5177               	movf	efgtoa@i& (0+255),w,b
  4406   0011A4  245D               	addwf	??_efgtoa^0,w,c
  4407   0011A6  6E01               	movwf	memcpy@d1^0,c
  4408   0011A8  5178               	movf	(efgtoa@i+1)& (0+255),w,b
  4409   0011AA  205E               	addwfc	(??_efgtoa+1)^0,w,c
  4410   0011AC  6E02               	movwf	(memcpy@d1+1)^0,c
  4411   0011AE  0E00               	movlw	low _dbuf
  4412   0011B0  6E03               	movwf	memcpy@s1^0,c
  4413   0011B2  0E01               	movlw	high _dbuf
  4414   0011B4  6E04               	movwf	(memcpy@s1+1)^0,c
  4415   0011B6  C086  F005         	movff	efgtoa@n,memcpy@n
  4416   0011BA  C087  F006         	movff	efgtoa@n+1,memcpy@n+1
  4417   0011BE  EC9C  F01A         	call	_memcpy	;wreg free
  4418   0011C2                     
  4419                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 849:  n = i-n;
  4420   0011C2  0100               	movlb	0	; () banked
  4421   0011C4  5186               	movf	efgtoa@n& (0+255),w,b
  4422   0011C6  5D77               	subwf	efgtoa@i& (0+255),w,b
  4423   0011C8  6F86               	movwf	efgtoa@n& (0+255),b
  4424   0011CA  5187               	movf	(efgtoa@n+1)& (0+255),w,b
  4425   0011CC  5978               	subwfb	(efgtoa@i+1)& (0+255),w,b
  4426   0011CE  6F87               	movwf	(efgtoa@n+1)& (0+255),b
  4427   0011D0                     
  4428                           ; BSR set to: 0
  4429                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 850:  i = sign ==
      +                           0 ? 0 : 1;
  4430   0011D0  5181               	movf	efgtoa@sign& (0+255),w,b
  4431   0011D2  A4D8               	btfss	status,2,c
  4432   0011D4  EFEE  F008         	goto	u5431
  4433   0011D8  EFF1  F008         	goto	u5430
  4434   0011DC                     u5431:
  4435   0011DC  0E01               	movlw	1
  4436   0011DE  EFF2  F008         	goto	u5440
  4437   0011E2                     u5430:
  4438   0011E2  0E00               	movlw	0
  4439   0011E4                     u5440:
  4440   0011E4  6F77               	movwf	efgtoa@i& (0+255),b
  4441   0011E6  6B78               	clrf	(efgtoa@i+1)& (0+255),b
  4442   0011E8                     
  4443                           ; BSR set to: 0
  4444                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 861:  if (sign) {
  4445   0011E8  5181               	movf	efgtoa@sign& (0+255),w,b
  4446   0011EA  B4D8               	btfsc	status,2,c
  4447   0011EC  EFFA  F008         	goto	u5451
  4448   0011F0  EFFC  F008         	goto	u5450
  4449   0011F4                     u5451:
  4450   0011F4  EF07  F009         	goto	l4711
  4451   0011F8                     u5450:
  4452   0011F8                     
  4453                           ; BSR set to: 0
  4454                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 862:   dbuf[--n] 
      +                          = sign;
  4455   0011F8  0786               	decf	efgtoa@n& (0+255),f,b
  4456   0011FA  A0D8               	btfss	status,0,c
  4457   0011FC  0787               	decf	(efgtoa@n+1)& (0+255),f,b
  4458   0011FE  0E00               	movlw	low _dbuf
  4459   001200  2586               	addwf	efgtoa@n& (0+255),w,b
  4460   001202  6ED9               	movwf	fsr2l,c
  4461   001204  0E01               	movlw	high _dbuf
  4462   001206  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4463   001208  6EDA               	movwf	fsr2h,c
  4464   00120A  C081  FFDF         	movff	efgtoa@sign,indf2
  4465   00120E                     l4711:
  4466                           
  4467                           ; BSR set to: 0
  4468                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 864:  w -= i;
  4469   00120E  5177               	movf	efgtoa@i& (0+255),w,b
  4470   001210  5F71               	subwf	efgtoa@w& (0+255),f,b
  4471   001212  5178               	movf	(efgtoa@i+1)& (0+255),w,b
  4472   001214  5B72               	subwfb	(efgtoa@w+1)& (0+255),f,b
  4473   001216                     
  4474                           ; BSR set to: 0
  4475                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 867:     return (
      +                          void) pad(fp, &dbuf[n], w);
  4476   001216  C057  F00F         	movff	efgtoa@fp,pad@fp
  4477   00121A  0E00               	movlw	low _dbuf
  4478   00121C  2586               	addwf	efgtoa@n& (0+255),w,b
  4479   00121E  6E10               	movwf	pad@buf^0,c
  4480   001220  0E01               	movlw	high _dbuf
  4481   001222  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4482   001224  6E11               	movwf	(pad@buf+1)^0,c
  4483   001226  C071  F012         	movff	efgtoa@w,pad@p
  4484   00122A  C072  F013         	movff	efgtoa@w+1,pad@p+1
  4485   00122E  EC13  F01A         	call	_pad	;wreg free
  4486   001232                     l946:
  4487   001232  0012               	return		;funcret
  4488   001234                     __end_of_efgtoa:
  4489                           	callstack 0
  4490                           
  4491 ;; *************** function _strcpy *****************
  4492 ;; Defined at:
  4493 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\strcpy.c"
  4494 ;; Parameters:    Size  Location     Type
  4495 ;;  dest            2    0[COMRAM] PTR unsigned char 
  4496 ;;		 -> dbuf(80), 
  4497 ;;  src             1    2[COMRAM] PTR const unsigned char 
  4498 ;;		 -> STR_7(4), STR_4(4), 
  4499 ;; Auto vars:     Size  Location     Type
  4500 ;;  d               2    4[COMRAM] PTR unsigned char 
  4501 ;;		 -> dbuf(80), 
  4502 ;; Return value:  Size  Location     Type
  4503 ;;                  2    0[COMRAM] PTR unsigned char 
  4504 ;; Registers used:
  4505 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4506 ;; Tracked objects:
  4507 ;;		On entry : 0/0
  4508 ;;		On exit  : 0/0
  4509 ;;		Unchanged: 0/0
  4510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4511 ;;      Params:         3       0       0       0       0       0       0       0       0
  4512 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4513 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4514 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4515 ;;Total ram usage:        6 bytes
  4516 ;; Hardware stack levels used: 1
  4517 ;; This function calls:
  4518 ;;		Nothing
  4519 ;; This function is called by:
  4520 ;;		_efgtoa
  4521 ;; This function uses a non-reentrant model
  4522 ;;
  4523                           
  4524                           	psect	text12
  4525   00370A                     __ptext12:
  4526                           	callstack 0
  4527   00370A                     _strcpy:
  4528                           	callstack 25
  4529   00370A  C001  F005         	movff	strcpy@dest,strcpy@d
  4530   00370E  C002  F006         	movff	strcpy@dest+1,strcpy@d+1
  4531   003712                     l4445:
  4532   003712  2A03               	incf	strcpy@src^0,f,c
  4533   003714  0403               	decf	strcpy@src^0,w,c
  4534   003716  6E04               	movwf	??_strcpy^0,c
  4535   003718  C004  FFF6         	movff	??_strcpy,tblptrl
  4536   00371C                     	if	1	;There is more than 1 active tblptr byte
  4537   00371C  0E08               	movlw	high __smallconst
  4538   00371E  6EF7               	movwf	tblptrh,c
  4539   003720                     	endif
  4540   003720                     	if	0	;tblptru may be non-zero
  4541   003720                     	endif
  4542   003720                     	if	0	;tblptru may be non-zero
  4543   003720                     	endif
  4544   003720  C005  FFD9         	movff	strcpy@d,fsr2l
  4545   003724  C006  FFDA         	movff	strcpy@d+1,fsr2h
  4546   003728  4A05               	infsnz	strcpy@d^0,f,c
  4547   00372A  2A06               	incf	(strcpy@d+1)^0,f,c
  4548   00372C  0008               	tblrd		*
  4549   00372E  CFF5 FFDF          	movff	tablat,indf2
  4550   003732  50DF               	movf	indf2,w,c
  4551   003734  A4D8               	btfss	status,2,c
  4552   003736  EF9F  F01B         	goto	u5011
  4553   00373A  EFA1  F01B         	goto	u5010
  4554   00373E                     u5011:
  4555   00373E  EF89  F01B         	goto	l4445
  4556   003742                     u5010:
  4557   003742  0012               	return		;funcret
  4558   003744                     __end_of_strcpy:
  4559                           	callstack 0
  4560                           
  4561 ;; *************** function _pad *****************
  4562 ;; Defined at:
  4563 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  4564 ;; Parameters:    Size  Location     Type
  4565 ;;  fp              1   14[COMRAM] PTR struct _IO_FILE
  4566 ;;		 -> sprintf@f(12), 
  4567 ;;  buf             2   15[COMRAM] PTR unsigned char 
  4568 ;;		 -> dbuf(80), 
  4569 ;;  p               2   17[COMRAM] int 
  4570 ;; Auto vars:     Size  Location     Type
  4571 ;;  i               2   20[COMRAM] int 
  4572 ;; Return value:  Size  Location     Type
  4573 ;;                  1    wreg      void 
  4574 ;; Registers used:
  4575 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4576 ;; Tracked objects:
  4577 ;;		On entry : 0/0
  4578 ;;		On exit  : 0/0
  4579 ;;		Unchanged: 0/0
  4580 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4581 ;;      Params:         5       0       0       0       0       0       0       0       0
  4582 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4583 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4584 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4585 ;;Total ram usage:        8 bytes
  4586 ;; Hardware stack levels used: 1
  4587 ;; Hardware stack levels required when called: 3
  4588 ;; This function calls:
  4589 ;;		_fputc
  4590 ;;		_fputs
  4591 ;; This function is called by:
  4592 ;;		_efgtoa
  4593 ;; This function uses a non-reentrant model
  4594 ;;
  4595                           
  4596                           	psect	text13
  4597   003426                     __ptext13:
  4598                           	callstack 0
  4599   003426                     _pad:
  4600                           	callstack 22
  4601   003426                     
  4602                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 193: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\com
      +                          mon\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.
      +                          c: 195:     int i;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c:
      +                           205:  if (p < 0) {
  4603   003426  BE13               	btfsc	(pad@p+1)^0,7,c
  4604   003428  EF1A  F01A         	goto	u4920
  4605   00342C  EF18  F01A         	goto	u4921
  4606   003430                     u4921:
  4607   003430  EF1E  F01A         	goto	l931
  4608   003434                     u4920:
  4609   003434                     
  4610                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 206:   p = 0;
  4611   003434  0E00               	movlw	0
  4612   003436  6E13               	movwf	(pad@p+1)^0,c
  4613   003438  0E00               	movlw	0
  4614   00343A  6E12               	movwf	pad@p^0,c
  4615   00343C                     l931:
  4616                           
  4617                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 208:     i = 0;
  4618   00343C  0E00               	movlw	0
  4619   00343E  6E16               	movwf	(pad@i+1)^0,c
  4620   003440  0E00               	movlw	0
  4621   003442  6E15               	movwf	pad@i^0,c
  4622                           
  4623                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  4624   003444  EF2E  F01A         	goto	l4417
  4625   003448                     l4413:
  4626                           
  4627                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
  4628   003448  0E00               	movlw	0
  4629   00344A  6E02               	movwf	(fputc@c+1)^0,c
  4630   00344C  0E20               	movlw	32
  4631   00344E  6E01               	movwf	fputc@c^0,c
  4632   003450  C00F  F003         	movff	pad@fp,fputc@fp
  4633   003454  ECB3  F018         	call	_fputc	;wreg free
  4634   003458                     
  4635                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 211:         ++i;
  4636   003458  4A15               	infsnz	pad@i^0,f,c
  4637   00345A  2A16               	incf	(pad@i+1)^0,f,c
  4638   00345C                     l4417:
  4639                           
  4640                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  4641   00345C  5012               	movf	pad@p^0,w,c
  4642   00345E  5C15               	subwf	pad@i^0,w,c
  4643   003460  5016               	movf	(pad@i+1)^0,w,c
  4644   003462  0A80               	xorlw	128
  4645   003464  6E14               	movwf	??_pad^0,c
  4646   003466  5013               	movf	(pad@p+1)^0,w,c
  4647   003468  0A80               	xorlw	128
  4648   00346A  5814               	subwfb	??_pad^0,w,c
  4649   00346C  A0D8               	btfss	status,0,c
  4650   00346E  EF3B  F01A         	goto	u4931
  4651   003472  EF3D  F01A         	goto	u4930
  4652   003476                     u4931:
  4653   003476  EF24  F01A         	goto	l4413
  4654   00347A                     u4930:
  4655   00347A                     
  4656                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
  4657   00347A  C010  F009         	movff	pad@buf,fputs@s
  4658   00347E  C011  F00A         	movff	pad@buf+1,fputs@s+1
  4659   003482  C00F  F00B         	movff	pad@fp,fputs@fp
  4660   003486  EC28  F01B         	call	_fputs	;wreg free
  4661   00348A  0012               	return		;funcret
  4662   00348C                     __end_of_pad:
  4663                           	callstack 0
  4664                           
  4665 ;; *************** function _fputs *****************
  4666 ;; Defined at:
  4667 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_fputs.c"
  4668 ;; Parameters:    Size  Location     Type
  4669 ;;  s               2    8[COMRAM] PTR const unsigned char 
  4670 ;;		 -> dbuf(80), 
  4671 ;;  fp              1   10[COMRAM] PTR struct _IO_FILE
  4672 ;;		 -> sprintf@f(12), 
  4673 ;; Auto vars:     Size  Location     Type
  4674 ;;  i               2   12[COMRAM] int 
  4675 ;;  c               1   11[COMRAM] unsigned char 
  4676 ;; Return value:  Size  Location     Type
  4677 ;;                  2    8[COMRAM] int 
  4678 ;; Registers used:
  4679 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4680 ;; Tracked objects:
  4681 ;;		On entry : 0/0
  4682 ;;		On exit  : 0/0
  4683 ;;		Unchanged: 0/0
  4684 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4685 ;;      Params:         3       0       0       0       0       0       0       0       0
  4686 ;;      Locals:         3       0       0       0       0       0       0       0       0
  4687 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4688 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4689 ;;Total ram usage:        6 bytes
  4690 ;; Hardware stack levels used: 1
  4691 ;; Hardware stack levels required when called: 2
  4692 ;; This function calls:
  4693 ;;		_fputc
  4694 ;; This function is called by:
  4695 ;;		_pad
  4696 ;; This function uses a non-reentrant model
  4697 ;;
  4698                           
  4699                           	psect	text14
  4700   003650                     __ptext14:
  4701                           	callstack 0
  4702   003650                     _fputs:
  4703                           	callstack 22
  4704   003650  0E00               	movlw	0
  4705   003652  6E0E               	movwf	(fputs@i+1)^0,c
  4706   003654  0E00               	movlw	0
  4707   003656  6E0D               	movwf	fputs@i^0,c
  4708   003658  EF37  F01B         	goto	l4037
  4709   00365C                     l4033:
  4710   00365C  C00C  F001         	movff	fputs@c,fputc@c
  4711   003660  6A02               	clrf	(fputc@c+1)^0,c
  4712   003662  C00B  F003         	movff	fputs@fp,fputc@fp
  4713   003666  ECB3  F018         	call	_fputc	;wreg free
  4714   00366A  4A0D               	infsnz	fputs@i^0,f,c
  4715   00366C  2A0E               	incf	(fputs@i+1)^0,f,c
  4716   00366E                     l4037:
  4717   00366E  500D               	movf	fputs@i^0,w,c
  4718   003670  2409               	addwf	fputs@s^0,w,c
  4719   003672  6ED9               	movwf	fsr2l,c
  4720   003674  500E               	movf	(fputs@i+1)^0,w,c
  4721   003676  200A               	addwfc	(fputs@s+1)^0,w,c
  4722   003678  6EDA               	movwf	fsr2h,c
  4723   00367A  50DF               	movf	indf2,w,c
  4724   00367C  6E0C               	movwf	fputs@c^0,c
  4725   00367E  500C               	movf	fputs@c^0,w,c
  4726   003680  A4D8               	btfss	status,2,c
  4727   003682  EF45  F01B         	goto	u4331
  4728   003686  EF47  F01B         	goto	u4330
  4729   00368A                     u4331:
  4730   00368A  EF2E  F01B         	goto	l4033
  4731   00368E                     u4330:
  4732   00368E  0012               	return		;funcret
  4733   003690                     __end_of_fputs:
  4734                           	callstack 0
  4735                           
  4736 ;; *************** function _fputc *****************
  4737 ;; Defined at:
  4738 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_fputc.c"
  4739 ;; Parameters:    Size  Location     Type
  4740 ;;  c               2    0[COMRAM] int 
  4741 ;;  fp              1    2[COMRAM] PTR struct _IO_FILE
  4742 ;;		 -> sprintf@f(12), 
  4743 ;; Auto vars:     Size  Location     Type
  4744 ;;		None
  4745 ;; Return value:  Size  Location     Type
  4746 ;;                  2    0[COMRAM] int 
  4747 ;; Registers used:
  4748 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4749 ;; Tracked objects:
  4750 ;;		On entry : 0/0
  4751 ;;		On exit  : 0/0
  4752 ;;		Unchanged: 0/0
  4753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4754 ;;      Params:         3       0       0       0       0       0       0       0       0
  4755 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4756 ;;      Temps:          5       0       0       0       0       0       0       0       0
  4757 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4758 ;;Total ram usage:        8 bytes
  4759 ;; Hardware stack levels used: 1
  4760 ;; Hardware stack levels required when called: 1
  4761 ;; This function calls:
  4762 ;;		_putch
  4763 ;; This function is called by:
  4764 ;;		_pad
  4765 ;;		_vfpfcnvrt
  4766 ;;		_fputs
  4767 ;; This function uses a non-reentrant model
  4768 ;;
  4769                           
  4770                           	psect	text15
  4771   003166                     __ptext15:
  4772                           	callstack 0
  4773   003166                     _fputc:
  4774                           	callstack 25
  4775   003166  5003               	movf	fputc@fp^0,w,c
  4776   003168  B4D8               	btfsc	status,2,c
  4777   00316A  EFB9  F018         	goto	u3901
  4778   00316E  EFBB  F018         	goto	u3900
  4779   003172                     u3901:
  4780   003172  EFC3  F018         	goto	l3819
  4781   003176                     u3900:
  4782   003176  5003               	movf	fputc@fp^0,w,c
  4783   003178  A4D8               	btfss	status,2,c
  4784   00317A  EFC1  F018         	goto	u3911
  4785   00317E  EFC3  F018         	goto	u3910
  4786   003182                     u3911:
  4787   003182  EFC8  F018         	goto	l3821
  4788   003186                     u3910:
  4789   003186                     l3819:
  4790   003186  5001               	movf	fputc@c^0,w,c
  4791   003188  EC6F  F01C         	call	_putch
  4792   00318C  EF0F  F019         	goto	l1072
  4793   003190                     l3821:
  4794   003190  5003               	movf	fputc@fp^0,w,c
  4795   003192  6ED9               	movwf	fsr2l,c
  4796   003194  6ADA               	clrf	fsr2h,c
  4797   003196  0E0A               	movlw	10
  4798   003198  26D9               	addwf	fsr2l,f,c
  4799   00319A  50DE               	movf	postinc2,w,c
  4800   00319C  10DE               	iorwf	postinc2,w,c
  4801   00319E  B4D8               	btfsc	status,2,c
  4802   0031A0  EFD4  F018         	goto	u3921
  4803   0031A4  EFD6  F018         	goto	u3920
  4804   0031A8                     u3921:
  4805   0031A8  EFEF  F018         	goto	l3825
  4806   0031AC                     u3920:
  4807   0031AC  5003               	movf	fputc@fp^0,w,c
  4808   0031AE  6ED9               	movwf	fsr2l,c
  4809   0031B0  6ADA               	clrf	fsr2h,c
  4810   0031B2  0E0A               	movlw	10
  4811   0031B4  26D9               	addwf	fsr2l,f,c
  4812   0031B6  5003               	movf	fputc@fp^0,w,c
  4813   0031B8  6EE1               	movwf	fsr1l,c
  4814   0031BA  6AE2               	clrf	fsr1h,c
  4815   0031BC  0E03               	movlw	3
  4816   0031BE  26E1               	addwf	fsr1l,f,c
  4817   0031C0  50DE               	movf	postinc2,w,c
  4818   0031C2  5CE6               	subwf	postinc1,w,c
  4819   0031C4  50E6               	movf	postinc1,w,c
  4820   0031C6  0A80               	xorlw	128
  4821   0031C8  6E08               	movwf	(??_fputc+4)^0,c
  4822   0031CA  50DE               	movf	postinc2,w,c
  4823   0031CC  0A80               	xorlw	128
  4824   0031CE  5808               	subwfb	(??_fputc+4)^0,w,c
  4825   0031D0  B0D8               	btfsc	status,0,c
  4826   0031D2  EFED  F018         	goto	u3931
  4827   0031D6  EFEF  F018         	goto	u3930
  4828   0031DA                     u3931:
  4829   0031DA  EF0F  F019         	goto	l1072
  4830   0031DE                     u3930:
  4831   0031DE                     l3825:
  4832   0031DE  5003               	movf	fputc@fp^0,w,c
  4833   0031E0  6ED9               	movwf	fsr2l,c
  4834   0031E2  6ADA               	clrf	fsr2h,c
  4835   0031E4  0E03               	movlw	3
  4836   0031E6  26D9               	addwf	fsr2l,f,c
  4837   0031E8  CFDE F004          	movff	postinc2,??_fputc
  4838   0031EC  CFDD F005          	movff	postdec2,??_fputc+1
  4839   0031F0  5003               	movf	fputc@fp^0,w,c
  4840   0031F2  6ED9               	movwf	fsr2l,c
  4841   0031F4  6ADA               	clrf	fsr2h,c
  4842   0031F6  CFDE F006          	movff	postinc2,??_fputc+2
  4843   0031FA  CFDD F007          	movff	postdec2,??_fputc+3
  4844   0031FE  5004               	movf	??_fputc^0,w,c
  4845   003200  2406               	addwf	(??_fputc+2)^0,w,c
  4846   003202  6ED9               	movwf	fsr2l,c
  4847   003204  5005               	movf	(??_fputc+1)^0,w,c
  4848   003206  2007               	addwfc	(??_fputc+3)^0,w,c
  4849   003208  6EDA               	movwf	fsr2h,c
  4850   00320A  C001  FFDF         	movff	fputc@c,indf2
  4851   00320E  5003               	movf	fputc@fp^0,w,c
  4852   003210  6ED9               	movwf	fsr2l,c
  4853   003212  6ADA               	clrf	fsr2h,c
  4854   003214  0E03               	movlw	3
  4855   003216  26D9               	addwf	fsr2l,f,c
  4856   003218  2ADE               	incf	postinc2,f,c
  4857   00321A  0E00               	movlw	0
  4858   00321C  22DD               	addwfc	postdec2,f,c
  4859   00321E                     l1072:
  4860   00321E  0012               	return		;funcret
  4861   003220                     __end_of_fputc:
  4862                           	callstack 0
  4863                           
  4864 ;; *************** function _putch *****************
  4865 ;; Defined at:
  4866 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\putch.c"
  4867 ;; Parameters:    Size  Location     Type
  4868 ;;  c               1    wreg     unsigned char 
  4869 ;; Auto vars:     Size  Location     Type
  4870 ;;  c               1    0[COMRAM] unsigned char 
  4871 ;; Return value:  Size  Location     Type
  4872 ;;                  1    wreg      void 
  4873 ;; Registers used:
  4874 ;;		wreg
  4875 ;; Tracked objects:
  4876 ;;		On entry : 0/0
  4877 ;;		On exit  : 0/0
  4878 ;;		Unchanged: 0/0
  4879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4880 ;;      Params:         0       0       0       0       0       0       0       0       0
  4881 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4882 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4883 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4884 ;;Total ram usage:        0 bytes
  4885 ;; Hardware stack levels used: 1
  4886 ;; This function calls:
  4887 ;;		Nothing
  4888 ;; This function is called by:
  4889 ;;		_fputc
  4890 ;; This function uses a non-reentrant model
  4891 ;;
  4892                           
  4893                           	psect	text16
  4894   0038DE                     __ptext16:
  4895                           	callstack 0
  4896   0038DE                     _putch:
  4897                           	callstack 25
  4898   0038DE  0012               	return		;funcret
  4899   0038E0                     __end_of_putch:
  4900                           	callstack 0
  4901                           
  4902 ;; *************** function _memcpy *****************
  4903 ;; Defined at:
  4904 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\memcpy.c"
  4905 ;; Parameters:    Size  Location     Type
  4906 ;;  d1              2    0[COMRAM] PTR void 
  4907 ;;		 -> dbuf(80), 
  4908 ;;  s1              2    2[COMRAM] PTR const void 
  4909 ;;		 -> dbuf(80), 
  4910 ;;  n               2    4[COMRAM] unsigned int 
  4911 ;; Auto vars:     Size  Location     Type
  4912 ;;  s               2    9[COMRAM] PTR const unsigned char 
  4913 ;;		 -> dbuf(80), 
  4914 ;;  d               2    7[COMRAM] PTR unsigned char 
  4915 ;;		 -> dbuf(80), 
  4916 ;;  tmp             1    6[COMRAM] unsigned char 
  4917 ;; Return value:  Size  Location     Type
  4918 ;;                  2    0[COMRAM] PTR void 
  4919 ;; Registers used:
  4920 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4921 ;; Tracked objects:
  4922 ;;		On entry : 0/0
  4923 ;;		On exit  : 0/0
  4924 ;;		Unchanged: 0/0
  4925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4926 ;;      Params:         6       0       0       0       0       0       0       0       0
  4927 ;;      Locals:         5       0       0       0       0       0       0       0       0
  4928 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4929 ;;      Totals:        11       0       0       0       0       0       0       0       0
  4930 ;;Total ram usage:       11 bytes
  4931 ;; Hardware stack levels used: 1
  4932 ;; This function calls:
  4933 ;;		Nothing
  4934 ;; This function is called by:
  4935 ;;		_efgtoa
  4936 ;; This function uses a non-reentrant model
  4937 ;;
  4938                           
  4939                           	psect	text17
  4940   003538                     __ptext17:
  4941                           	callstack 0
  4942   003538                     _memcpy:
  4943                           	callstack 25
  4944   003538  C003  F00A         	movff	memcpy@s1,memcpy@s
  4945   00353C  C004  F00B         	movff	memcpy@s1+1,memcpy@s+1
  4946   003540  C001  F008         	movff	memcpy@d1,memcpy@d
  4947   003544  C002  F009         	movff	memcpy@d1+1,memcpy@d+1
  4948   003548  EFB6  F01A         	goto	l4493
  4949   00354C                     l4485:
  4950   00354C  C00A  FFD9         	movff	memcpy@s,fsr2l
  4951   003550  C00B  FFDA         	movff	memcpy@s+1,fsr2h
  4952   003554  50DF               	movf	indf2,w,c
  4953   003556  6E07               	movwf	memcpy@tmp^0,c
  4954   003558  4A0A               	infsnz	memcpy@s^0,f,c
  4955   00355A  2A0B               	incf	(memcpy@s+1)^0,f,c
  4956   00355C  C008  FFD9         	movff	memcpy@d,fsr2l
  4957   003560  C009  FFDA         	movff	memcpy@d+1,fsr2h
  4958   003564  C007  FFDF         	movff	memcpy@tmp,indf2
  4959   003568  4A08               	infsnz	memcpy@d^0,f,c
  4960   00356A  2A09               	incf	(memcpy@d+1)^0,f,c
  4961   00356C                     l4493:
  4962   00356C  0605               	decf	memcpy@n^0,f,c
  4963   00356E  A0D8               	btfss	status,0,c
  4964   003570  0606               	decf	(memcpy@n+1)^0,f,c
  4965   003572  2805               	incf	memcpy@n^0,w,c
  4966   003574  E106               	bnz	u5131
  4967   003576  2806               	incf	(memcpy@n+1)^0,w,c
  4968   003578  A4D8               	btfss	status,2,c
  4969   00357A  EFC1  F01A         	goto	u5131
  4970   00357E  EFC3  F01A         	goto	u5130
  4971   003582                     u5131:
  4972   003582  EFA6  F01A         	goto	l4485
  4973   003586                     u5130:
  4974   003586  0012               	return		;funcret
  4975   003588                     __end_of_memcpy:
  4976                           	callstack 0
  4977                           
  4978 ;; *************** function _labs *****************
  4979 ;; Defined at:
  4980 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\labs.c"
  4981 ;; Parameters:    Size  Location     Type
  4982 ;;  a               4    0[COMRAM] long 
  4983 ;; Auto vars:     Size  Location     Type
  4984 ;;		None
  4985 ;; Return value:  Size  Location     Type
  4986 ;;                  4    0[COMRAM] long 
  4987 ;; Registers used:
  4988 ;;		wreg, status,2, status,0
  4989 ;; Tracked objects:
  4990 ;;		On entry : 0/0
  4991 ;;		On exit  : 0/0
  4992 ;;		Unchanged: 0/0
  4993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4994 ;;      Params:         4       0       0       0       0       0       0       0       0
  4995 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4996 ;;      Temps:          4       0       0       0       0       0       0       0       0
  4997 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4998 ;;Total ram usage:        8 bytes
  4999 ;; Hardware stack levels used: 1
  5000 ;; This function calls:
  5001 ;;		Nothing
  5002 ;; This function is called by:
  5003 ;;		_efgtoa
  5004 ;; This function uses a non-reentrant model
  5005 ;;
  5006                           
  5007                           	psect	text18
  5008   00348C                     __ptext18:
  5009                           	callstack 0
  5010   00348C                     _labs:
  5011                           	callstack 25
  5012   00348C  BE04               	btfsc	(labs@a+3)^0,7,c
  5013   00348E  EF4B  F01A         	goto	u5021
  5014   003492  EF4D  F01A         	goto	u5020
  5015   003496                     u5021:
  5016   003496  EF57  F01A         	goto	l4451
  5017   00349A                     u5020:
  5018   00349A  C001  F001         	movff	labs@a,?_labs
  5019   00349E  C002  F002         	movff	labs@a+1,?_labs+1
  5020   0034A2  C003  F003         	movff	labs@a+2,?_labs+2
  5021   0034A6  C004  F004         	movff	labs@a+3,?_labs+3
  5022   0034AA  EF70  F01A         	goto	l1054
  5023   0034AE                     l4451:
  5024   0034AE  C001  F005         	movff	labs@a,??_labs
  5025   0034B2  C002  F006         	movff	labs@a+1,??_labs+1
  5026   0034B6  C003  F007         	movff	labs@a+2,??_labs+2
  5027   0034BA  C004  F008         	movff	labs@a+3,??_labs+3
  5028   0034BE  1E05               	comf	??_labs^0,f,c
  5029   0034C0  1E06               	comf	(??_labs+1)^0,f,c
  5030   0034C2  1E07               	comf	(??_labs+2)^0,f,c
  5031   0034C4  1E08               	comf	(??_labs+3)^0,f,c
  5032   0034C6  2A05               	incf	??_labs^0,f,c
  5033   0034C8  0E00               	movlw	0
  5034   0034CA  2206               	addwfc	(??_labs+1)^0,f,c
  5035   0034CC  2207               	addwfc	(??_labs+2)^0,f,c
  5036   0034CE  2208               	addwfc	(??_labs+3)^0,f,c
  5037   0034D0  C005  F001         	movff	??_labs,?_labs
  5038   0034D4  C006  F002         	movff	??_labs+1,?_labs+1
  5039   0034D8  C007  F003         	movff	??_labs+2,?_labs+2
  5040   0034DC  C008  F004         	movff	??_labs+3,?_labs+3
  5041   0034E0                     l1054:
  5042   0034E0  0012               	return		;funcret
  5043   0034E2                     __end_of_labs:
  5044                           	callstack 0
  5045                           
  5046 ;; *************** function _floorf *****************
  5047 ;; Defined at:
  5048 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\floorf.c"
  5049 ;; Parameters:    Size  Location     Type
  5050 ;;  x               4   66[COMRAM] float 
  5051 ;; Auto vars:     Size  Location     Type
  5052 ;;  u               4   82[COMRAM] struct .
  5053 ;;  m               4   76[COMRAM] unsigned long 
  5054 ;;  e               2   80[COMRAM] int 
  5055 ;; Return value:  Size  Location     Type
  5056 ;;                  4   66[COMRAM] float 
  5057 ;; Registers used:
  5058 ;;		wreg, status,2, status,0
  5059 ;; Tracked objects:
  5060 ;;		On entry : 0/0
  5061 ;;		On exit  : 0/0
  5062 ;;		Unchanged: 0/0
  5063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5064 ;;      Params:         4       0       0       0       0       0       0       0       0
  5065 ;;      Locals:        10       0       0       0       0       0       0       0       0
  5066 ;;      Temps:          6       0       0       0       0       0       0       0       0
  5067 ;;      Totals:        20       0       0       0       0       0       0       0       0
  5068 ;;Total ram usage:       20 bytes
  5069 ;; Hardware stack levels used: 1
  5070 ;; This function calls:
  5071 ;;		Nothing
  5072 ;; This function is called by:
  5073 ;;		_efgtoa
  5074 ;; This function uses a non-reentrant model
  5075 ;;
  5076                           
  5077                           	psect	text19
  5078   0026F8                     __ptext19:
  5079                           	callstack 0
  5080   0026F8                     _floorf:
  5081                           	callstack 25
  5082   0026F8  C0B9  F053         	movff	floorf@F521,floorf@u
  5083   0026FC  C0BA  F054         	movff	floorf@F521+1,floorf@u+1
  5084   002700  C0BB  F055         	movff	floorf@F521+2,floorf@u+2
  5085   002704  C0BC  F056         	movff	floorf@F521+3,floorf@u+3
  5086   002708  C043  F053         	movff	floorf@x,floorf@u
  5087   00270C  C044  F054         	movff	floorf@x+1,floorf@u+1
  5088   002710  C045  F055         	movff	floorf@x+2,floorf@u+2
  5089   002714  C046  F056         	movff	floorf@x+3,floorf@u+3
  5090   002718  0E81               	movlw	129
  5091   00271A  6E47               	movwf	??_floorf^0,c
  5092   00271C  0EFF               	movlw	255
  5093   00271E  6E48               	movwf	(??_floorf+1)^0,c
  5094   002720  C053  F049         	movff	floorf@u,??_floorf+2
  5095   002724  C054  F04A         	movff	floorf@u+1,??_floorf+3
  5096   002728  C055  F04B         	movff	floorf@u+2,??_floorf+4
  5097   00272C  C056  F04C         	movff	floorf@u+3,??_floorf+5
  5098   002730  0E18               	movlw	24
  5099   002732  EFA0  F013         	goto	u5030
  5100   002736                     u5035:
  5101   002736  90D8               	bcf	status,0,c
  5102   002738  324C               	rrcf	(??_floorf+5)^0,f,c
  5103   00273A  324B               	rrcf	(??_floorf+4)^0,f,c
  5104   00273C  324A               	rrcf	(??_floorf+3)^0,f,c
  5105   00273E  3249               	rrcf	(??_floorf+2)^0,f,c
  5106   002740                     u5030:
  5107   002740  2EE8               	decfsz	wreg,f,c
  5108   002742  EF9B  F013         	goto	u5035
  5109   002746  5049               	movf	(??_floorf+2)^0,w,c
  5110   002748  2447               	addwf	??_floorf^0,w,c
  5111   00274A  6E51               	movwf	floorf@e^0,c
  5112   00274C  0E00               	movlw	0
  5113   00274E  2048               	addwfc	(??_floorf+1)^0,w,c
  5114   002750  6E52               	movwf	(floorf@e+1)^0,c
  5115   002752  BE52               	btfsc	(floorf@e+1)^0,7,c
  5116   002754  EFB5  F013         	goto	u5041
  5117   002758  5052               	movf	(floorf@e+1)^0,w,c
  5118   00275A  E109               	bnz	u5040
  5119   00275C  0E17               	movlw	23
  5120   00275E  5C51               	subwf	floorf@e^0,w,c
  5121   002760  A0D8               	btfss	status,0,c
  5122   002762  EFB5  F013         	goto	u5041
  5123   002766  EFB7  F013         	goto	u5040
  5124   00276A                     u5041:
  5125   00276A  EFC1  F013         	goto	l4461
  5126   00276E                     u5040:
  5127   00276E                     l4459:
  5128   00276E  C043  F043         	movff	floorf@x,?_floorf
  5129   002772  C044  F044         	movff	floorf@x+1,?_floorf+1
  5130   002776  C045  F045         	movff	floorf@x+2,?_floorf+2
  5131   00277A  C046  F046         	movff	floorf@x+3,?_floorf+3
  5132   00277E  EF84  F014         	goto	l1040
  5133   002782                     l4461:
  5134   002782  BE52               	btfsc	(floorf@e+1)^0,7,c
  5135   002784  EFC6  F013         	goto	u5051
  5136   002788  EFC8  F013         	goto	u5050
  5137   00278C                     u5051:
  5138   00278C  EF38  F014         	goto	l4471
  5139   002790                     u5050:
  5140   002790  C051  F047         	movff	floorf@e,??_floorf
  5141   002794  0EFF               	movlw	255
  5142   002796  6E48               	movwf	(??_floorf+1)^0,c
  5143   002798  0EFF               	movlw	255
  5144   00279A  6E49               	movwf	(??_floorf+2)^0,c
  5145   00279C  0E7F               	movlw	127
  5146   00279E  6E4A               	movwf	(??_floorf+3)^0,c
  5147   0027A0  0E00               	movlw	0
  5148   0027A2  6E4B               	movwf	(??_floorf+4)^0,c
  5149   0027A4                     u5065:
  5150   0027A4  6647               	tstfsz	??_floorf^0,c
  5151   0027A6  EFD7  F013         	goto	u5066
  5152   0027AA  EFDF  F013         	goto	u5067
  5153   0027AE                     u5066:
  5154   0027AE  344B               	rlcf	(??_floorf+4)^0,w,c
  5155   0027B0  324B               	rrcf	(??_floorf+4)^0,f,c
  5156   0027B2  324A               	rrcf	(??_floorf+3)^0,f,c
  5157   0027B4  3249               	rrcf	(??_floorf+2)^0,f,c
  5158   0027B6  3248               	rrcf	(??_floorf+1)^0,f,c
  5159   0027B8  2E47               	decfsz	??_floorf^0,f,c
  5160   0027BA  EFD2  F013         	goto	u5065
  5161   0027BE                     u5067:
  5162   0027BE  C048  F04D         	movff	??_floorf+1,floorf@m
  5163   0027C2  C049  F04E         	movff	??_floorf+2,floorf@m+1
  5164   0027C6  C04A  F04F         	movff	??_floorf+3,floorf@m+2
  5165   0027CA  C04B  F050         	movff	??_floorf+4,floorf@m+3
  5166   0027CE  504D               	movf	floorf@m^0,w,c
  5167   0027D0  1453               	andwf	floorf@u^0,w,c
  5168   0027D2  6E47               	movwf	??_floorf^0,c
  5169   0027D4  504E               	movf	(floorf@m+1)^0,w,c
  5170   0027D6  1454               	andwf	(floorf@u+1)^0,w,c
  5171   0027D8  6E48               	movwf	(??_floorf+1)^0,c
  5172   0027DA  504F               	movf	(floorf@m+2)^0,w,c
  5173   0027DC  1455               	andwf	(floorf@u+2)^0,w,c
  5174   0027DE  6E49               	movwf	(??_floorf+2)^0,c
  5175   0027E0  5050               	movf	(floorf@m+3)^0,w,c
  5176   0027E2  1456               	andwf	(floorf@u+3)^0,w,c
  5177   0027E4  6E4A               	movwf	(??_floorf+3)^0,c
  5178   0027E6  5047               	movf	??_floorf^0,w,c
  5179   0027E8  1048               	iorwf	(??_floorf+1)^0,w,c
  5180   0027EA  1049               	iorwf	(??_floorf+2)^0,w,c
  5181   0027EC  104A               	iorwf	(??_floorf+3)^0,w,c
  5182   0027EE  A4D8               	btfss	status,2,c
  5183   0027F0  EFFC  F013         	goto	u5071
  5184   0027F4  EFFE  F013         	goto	u5070
  5185   0027F8                     u5071:
  5186   0027F8  EF00  F014         	goto	l4467
  5187   0027FC                     u5070:
  5188   0027FC  EFB7  F013         	goto	l4459
  5189   002800                     l4467:
  5190   002800  C053  F047         	movff	floorf@u,??_floorf
  5191   002804  C054  F048         	movff	floorf@u+1,??_floorf+1
  5192   002808  C055  F049         	movff	floorf@u+2,??_floorf+2
  5193   00280C  C056  F04A         	movff	floorf@u+3,??_floorf+3
  5194   002810  0E20               	movlw	32
  5195   002812  EF10  F014         	goto	u5080
  5196   002816                     u5085:
  5197   002816  90D8               	bcf	status,0,c
  5198   002818  324A               	rrcf	(??_floorf+3)^0,f,c
  5199   00281A  3249               	rrcf	(??_floorf+2)^0,f,c
  5200   00281C  3248               	rrcf	(??_floorf+1)^0,f,c
  5201   00281E  3247               	rrcf	??_floorf^0,f,c
  5202   002820                     u5080:
  5203   002820  2EE8               	decfsz	wreg,f,c
  5204   002822  EF0B  F014         	goto	u5085
  5205   002826  5047               	movf	??_floorf^0,w,c
  5206   002828  1048               	iorwf	(??_floorf+1)^0,w,c
  5207   00282A  1049               	iorwf	(??_floorf+2)^0,w,c
  5208   00282C  104A               	iorwf	(??_floorf+3)^0,w,c
  5209   00282E  B4D8               	btfsc	status,2,c
  5210   002830  EF1C  F014         	goto	u5091
  5211   002834  EF1E  F014         	goto	u5090
  5212   002838                     u5091:
  5213   002838  EF26  F014         	goto	l1043
  5214   00283C                     u5090:
  5215   00283C  504D               	movf	floorf@m^0,w,c
  5216   00283E  2653               	addwf	floorf@u^0,f,c
  5217   002840  504E               	movf	(floorf@m+1)^0,w,c
  5218   002842  2254               	addwfc	(floorf@u+1)^0,f,c
  5219   002844  504F               	movf	(floorf@m+2)^0,w,c
  5220   002846  2255               	addwfc	(floorf@u+2)^0,f,c
  5221   002848  5050               	movf	(floorf@m+3)^0,w,c
  5222   00284A  2256               	addwfc	(floorf@u+3)^0,f,c
  5223   00284C                     l1043:
  5224   00284C  1C4D               	comf	floorf@m^0,w,c
  5225   00284E  6E47               	movwf	??_floorf^0,c
  5226   002850  1C4E               	comf	(floorf@m+1)^0,w,c
  5227   002852  6E48               	movwf	(??_floorf+1)^0,c
  5228   002854  1C4F               	comf	(floorf@m+2)^0,w,c
  5229   002856  6E49               	movwf	(??_floorf+2)^0,c
  5230   002858  1C50               	comf	(floorf@m+3)^0,w,c
  5231   00285A  6E4A               	movwf	(??_floorf+3)^0,c
  5232   00285C  5047               	movf	??_floorf^0,w,c
  5233   00285E  1653               	andwf	floorf@u^0,f,c
  5234   002860  5048               	movf	(??_floorf+1)^0,w,c
  5235   002862  1654               	andwf	(floorf@u+1)^0,f,c
  5236   002864  5049               	movf	(??_floorf+2)^0,w,c
  5237   002866  1655               	andwf	(floorf@u+2)^0,f,c
  5238   002868  504A               	movf	(??_floorf+3)^0,w,c
  5239   00286A  1656               	andwf	(floorf@u+3)^0,f,c
  5240   00286C  EF7C  F014         	goto	l4479
  5241   002870                     l4471:
  5242   002870  C053  F047         	movff	floorf@u,??_floorf
  5243   002874  C054  F048         	movff	floorf@u+1,??_floorf+1
  5244   002878  C055  F049         	movff	floorf@u+2,??_floorf+2
  5245   00287C  C056  F04A         	movff	floorf@u+3,??_floorf+3
  5246   002880  0E20               	movlw	32
  5247   002882  EF48  F014         	goto	u5100
  5248   002886                     u5105:
  5249   002886  90D8               	bcf	status,0,c
  5250   002888  324A               	rrcf	(??_floorf+3)^0,f,c
  5251   00288A  3249               	rrcf	(??_floorf+2)^0,f,c
  5252   00288C  3248               	rrcf	(??_floorf+1)^0,f,c
  5253   00288E  3247               	rrcf	??_floorf^0,f,c
  5254   002890                     u5100:
  5255   002890  2EE8               	decfsz	wreg,f,c
  5256   002892  EF43  F014         	goto	u5105
  5257   002896  5047               	movf	??_floorf^0,w,c
  5258   002898  1048               	iorwf	(??_floorf+1)^0,w,c
  5259   00289A  1049               	iorwf	(??_floorf+2)^0,w,c
  5260   00289C  104A               	iorwf	(??_floorf+3)^0,w,c
  5261   00289E  A4D8               	btfss	status,2,c
  5262   0028A0  EF54  F014         	goto	u5111
  5263   0028A4  EF56  F014         	goto	u5110
  5264   0028A8                     u5111:
  5265   0028A8  EF60  F014         	goto	l4475
  5266   0028AC                     u5110:
  5267   0028AC  0E00               	movlw	0
  5268   0028AE  6E53               	movwf	floorf@u^0,c
  5269   0028B0  0E00               	movlw	0
  5270   0028B2  6E54               	movwf	(floorf@u+1)^0,c
  5271   0028B4  0E00               	movlw	0
  5272   0028B6  6E55               	movwf	(floorf@u+2)^0,c
  5273   0028B8  0E00               	movlw	0
  5274   0028BA  6E56               	movwf	(floorf@u+3)^0,c
  5275   0028BC  EF7C  F014         	goto	l4479
  5276   0028C0                     l4475:
  5277   0028C0  90D8               	bcf	status,0,c
  5278   0028C2  3453               	rlcf	floorf@u^0,w,c
  5279   0028C4  6E47               	movwf	??_floorf^0,c
  5280   0028C6  3454               	rlcf	(floorf@u+1)^0,w,c
  5281   0028C8  6E48               	movwf	(??_floorf+1)^0,c
  5282   0028CA  3455               	rlcf	(floorf@u+2)^0,w,c
  5283   0028CC  6E49               	movwf	(??_floorf+2)^0,c
  5284   0028CE  3456               	rlcf	(floorf@u+3)^0,w,c
  5285   0028D0  6E4A               	movwf	(??_floorf+3)^0,c
  5286   0028D2  5047               	movf	??_floorf^0,w,c
  5287   0028D4  1048               	iorwf	(??_floorf+1)^0,w,c
  5288   0028D6  1049               	iorwf	(??_floorf+2)^0,w,c
  5289   0028D8  104A               	iorwf	(??_floorf+3)^0,w,c
  5290   0028DA  B4D8               	btfsc	status,2,c
  5291   0028DC  EF72  F014         	goto	u5121
  5292   0028E0  EF74  F014         	goto	u5120
  5293   0028E4                     u5121:
  5294   0028E4  EF7C  F014         	goto	l4479
  5295   0028E8                     u5120:
  5296   0028E8  0E00               	movlw	0
  5297   0028EA  6E53               	movwf	floorf@u^0,c
  5298   0028EC  0E00               	movlw	0
  5299   0028EE  6E54               	movwf	(floorf@u+1)^0,c
  5300   0028F0  0E80               	movlw	128
  5301   0028F2  6E55               	movwf	(floorf@u+2)^0,c
  5302   0028F4  0EBF               	movlw	191
  5303   0028F6  6E56               	movwf	(floorf@u+3)^0,c
  5304   0028F8                     l4479:
  5305   0028F8  C053  F043         	movff	floorf@u,?_floorf
  5306   0028FC  C054  F044         	movff	floorf@u+1,?_floorf+1
  5307   002900  C055  F045         	movff	floorf@u+2,?_floorf+2
  5308   002904  C056  F046         	movff	floorf@u+3,?_floorf+3
  5309   002908                     l1040:
  5310   002908  0012               	return		;funcret
  5311   00290A                     __end_of_floorf:
  5312                           	callstack 0
  5313                           
  5314 ;; *************** function ___fpclassifyf *****************
  5315 ;; Defined at:
  5316 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\__fpclassifyf.c"
  5317 ;; Parameters:    Size  Location     Type
  5318 ;;  x               4    0[COMRAM] float 
  5319 ;; Auto vars:     Size  Location     Type
  5320 ;;  u               4   10[COMRAM] struct .
  5321 ;;  e               2    8[COMRAM] int 
  5322 ;; Return value:  Size  Location     Type
  5323 ;;                  2    0[COMRAM] int 
  5324 ;; Registers used:
  5325 ;;		wreg, status,2, status,0
  5326 ;; Tracked objects:
  5327 ;;		On entry : 0/0
  5328 ;;		On exit  : 0/0
  5329 ;;		Unchanged: 0/0
  5330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5331 ;;      Params:         4       0       0       0       0       0       0       0       0
  5332 ;;      Locals:         6       0       0       0       0       0       0       0       0
  5333 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5334 ;;      Totals:        14       0       0       0       0       0       0       0       0
  5335 ;;Total ram usage:       14 bytes
  5336 ;; Hardware stack levels used: 1
  5337 ;; This function calls:
  5338 ;;		Nothing
  5339 ;; This function is called by:
  5340 ;;		_efgtoa
  5341 ;; This function uses a non-reentrant model
  5342 ;;
  5343                           
  5344                           	psect	text20
  5345   002F9A                     __ptext20:
  5346                           	callstack 0
  5347   002F9A                     ___fpclassifyf:
  5348                           	callstack 25
  5349   002F9A  C0BD  F00B         	movff	___fpclassifyf@F465,___fpclassifyf@u
  5350   002F9E  C0BE  F00C         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  5351   002FA2  C0BF  F00D         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  5352   002FA6  C0C0  F00E         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  5353   002FAA  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  5354   002FAE  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  5355   002FB2  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  5356   002FB6  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  5357   002FBA  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  5358   002FBE  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5359   002FC2  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5360   002FC6  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5361   002FCA  0E18               	movlw	24
  5362   002FCC  EFED  F017         	goto	u4940
  5363   002FD0                     u4945:
  5364   002FD0  90D8               	bcf	status,0,c
  5365   002FD2  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  5366   002FD4  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  5367   002FD6  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  5368   002FD8  3205               	rrcf	??___fpclassifyf^0,f,c
  5369   002FDA                     u4940:
  5370   002FDA  2EE8               	decfsz	wreg,f,c
  5371   002FDC  EFE8  F017         	goto	u4945
  5372   002FE0  5005               	movf	??___fpclassifyf^0,w,c
  5373   002FE2  6E09               	movwf	___fpclassifyf@e^0,c
  5374   002FE4  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  5375   002FE6  5009               	movf	___fpclassifyf@e^0,w,c
  5376   002FE8  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5377   002FEA  A4D8               	btfss	status,2,c
  5378   002FEC  EFFA  F017         	goto	u4951
  5379   002FF0  EFFC  F017         	goto	u4950
  5380   002FF4                     u4951:
  5381   002FF4  EF1C  F018         	goto	l4433
  5382   002FF8                     u4950:
  5383   002FF8  90D8               	bcf	status,0,c
  5384   002FFA  340B               	rlcf	___fpclassifyf@u^0,w,c
  5385   002FFC  6E05               	movwf	??___fpclassifyf^0,c
  5386   002FFE  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  5387   003000  6E06               	movwf	(??___fpclassifyf+1)^0,c
  5388   003002  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  5389   003004  6E07               	movwf	(??___fpclassifyf+2)^0,c
  5390   003006  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  5391   003008  6E08               	movwf	(??___fpclassifyf+3)^0,c
  5392   00300A  5005               	movf	??___fpclassifyf^0,w,c
  5393   00300C  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  5394   00300E  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  5395   003010  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  5396   003012  A4D8               	btfss	status,2,c
  5397   003014  EF0E  F018         	goto	u4961
  5398   003018  EF10  F018         	goto	u4960
  5399   00301C                     u4961:
  5400   00301C  EF16  F018         	goto	l4429
  5401   003020                     u4960:
  5402   003020  0E00               	movlw	0
  5403   003022  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5404   003024  0E02               	movlw	2
  5405   003026  6E01               	movwf	?___fpclassifyf^0,c
  5406   003028  EF4B  F018         	goto	l1033
  5407   00302C                     l4429:
  5408   00302C  0E00               	movlw	0
  5409   00302E  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5410   003030  0E03               	movlw	3
  5411   003032  6E01               	movwf	?___fpclassifyf^0,c
  5412   003034  EF4B  F018         	goto	l1033
  5413   003038                     l4433:
  5414   003038  2809               	incf	___fpclassifyf@e^0,w,c
  5415   00303A  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5416   00303C  A4D8               	btfss	status,2,c
  5417   00303E  EF23  F018         	goto	u4971
  5418   003042  EF25  F018         	goto	u4970
  5419   003046                     u4971:
  5420   003046  EF47  F018         	goto	l4439
  5421   00304A                     u4970:
  5422   00304A  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  5423   00304E  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5424   003052  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5425   003056  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5426   00305A  0E09               	movlw	9
  5427   00305C                     u4985:
  5428   00305C  90D8               	bcf	status,0,c
  5429   00305E  3605               	rlcf	??___fpclassifyf^0,f,c
  5430   003060  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  5431   003062  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  5432   003064  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  5433   003066  2EE8               	decfsz	wreg,f,c
  5434   003068  EF2E  F018         	goto	u4985
  5435   00306C  5005               	movf	??___fpclassifyf^0,w,c
  5436   00306E  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  5437   003070  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  5438   003072  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  5439   003074  B4D8               	btfsc	status,2,c
  5440   003076  EF3F  F018         	goto	u4991
  5441   00307A  EF42  F018         	goto	u4990
  5442   00307E                     u4991:
  5443   00307E  0E01               	movlw	1
  5444   003080  EF43  F018         	goto	u5000
  5445   003084                     u4990:
  5446   003084  0E00               	movlw	0
  5447   003086                     u5000:
  5448   003086  6E01               	movwf	?___fpclassifyf^0,c
  5449   003088  6A02               	clrf	(?___fpclassifyf+1)^0,c
  5450   00308A  EF4B  F018         	goto	l1033
  5451   00308E                     l4439:
  5452   00308E  0E00               	movlw	0
  5453   003090  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5454   003092  0E04               	movlw	4
  5455   003094  6E01               	movwf	?___fpclassifyf^0,c
  5456   003096                     l1033:
  5457   003096  0012               	return		;funcret
  5458   003098                     __end_of___fpclassifyf:
  5459                           	callstack 0
  5460                           
  5461 ;; *************** function ___fltol *****************
  5462 ;; Defined at:
  5463 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\fltol.c"
  5464 ;; Parameters:    Size  Location     Type
  5465 ;;  f1              4    0[COMRAM] int 
  5466 ;; Auto vars:     Size  Location     Type
  5467 ;;  exp1            1    9[COMRAM] unsigned char 
  5468 ;;  sign1           1    8[COMRAM] unsigned char 
  5469 ;; Return value:  Size  Location     Type
  5470 ;;                  4    0[COMRAM] long 
  5471 ;; Registers used:
  5472 ;;		wreg, status,2, status,0
  5473 ;; Tracked objects:
  5474 ;;		On entry : 0/0
  5475 ;;		On exit  : 0/0
  5476 ;;		Unchanged: 0/0
  5477 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5478 ;;      Params:         4       0       0       0       0       0       0       0       0
  5479 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5480 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5481 ;;      Totals:        10       0       0       0       0       0       0       0       0
  5482 ;;Total ram usage:       10 bytes
  5483 ;; Hardware stack levels used: 1
  5484 ;; This function calls:
  5485 ;;		Nothing
  5486 ;; This function is called by:
  5487 ;;		_efgtoa
  5488 ;; This function uses a non-reentrant model
  5489 ;;
  5490                           
  5491                           	psect	text21
  5492   002D90                     __ptext21:
  5493                           	callstack 0
  5494   002D90                     ___fltol:
  5495                           	callstack 25
  5496   002D90  3403               	rlcf	(___fltol@f1+2)^0,w,c
  5497   002D92  3404               	rlcf	(___fltol@f1+3)^0,w,c
  5498   002D94  6E0A               	movwf	___fltol@exp1^0,c
  5499   002D96  500A               	movf	___fltol@exp1^0,w,c
  5500   002D98  A4D8               	btfss	status,2,c
  5501   002D9A  EFD1  F016         	goto	u4851
  5502   002D9E  EFD3  F016         	goto	u4850
  5503   002DA2                     u4851:
  5504   002DA2  EFDD  F016         	goto	l4371
  5505   002DA6                     u4850:
  5506   002DA6                     l4367:
  5507   002DA6  0E00               	movlw	0
  5508   002DA8  6E01               	movwf	?___fltol^0,c
  5509   002DAA  0E00               	movlw	0
  5510   002DAC  6E02               	movwf	(?___fltol+1)^0,c
  5511   002DAE  0E00               	movlw	0
  5512   002DB0  6E03               	movwf	(?___fltol+2)^0,c
  5513   002DB2  0E00               	movlw	0
  5514   002DB4  6E04               	movwf	(?___fltol+3)^0,c
  5515   002DB6  EF4A  F017         	goto	l493
  5516   002DBA                     l4371:
  5517   002DBA  C001  F005         	movff	___fltol@f1,??___fltol
  5518   002DBE  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  5519   002DC2  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  5520   002DC6  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  5521   002DCA  0E20               	movlw	32
  5522   002DCC  EFED  F016         	goto	u4860
  5523   002DD0                     u4865:
  5524   002DD0  90D8               	bcf	status,0,c
  5525   002DD2  3208               	rrcf	(??___fltol+3)^0,f,c
  5526   002DD4  3207               	rrcf	(??___fltol+2)^0,f,c
  5527   002DD6  3206               	rrcf	(??___fltol+1)^0,f,c
  5528   002DD8  3205               	rrcf	??___fltol^0,f,c
  5529   002DDA                     u4860:
  5530   002DDA  2EE8               	decfsz	wreg,f,c
  5531   002DDC  EFE8  F016         	goto	u4865
  5532   002DE0  5005               	movf	??___fltol^0,w,c
  5533   002DE2  6E09               	movwf	___fltol@sign1^0,c
  5534   002DE4  8E03               	bsf	(___fltol@f1+2)^0,7,c
  5535   002DE6  0EFF               	movlw	255
  5536   002DE8  1601               	andwf	___fltol@f1^0,f,c
  5537   002DEA  0EFF               	movlw	255
  5538   002DEC  1602               	andwf	(___fltol@f1+1)^0,f,c
  5539   002DEE  0EFF               	movlw	255
  5540   002DF0  1603               	andwf	(___fltol@f1+2)^0,f,c
  5541   002DF2  0E00               	movlw	0
  5542   002DF4  1604               	andwf	(___fltol@f1+3)^0,f,c
  5543   002DF6  0E96               	movlw	150
  5544   002DF8  5E0A               	subwf	___fltol@exp1^0,f,c
  5545   002DFA  BE0A               	btfsc	___fltol@exp1^0,7,c
  5546   002DFC  EF04  F017         	goto	u4870
  5547   002E00  EF02  F017         	goto	u4871
  5548   002E04                     u4871:
  5549   002E04  EF1A  F017         	goto	l4391
  5550   002E08                     u4870:
  5551   002E08  500A               	movf	___fltol@exp1^0,w,c
  5552   002E0A  0A80               	xorlw	128
  5553   002E0C  0F97               	addlw	151
  5554   002E0E  B0D8               	btfsc	status,0,c
  5555   002E10  EF0C  F017         	goto	u4881
  5556   002E14  EF0E  F017         	goto	u4880
  5557   002E18                     u4881:
  5558   002E18  EF10  F017         	goto	l4387
  5559   002E1C                     u4880:
  5560   002E1C  EFD3  F016         	goto	l4367
  5561   002E20                     l4387:
  5562   002E20  90D8               	bcf	status,0,c
  5563   002E22  3204               	rrcf	(___fltol@f1+3)^0,f,c
  5564   002E24  3203               	rrcf	(___fltol@f1+2)^0,f,c
  5565   002E26  3202               	rrcf	(___fltol@f1+1)^0,f,c
  5566   002E28  3201               	rrcf	___fltol@f1^0,f,c
  5567   002E2A  3E0A               	incfsz	___fltol@exp1^0,f,c
  5568   002E2C  EF10  F017         	goto	l4387
  5569   002E30  EF32  F017         	goto	l4401
  5570   002E34                     l4391:
  5571   002E34  0E1F               	movlw	31
  5572   002E36  640A               	cpfsgt	___fltol@exp1^0,c
  5573   002E38  EF20  F017         	goto	u4891
  5574   002E3C  EF22  F017         	goto	u4890
  5575   002E40                     u4891:
  5576   002E40  EF2A  F017         	goto	l4399
  5577   002E44                     u4890:
  5578   002E44  EFD3  F016         	goto	l4367
  5579   002E48                     l4397:
  5580   002E48  90D8               	bcf	status,0,c
  5581   002E4A  3601               	rlcf	___fltol@f1^0,f,c
  5582   002E4C  3602               	rlcf	(___fltol@f1+1)^0,f,c
  5583   002E4E  3603               	rlcf	(___fltol@f1+2)^0,f,c
  5584   002E50  3604               	rlcf	(___fltol@f1+3)^0,f,c
  5585   002E52  060A               	decf	___fltol@exp1^0,f,c
  5586   002E54                     l4399:
  5587   002E54  500A               	movf	___fltol@exp1^0,w,c
  5588   002E56  A4D8               	btfss	status,2,c
  5589   002E58  EF30  F017         	goto	u4901
  5590   002E5C  EF32  F017         	goto	u4900
  5591   002E60                     u4901:
  5592   002E60  EF24  F017         	goto	l4397
  5593   002E64                     u4900:
  5594   002E64                     l4401:
  5595   002E64  5009               	movf	___fltol@sign1^0,w,c
  5596   002E66  B4D8               	btfsc	status,2,c
  5597   002E68  EF38  F017         	goto	u4911
  5598   002E6C  EF3A  F017         	goto	u4910
  5599   002E70                     u4911:
  5600   002E70  EF42  F017         	goto	l4405
  5601   002E74                     u4910:
  5602   002E74  1E04               	comf	(___fltol@f1+3)^0,f,c
  5603   002E76  1E03               	comf	(___fltol@f1+2)^0,f,c
  5604   002E78  1E02               	comf	(___fltol@f1+1)^0,f,c
  5605   002E7A  6C01               	negf	___fltol@f1^0,c
  5606   002E7C  0E00               	movlw	0
  5607   002E7E  2202               	addwfc	(___fltol@f1+1)^0,f,c
  5608   002E80  2203               	addwfc	(___fltol@f1+2)^0,f,c
  5609   002E82  2204               	addwfc	(___fltol@f1+3)^0,f,c
  5610   002E84                     l4405:
  5611   002E84  C001  F001         	movff	___fltol@f1,?___fltol
  5612   002E88  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  5613   002E8C  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  5614   002E90  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  5615   002E94                     l493:
  5616   002E94  0012               	return		;funcret
  5617   002E96                     __end_of___fltol:
  5618                           	callstack 0
  5619                           
  5620 ;; *************** function ___flsub *****************
  5621 ;; Defined at:
  5622 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\sprcadd.c"
  5623 ;; Parameters:    Size  Location     Type
  5624 ;;  b               4   41[COMRAM] long 
  5625 ;;  a               4   45[COMRAM] long 
  5626 ;; Auto vars:     Size  Location     Type
  5627 ;;		None
  5628 ;; Return value:  Size  Location     Type
  5629 ;;                  4   41[COMRAM] long 
  5630 ;; Registers used:
  5631 ;;		wreg, status,2, status,0, cstack
  5632 ;; Tracked objects:
  5633 ;;		On entry : 0/0
  5634 ;;		On exit  : 0/0
  5635 ;;		Unchanged: 0/0
  5636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5637 ;;      Params:         8       0       0       0       0       0       0       0       0
  5638 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5639 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5640 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5641 ;;Total ram usage:        8 bytes
  5642 ;; Hardware stack levels used: 1
  5643 ;; Hardware stack levels required when called: 1
  5644 ;; This function calls:
  5645 ;;		___fladd
  5646 ;; This function is called by:
  5647 ;;		_logf
  5648 ;;		_efgtoa
  5649 ;; This function uses a non-reentrant model
  5650 ;;
  5651                           
  5652                           	psect	text22
  5653   003588                     __ptext22:
  5654                           	callstack 0
  5655   003588                     ___flsub:
  5656                           	callstack 26
  5657   003588  0E00               	movlw	0
  5658   00358A  1A2E               	xorwf	___flsub@a^0,f,c
  5659   00358C  0E00               	movlw	0
  5660   00358E  1A2F               	xorwf	(___flsub@a+1)^0,f,c
  5661   003590  0E00               	movlw	0
  5662   003592  1A30               	xorwf	(___flsub@a+2)^0,f,c
  5663   003594  0E80               	movlw	128
  5664   003596  1A31               	xorwf	(___flsub@a+3)^0,f,c
  5665   003598  C02A  F01A         	movff	___flsub@b,___fladd@b
  5666   00359C  C02B  F01B         	movff	___flsub@b+1,___fladd@b+1
  5667   0035A0  C02C  F01C         	movff	___flsub@b+2,___fladd@b+2
  5668   0035A4  C02D  F01D         	movff	___flsub@b+3,___fladd@b+3
  5669   0035A8  C02E  F01E         	movff	___flsub@a,___fladd@a
  5670   0035AC  C02F  F01F         	movff	___flsub@a+1,___fladd@a+1
  5671   0035B0  C030  F020         	movff	___flsub@a+2,___fladd@a+2
  5672   0035B4  C031  F021         	movff	___flsub@a+3,___fladd@a+3
  5673   0035B8  EC28  F00C         	call	___fladd	;wreg free
  5674   0035BC  C01A  F02A         	movff	?___fladd,?___flsub
  5675   0035C0  C01B  F02B         	movff	?___fladd+1,?___flsub+1
  5676   0035C4  C01C  F02C         	movff	?___fladd+2,?___flsub+2
  5677   0035C8  C01D  F02D         	movff	?___fladd+3,?___flsub+3
  5678   0035CC  0012               	return		;funcret
  5679   0035CE                     __end_of___flsub:
  5680                           	callstack 0
  5681                           
  5682 ;; *************** function ___fladd *****************
  5683 ;; Defined at:
  5684 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\sprcadd.c"
  5685 ;; Parameters:    Size  Location     Type
  5686 ;;  b               4   25[COMRAM] long 
  5687 ;;  a               4   29[COMRAM] long 
  5688 ;; Auto vars:     Size  Location     Type
  5689 ;;  grs             1   40[COMRAM] unsigned char 
  5690 ;;  bexp            1   39[COMRAM] unsigned char 
  5691 ;;  aexp            1   38[COMRAM] unsigned char 
  5692 ;;  signs           1   37[COMRAM] unsigned char 
  5693 ;; Return value:  Size  Location     Type
  5694 ;;                  4   25[COMRAM] unsigned char 
  5695 ;; Registers used:
  5696 ;;		wreg, status,2, status,0
  5697 ;; Tracked objects:
  5698 ;;		On entry : 0/0
  5699 ;;		On exit  : 0/0
  5700 ;;		Unchanged: 0/0
  5701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5702 ;;      Params:         8       0       0       0       0       0       0       0       0
  5703 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5704 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5705 ;;      Totals:        16       0       0       0       0       0       0       0       0
  5706 ;;Total ram usage:       16 bytes
  5707 ;; Hardware stack levels used: 1
  5708 ;; This function calls:
  5709 ;;		Nothing
  5710 ;; This function is called by:
  5711 ;;		_termistorin
  5712 ;;		___flsub
  5713 ;;		_logf
  5714 ;;		_efgtoa
  5715 ;;		_termistorout
  5716 ;; This function uses a non-reentrant model
  5717 ;;
  5718                           
  5719                           	psect	text23
  5720   001850                     __ptext23:
  5721                           	callstack 0
  5722   001850                     ___fladd:
  5723                           	callstack 26
  5724   001850  501D               	movf	(___fladd@b+3)^0,w,c
  5725   001852  0B80               	andlw	128
  5726   001854  6E26               	movwf	___fladd@signs^0,c
  5727   001856  501D               	movf	(___fladd@b+3)^0,w,c
  5728   001858  241D               	addwf	(___fladd@b+3)^0,w,c
  5729   00185A  6E28               	movwf	___fladd@bexp^0,c
  5730   00185C  AE1C               	btfss	(___fladd@b+2)^0,7,c
  5731   00185E  EF33  F00C         	goto	u3941
  5732   001862  EF35  F00C         	goto	u3940
  5733   001866                     u3941:
  5734   001866  EF36  F00C         	goto	l3835
  5735   00186A                     u3940:
  5736   00186A  8028               	bsf	___fladd@bexp^0,0,c
  5737   00186C                     l3835:
  5738   00186C  5028               	movf	___fladd@bexp^0,w,c
  5739   00186E  B4D8               	btfsc	status,2,c
  5740   001870  EF3C  F00C         	goto	u3951
  5741   001874  EF3E  F00C         	goto	u3950
  5742   001878                     u3951:
  5743   001878  EF53  F00C         	goto	l3845
  5744   00187C                     u3950:
  5745   00187C  2828               	incf	___fladd@bexp^0,w,c
  5746   00187E  A4D8               	btfss	status,2,c
  5747   001880  EF44  F00C         	goto	u3961
  5748   001884  EF46  F00C         	goto	u3960
  5749   001888                     u3961:
  5750   001888  EF4E  F00C         	goto	l3841
  5751   00188C                     u3960:
  5752   00188C  0E00               	movlw	0
  5753   00188E  6E1A               	movwf	___fladd@b^0,c
  5754   001890  0E00               	movlw	0
  5755   001892  6E1B               	movwf	(___fladd@b+1)^0,c
  5756   001894  0E00               	movlw	0
  5757   001896  6E1C               	movwf	(___fladd@b+2)^0,c
  5758   001898  0E00               	movlw	0
  5759   00189A  6E1D               	movwf	(___fladd@b+3)^0,c
  5760   00189C                     l3841:
  5761   00189C  8E1C               	bsf	(___fladd@b+2)^0,7,c
  5762   00189E  0E00               	movlw	0
  5763   0018A0  6E1D               	movwf	(___fladd@b+3)^0,c
  5764   0018A2  EF5B  F00C         	goto	l3847
  5765   0018A6                     l3845:
  5766   0018A6  0E00               	movlw	0
  5767   0018A8  6E1A               	movwf	___fladd@b^0,c
  5768   0018AA  0E00               	movlw	0
  5769   0018AC  6E1B               	movwf	(___fladd@b+1)^0,c
  5770   0018AE  0E00               	movlw	0
  5771   0018B0  6E1C               	movwf	(___fladd@b+2)^0,c
  5772   0018B2  0E00               	movlw	0
  5773   0018B4  6E1D               	movwf	(___fladd@b+3)^0,c
  5774   0018B6                     l3847:
  5775   0018B6  5021               	movf	(___fladd@a+3)^0,w,c
  5776   0018B8  0B80               	andlw	128
  5777   0018BA  6E27               	movwf	___fladd@aexp^0,c
  5778   0018BC  5026               	movf	___fladd@signs^0,w,c
  5779   0018BE  1827               	xorwf	___fladd@aexp^0,w,c
  5780   0018C0  B4D8               	btfsc	status,2,c
  5781   0018C2  EF65  F00C         	goto	u3971
  5782   0018C6  EF67  F00C         	goto	u3970
  5783   0018CA                     u3971:
  5784   0018CA  EF68  F00C         	goto	l3853
  5785   0018CE                     u3970:
  5786   0018CE  8C26               	bsf	___fladd@signs^0,6,c
  5787   0018D0                     l3853:
  5788   0018D0  5021               	movf	(___fladd@a+3)^0,w,c
  5789   0018D2  2421               	addwf	(___fladd@a+3)^0,w,c
  5790   0018D4  6E27               	movwf	___fladd@aexp^0,c
  5791   0018D6  AE20               	btfss	(___fladd@a+2)^0,7,c
  5792   0018D8  EF70  F00C         	goto	u3981
  5793   0018DC  EF72  F00C         	goto	u3980
  5794   0018E0                     u3981:
  5795   0018E0  EF73  F00C         	goto	l3859
  5796   0018E4                     u3980:
  5797   0018E4  8027               	bsf	___fladd@aexp^0,0,c
  5798   0018E6                     l3859:
  5799   0018E6  5027               	movf	___fladd@aexp^0,w,c
  5800   0018E8  B4D8               	btfsc	status,2,c
  5801   0018EA  EF79  F00C         	goto	u3991
  5802   0018EE  EF7B  F00C         	goto	u3990
  5803   0018F2                     u3991:
  5804   0018F2  EF90  F00C         	goto	l3869
  5805   0018F6                     u3990:
  5806   0018F6  2827               	incf	___fladd@aexp^0,w,c
  5807   0018F8  A4D8               	btfss	status,2,c
  5808   0018FA  EF81  F00C         	goto	u4001
  5809   0018FE  EF83  F00C         	goto	u4000
  5810   001902                     u4001:
  5811   001902  EF8B  F00C         	goto	l3865
  5812   001906                     u4000:
  5813   001906  0E00               	movlw	0
  5814   001908  6E1E               	movwf	___fladd@a^0,c
  5815   00190A  0E00               	movlw	0
  5816   00190C  6E1F               	movwf	(___fladd@a+1)^0,c
  5817   00190E  0E00               	movlw	0
  5818   001910  6E20               	movwf	(___fladd@a+2)^0,c
  5819   001912  0E00               	movlw	0
  5820   001914  6E21               	movwf	(___fladd@a+3)^0,c
  5821   001916                     l3865:
  5822   001916  8E20               	bsf	(___fladd@a+2)^0,7,c
  5823   001918  0E00               	movlw	0
  5824   00191A  6E21               	movwf	(___fladd@a+3)^0,c
  5825   00191C  EF98  F00C         	goto	l3871
  5826   001920                     l3869:
  5827   001920  0E00               	movlw	0
  5828   001922  6E1E               	movwf	___fladd@a^0,c
  5829   001924  0E00               	movlw	0
  5830   001926  6E1F               	movwf	(___fladd@a+1)^0,c
  5831   001928  0E00               	movlw	0
  5832   00192A  6E20               	movwf	(___fladd@a+2)^0,c
  5833   00192C  0E00               	movlw	0
  5834   00192E  6E21               	movwf	(___fladd@a+3)^0,c
  5835   001930                     l3871:
  5836   001930  5028               	movf	___fladd@bexp^0,w,c
  5837   001932  5C27               	subwf	___fladd@aexp^0,w,c
  5838   001934  B0D8               	btfsc	status,0,c
  5839   001936  EF9F  F00C         	goto	u4011
  5840   00193A  EFA1  F00C         	goto	u4010
  5841   00193E                     u4011:
  5842   00193E  EFC8  F00C         	goto	l3907
  5843   001942                     u4010:
  5844   001942  AC26               	btfss	___fladd@signs^0,6,c
  5845   001944  EFA6  F00C         	goto	u4021
  5846   001948  EFA8  F00C         	goto	u4020
  5847   00194C                     u4021:
  5848   00194C  EFAA  F00C         	goto	l3877
  5849   001950                     u4020:
  5850   001950  0E80               	movlw	128
  5851   001952  1A26               	xorwf	___fladd@signs^0,f,c
  5852   001954                     l3877:
  5853   001954  C028  F029         	movff	___fladd@bexp,___fladd@grs
  5854   001958  C027  F028         	movff	___fladd@aexp,___fladd@bexp
  5855   00195C  C029  F027         	movff	___fladd@grs,___fladd@aexp
  5856   001960  C01A  F029         	movff	___fladd@b,___fladd@grs
  5857   001964  C01E  F01A         	movff	___fladd@a,___fladd@b
  5858   001968  C029  F01E         	movff	___fladd@grs,___fladd@a
  5859   00196C  C01B  F029         	movff	___fladd@b+1,___fladd@grs
  5860   001970  C01F  F01B         	movff	___fladd@a+1,___fladd@b+1
  5861   001974  C029  F01F         	movff	___fladd@grs,___fladd@a+1
  5862   001978  C01C  F029         	movff	___fladd@b+2,___fladd@grs
  5863   00197C  C020  F01C         	movff	___fladd@a+2,___fladd@b+2
  5864   001980  C029  F020         	movff	___fladd@grs,___fladd@a+2
  5865   001984  C01D  F029         	movff	___fladd@b+3,___fladd@grs
  5866   001988  C021  F01D         	movff	___fladd@a+3,___fladd@b+3
  5867   00198C  C029  F021         	movff	___fladd@grs,___fladd@a+3
  5868   001990                     l3907:
  5869   001990  0E00               	movlw	0
  5870   001992  6E29               	movwf	___fladd@grs^0,c
  5871   001994  5028               	movf	___fladd@bexp^0,w,c
  5872   001996  C027  F022         	movff	___fladd@aexp,??___fladd
  5873   00199A  6A23               	clrf	(??___fladd+1)^0,c
  5874   00199C  5E22               	subwf	??___fladd^0,f,c
  5875   00199E  0E00               	movlw	0
  5876   0019A0  5A23               	subwfb	(??___fladd+1)^0,f,c
  5877   0019A2  BE23               	btfsc	(??___fladd+1)^0,7,c
  5878   0019A4  EFDD  F00C         	goto	u4031
  5879   0019A8  5023               	movf	(??___fladd+1)^0,w,c
  5880   0019AA  E109               	bnz	u4030
  5881   0019AC  0E1A               	movlw	26
  5882   0019AE  5C22               	subwf	??___fladd^0,w,c
  5883   0019B0  A0D8               	btfss	status,0,c
  5884   0019B2  EFDD  F00C         	goto	u4031
  5885   0019B6  EFDF  F00C         	goto	u4030
  5886   0019BA                     u4031:
  5887   0019BA  EF16  F00D         	goto	l725
  5888   0019BE                     u4030:
  5889   0019BE  501A               	movf	___fladd@b^0,w,c
  5890   0019C0  101B               	iorwf	(___fladd@b+1)^0,w,c
  5891   0019C2  101C               	iorwf	(___fladd@b+2)^0,w,c
  5892   0019C4  101D               	iorwf	(___fladd@b+3)^0,w,c
  5893   0019C6  A4D8               	btfss	status,2,c
  5894   0019C8  EFE8  F00C         	goto	u4041
  5895   0019CC  EFEB  F00C         	goto	u4040
  5896   0019D0                     u4041:
  5897   0019D0  0E01               	movlw	1
  5898   0019D2  EFEC  F00C         	goto	u4050
  5899   0019D6                     u4040:
  5900   0019D6  0E00               	movlw	0
  5901   0019D8                     u4050:
  5902   0019D8  6E29               	movwf	___fladd@grs^0,c
  5903   0019DA  0E00               	movlw	0
  5904   0019DC  6E1A               	movwf	___fladd@b^0,c
  5905   0019DE  0E00               	movlw	0
  5906   0019E0  6E1B               	movwf	(___fladd@b+1)^0,c
  5907   0019E2  0E00               	movlw	0
  5908   0019E4  6E1C               	movwf	(___fladd@b+2)^0,c
  5909   0019E6  0E00               	movlw	0
  5910   0019E8  6E1D               	movwf	(___fladd@b+3)^0,c
  5911   0019EA  C027  F028         	movff	___fladd@aexp,___fladd@bexp
  5912   0019EE  EF1F  F00D         	goto	l724
  5913   0019F2                     l726:
  5914   0019F2  A029               	btfss	___fladd@grs^0,0,c
  5915   0019F4  EFFE  F00C         	goto	u4061
  5916   0019F8  EF00  F00D         	goto	u4060
  5917   0019FC                     u4061:
  5918   0019FC  EF06  F00D         	goto	l3919
  5919   001A00                     u4060:
  5920   001A00  90D8               	bcf	status,0,c
  5921   001A02  3029               	rrcf	___fladd@grs^0,w,c
  5922   001A04  0901               	iorlw	1
  5923   001A06  6E29               	movwf	___fladd@grs^0,c
  5924   001A08  EF08  F00D         	goto	l3921
  5925   001A0C                     l3919:
  5926   001A0C  90D8               	bcf	status,0,c
  5927   001A0E  3229               	rrcf	___fladd@grs^0,f,c
  5928   001A10                     l3921:
  5929   001A10  A01A               	btfss	___fladd@b^0,0,c
  5930   001A12  EF0D  F00D         	goto	u4071
  5931   001A16  EF0F  F00D         	goto	u4070
  5932   001A1A                     u4071:
  5933   001A1A  EF10  F00D         	goto	l3925
  5934   001A1E                     u4070:
  5935   001A1E  8E29               	bsf	___fladd@grs^0,7,c
  5936   001A20                     l3925:
  5937   001A20  341D               	rlcf	(___fladd@b+3)^0,w,c
  5938   001A22  321D               	rrcf	(___fladd@b+3)^0,f,c
  5939   001A24  321C               	rrcf	(___fladd@b+2)^0,f,c
  5940   001A26  321B               	rrcf	(___fladd@b+1)^0,f,c
  5941   001A28  321A               	rrcf	___fladd@b^0,f,c
  5942   001A2A  2A28               	incf	___fladd@bexp^0,f,c
  5943   001A2C                     l725:
  5944   001A2C  5027               	movf	___fladd@aexp^0,w,c
  5945   001A2E  5C28               	subwf	___fladd@bexp^0,w,c
  5946   001A30  A0D8               	btfss	status,0,c
  5947   001A32  EF1D  F00D         	goto	u4081
  5948   001A36  EF1F  F00D         	goto	u4080
  5949   001A3A                     u4081:
  5950   001A3A  EFF9  F00C         	goto	l726
  5951   001A3E                     u4080:
  5952   001A3E                     l724:
  5953   001A3E  BC26               	btfsc	___fladd@signs^0,6,c
  5954   001A40  EF24  F00D         	goto	u4091
  5955   001A44  EF26  F00D         	goto	u4090
  5956   001A48                     u4091:
  5957   001A48  EF66  F00D         	goto	l3953
  5958   001A4C                     u4090:
  5959   001A4C  5028               	movf	___fladd@bexp^0,w,c
  5960   001A4E  A4D8               	btfss	status,2,c
  5961   001A50  EF2C  F00D         	goto	u4101
  5962   001A54  EF2E  F00D         	goto	u4100
  5963   001A58                     u4101:
  5964   001A58  EF38  F00D         	goto	l3935
  5965   001A5C                     u4100:
  5966   001A5C  0E00               	movlw	0
  5967   001A5E  6E1A               	movwf	?___fladd^0,c
  5968   001A60  0E00               	movlw	0
  5969   001A62  6E1B               	movwf	(?___fladd+1)^0,c
  5970   001A64  0E00               	movlw	0
  5971   001A66  6E1C               	movwf	(?___fladd+2)^0,c
  5972   001A68  0E00               	movlw	0
  5973   001A6A  6E1D               	movwf	(?___fladd+3)^0,c
  5974   001A6C  EF87  F00E         	goto	l733
  5975   001A70                     l3935:
  5976   001A70  501E               	movf	___fladd@a^0,w,c
  5977   001A72  261A               	addwf	___fladd@b^0,f,c
  5978   001A74  501F               	movf	(___fladd@a+1)^0,w,c
  5979   001A76  221B               	addwfc	(___fladd@b+1)^0,f,c
  5980   001A78  5020               	movf	(___fladd@a+2)^0,w,c
  5981   001A7A  221C               	addwfc	(___fladd@b+2)^0,f,c
  5982   001A7C  5021               	movf	(___fladd@a+3)^0,w,c
  5983   001A7E  221D               	addwfc	(___fladd@b+3)^0,f,c
  5984   001A80  A01D               	btfss	(___fladd@b+3)^0,0,c
  5985   001A82  EF45  F00D         	goto	u4111
  5986   001A86  EF47  F00D         	goto	u4110
  5987   001A8A                     u4111:
  5988   001A8A  EFF3  F00D         	goto	l3989
  5989   001A8E                     u4110:
  5990   001A8E  A029               	btfss	___fladd@grs^0,0,c
  5991   001A90  EF4C  F00D         	goto	u4121
  5992   001A94  EF4E  F00D         	goto	u4120
  5993   001A98                     u4121:
  5994   001A98  EF54  F00D         	goto	l3943
  5995   001A9C                     u4120:
  5996   001A9C  90D8               	bcf	status,0,c
  5997   001A9E  3029               	rrcf	___fladd@grs^0,w,c
  5998   001AA0  0901               	iorlw	1
  5999   001AA2  6E29               	movwf	___fladd@grs^0,c
  6000   001AA4  EF56  F00D         	goto	l3945
  6001   001AA8                     l3943:
  6002   001AA8  90D8               	bcf	status,0,c
  6003   001AAA  3229               	rrcf	___fladd@grs^0,f,c
  6004   001AAC                     l3945:
  6005   001AAC  A01A               	btfss	___fladd@b^0,0,c
  6006   001AAE  EF5B  F00D         	goto	u4131
  6007   001AB2  EF5D  F00D         	goto	u4130
  6008   001AB6                     u4131:
  6009   001AB6  EF5E  F00D         	goto	l3949
  6010   001ABA                     u4130:
  6011   001ABA  8E29               	bsf	___fladd@grs^0,7,c
  6012   001ABC                     l3949:
  6013   001ABC  341D               	rlcf	(___fladd@b+3)^0,w,c
  6014   001ABE  321D               	rrcf	(___fladd@b+3)^0,f,c
  6015   001AC0  321C               	rrcf	(___fladd@b+2)^0,f,c
  6016   001AC2  321B               	rrcf	(___fladd@b+1)^0,f,c
  6017   001AC4  321A               	rrcf	___fladd@b^0,f,c
  6018   001AC6  2A28               	incf	___fladd@bexp^0,f,c
  6019   001AC8  EFF3  F00D         	goto	l3989
  6020   001ACC                     l3953:
  6021   001ACC  501E               	movf	___fladd@a^0,w,c
  6022   001ACE  5C1A               	subwf	___fladd@b^0,w,c
  6023   001AD0  501F               	movf	(___fladd@a+1)^0,w,c
  6024   001AD2  581B               	subwfb	(___fladd@b+1)^0,w,c
  6025   001AD4  5020               	movf	(___fladd@a+2)^0,w,c
  6026   001AD6  581C               	subwfb	(___fladd@b+2)^0,w,c
  6027   001AD8  501D               	movf	(___fladd@b+3)^0,w,c
  6028   001ADA  0A80               	xorlw	128
  6029   001ADC  6E22               	movwf	??___fladd^0,c
  6030   001ADE  5021               	movf	(___fladd@a+3)^0,w,c
  6031   001AE0  0A80               	xorlw	128
  6032   001AE2  5822               	subwfb	??___fladd^0,w,c
  6033   001AE4  B0D8               	btfsc	status,0,c
  6034   001AE6  EF77  F00D         	goto	u4141
  6035   001AEA  EF79  F00D         	goto	u4140
  6036   001AEE                     u4141:
  6037   001AEE  EFA4  F00D         	goto	l3963
  6038   001AF2                     u4140:
  6039   001AF2  501A               	movf	___fladd@b^0,w,c
  6040   001AF4  5C1E               	subwf	___fladd@a^0,w,c
  6041   001AF6  6E22               	movwf	??___fladd^0,c
  6042   001AF8  501B               	movf	(___fladd@b+1)^0,w,c
  6043   001AFA  581F               	subwfb	(___fladd@a+1)^0,w,c
  6044   001AFC  6E23               	movwf	(??___fladd+1)^0,c
  6045   001AFE  501C               	movf	(___fladd@b+2)^0,w,c
  6046   001B00  5820               	subwfb	(___fladd@a+2)^0,w,c
  6047   001B02  6E24               	movwf	(??___fladd+2)^0,c
  6048   001B04  501D               	movf	(___fladd@b+3)^0,w,c
  6049   001B06  5821               	subwfb	(___fladd@a+3)^0,w,c
  6050   001B08  6E25               	movwf	(??___fladd+3)^0,c
  6051   001B0A  0EFF               	movlw	255
  6052   001B0C  2422               	addwf	??___fladd^0,w,c
  6053   001B0E  6E1A               	movwf	___fladd@b^0,c
  6054   001B10  0EFF               	movlw	255
  6055   001B12  2023               	addwfc	(??___fladd+1)^0,w,c
  6056   001B14  6E1B               	movwf	(___fladd@b+1)^0,c
  6057   001B16  0EFF               	movlw	255
  6058   001B18  2024               	addwfc	(??___fladd+2)^0,w,c
  6059   001B1A  6E1C               	movwf	(___fladd@b+2)^0,c
  6060   001B1C  0EFF               	movlw	255
  6061   001B1E  2025               	addwfc	(??___fladd+3)^0,w,c
  6062   001B20  6E1D               	movwf	(___fladd@b+3)^0,c
  6063   001B22  0E80               	movlw	128
  6064   001B24  1A26               	xorwf	___fladd@signs^0,f,c
  6065   001B26  6C29               	negf	___fladd@grs^0,c
  6066   001B28  5029               	movf	___fladd@grs^0,w,c
  6067   001B2A  A4D8               	btfss	status,2,c
  6068   001B2C  EF9A  F00D         	goto	u4151
  6069   001B30  EF9C  F00D         	goto	u4150
  6070   001B34                     u4151:
  6071   001B34  EFAC  F00D         	goto	l741
  6072   001B38                     u4150:
  6073   001B38  0E01               	movlw	1
  6074   001B3A  261A               	addwf	___fladd@b^0,f,c
  6075   001B3C  0E00               	movlw	0
  6076   001B3E  221B               	addwfc	(___fladd@b+1)^0,f,c
  6077   001B40  221C               	addwfc	(___fladd@b+2)^0,f,c
  6078   001B42  221D               	addwfc	(___fladd@b+3)^0,f,c
  6079   001B44  EFAC  F00D         	goto	l741
  6080   001B48                     l3963:
  6081   001B48  501E               	movf	___fladd@a^0,w,c
  6082   001B4A  5E1A               	subwf	___fladd@b^0,f,c
  6083   001B4C  501F               	movf	(___fladd@a+1)^0,w,c
  6084   001B4E  5A1B               	subwfb	(___fladd@b+1)^0,f,c
  6085   001B50  5020               	movf	(___fladd@a+2)^0,w,c
  6086   001B52  5A1C               	subwfb	(___fladd@b+2)^0,f,c
  6087   001B54  5021               	movf	(___fladd@a+3)^0,w,c
  6088   001B56  5A1D               	subwfb	(___fladd@b+3)^0,f,c
  6089   001B58                     l741:
  6090   001B58  501A               	movf	___fladd@b^0,w,c
  6091   001B5A  101B               	iorwf	(___fladd@b+1)^0,w,c
  6092   001B5C  101C               	iorwf	(___fladd@b+2)^0,w,c
  6093   001B5E  101D               	iorwf	(___fladd@b+3)^0,w,c
  6094   001B60  A4D8               	btfss	status,2,c
  6095   001B62  EFB5  F00D         	goto	u4161
  6096   001B66  EFB7  F00D         	goto	u4160
  6097   001B6A                     u4161:
  6098   001B6A  EFEC  F00D         	goto	l3987
  6099   001B6E                     u4160:
  6100   001B6E  5029               	movf	___fladd@grs^0,w,c
  6101   001B70  A4D8               	btfss	status,2,c
  6102   001B72  EFBD  F00D         	goto	u4171
  6103   001B76  EFBF  F00D         	goto	u4170
  6104   001B7A                     u4171:
  6105   001B7A  EFEC  F00D         	goto	l3987
  6106   001B7E                     u4170:
  6107   001B7E  0E00               	movlw	0
  6108   001B80  6E1A               	movwf	?___fladd^0,c
  6109   001B82  0E00               	movlw	0
  6110   001B84  6E1B               	movwf	(?___fladd+1)^0,c
  6111   001B86  0E00               	movlw	0
  6112   001B88  6E1C               	movwf	(?___fladd+2)^0,c
  6113   001B8A  0E00               	movlw	0
  6114   001B8C  6E1D               	movwf	(?___fladd+3)^0,c
  6115   001B8E  EF87  F00E         	goto	l733
  6116   001B92                     l3971:
  6117   001B92  90D8               	bcf	status,0,c
  6118   001B94  361A               	rlcf	___fladd@b^0,f,c
  6119   001B96  361B               	rlcf	(___fladd@b+1)^0,f,c
  6120   001B98  361C               	rlcf	(___fladd@b+2)^0,f,c
  6121   001B9A  361D               	rlcf	(___fladd@b+3)^0,f,c
  6122   001B9C  AE29               	btfss	___fladd@grs^0,7,c
  6123   001B9E  EFD3  F00D         	goto	u4181
  6124   001BA2  EFD5  F00D         	goto	u4180
  6125   001BA6                     u4181:
  6126   001BA6  EFD6  F00D         	goto	l3977
  6127   001BAA                     u4180:
  6128   001BAA  801A               	bsf	___fladd@b^0,0,c
  6129   001BAC                     l3977:
  6130   001BAC  A029               	btfss	___fladd@grs^0,0,c
  6131   001BAE  EFDB  F00D         	goto	u4191
  6132   001BB2  EFDD  F00D         	goto	u4190
  6133   001BB6                     u4191:
  6134   001BB6  EFE1  F00D         	goto	l3981
  6135   001BBA                     u4190:
  6136   001BBA  80D8               	bsf	status,0,c
  6137   001BBC  3629               	rlcf	___fladd@grs^0,f,c
  6138   001BBE  EFE3  F00D         	goto	l3983
  6139   001BC2                     l3981:
  6140   001BC2  90D8               	bcf	status,0,c
  6141   001BC4  3629               	rlcf	___fladd@grs^0,f,c
  6142   001BC6                     l3983:
  6143   001BC6  5028               	movf	___fladd@bexp^0,w,c
  6144   001BC8  B4D8               	btfsc	status,2,c
  6145   001BCA  EFE9  F00D         	goto	u4201
  6146   001BCE  EFEB  F00D         	goto	u4200
  6147   001BD2                     u4201:
  6148   001BD2  EFEC  F00D         	goto	l3987
  6149   001BD6                     u4200:
  6150   001BD6  0628               	decf	___fladd@bexp^0,f,c
  6151   001BD8                     l3987:
  6152   001BD8  AE1C               	btfss	(___fladd@b+2)^0,7,c
  6153   001BDA  EFF1  F00D         	goto	u4211
  6154   001BDE  EFF3  F00D         	goto	u4210
  6155   001BE2                     u4211:
  6156   001BE2  EFC9  F00D         	goto	l3971
  6157   001BE6                     u4210:
  6158   001BE6                     l3989:
  6159   001BE6  0E00               	movlw	0
  6160   001BE8  6E27               	movwf	___fladd@aexp^0,c
  6161   001BEA  AE29               	btfss	___fladd@grs^0,7,c
  6162   001BEC  EFFA  F00D         	goto	u4221
  6163   001BF0  EFFC  F00D         	goto	u4220
  6164   001BF4                     u4221:
  6165   001BF4  EF14  F00E         	goto	l750
  6166   001BF8                     u4220:
  6167   001BF8  C029  F022         	movff	___fladd@grs,??___fladd
  6168   001BFC  0E7F               	movlw	127
  6169   001BFE  1622               	andwf	??___fladd^0,f,c
  6170   001C00  B4D8               	btfsc	status,2,c
  6171   001C02  EF05  F00E         	goto	u4231
  6172   001C06  EF07  F00E         	goto	u4230
  6173   001C0A                     u4231:
  6174   001C0A  EF0B  F00E         	goto	l751
  6175   001C0E                     u4230:
  6176   001C0E                     l3995:
  6177   001C0E  0E01               	movlw	1
  6178   001C10  6E27               	movwf	___fladd@aexp^0,c
  6179   001C12  EF14  F00E         	goto	l750
  6180   001C16                     l751:
  6181   001C16  A01A               	btfss	___fladd@b^0,0,c
  6182   001C18  EF10  F00E         	goto	u4241
  6183   001C1C  EF12  F00E         	goto	u4240
  6184   001C20                     u4241:
  6185   001C20  EF14  F00E         	goto	l750
  6186   001C24                     u4240:
  6187   001C24  EF07  F00E         	goto	l3995
  6188   001C28                     l750:
  6189   001C28  5027               	movf	___fladd@aexp^0,w,c
  6190   001C2A  B4D8               	btfsc	status,2,c
  6191   001C2C  EF1A  F00E         	goto	u4251
  6192   001C30  EF1C  F00E         	goto	u4250
  6193   001C34                     u4251:
  6194   001C34  EF47  F00E         	goto	l4007
  6195   001C38                     u4250:
  6196   001C38  0E01               	movlw	1
  6197   001C3A  261A               	addwf	___fladd@b^0,f,c
  6198   001C3C  0E00               	movlw	0
  6199   001C3E  221B               	addwfc	(___fladd@b+1)^0,f,c
  6200   001C40  221C               	addwfc	(___fladd@b+2)^0,f,c
  6201   001C42  221D               	addwfc	(___fladd@b+3)^0,f,c
  6202   001C44  A01D               	btfss	(___fladd@b+3)^0,0,c
  6203   001C46  EF27  F00E         	goto	u4261
  6204   001C4A  EF29  F00E         	goto	u4260
  6205   001C4E                     u4261:
  6206   001C4E  EF47  F00E         	goto	l4007
  6207   001C52                     u4260:
  6208   001C52  C01A  F022         	movff	___fladd@b,??___fladd
  6209   001C56  C01B  F023         	movff	___fladd@b+1,??___fladd+1
  6210   001C5A  C01C  F024         	movff	___fladd@b+2,??___fladd+2
  6211   001C5E  C01D  F025         	movff	___fladd@b+3,??___fladd+3
  6212   001C62  3425               	rlcf	(??___fladd+3)^0,w,c
  6213   001C64  3225               	rrcf	(??___fladd+3)^0,f,c
  6214   001C66  3224               	rrcf	(??___fladd+2)^0,f,c
  6215   001C68  3223               	rrcf	(??___fladd+1)^0,f,c
  6216   001C6A  3222               	rrcf	??___fladd^0,f,c
  6217   001C6C  C022  F01A         	movff	??___fladd,___fladd@b
  6218   001C70  C023  F01B         	movff	??___fladd+1,___fladd@b+1
  6219   001C74  C024  F01C         	movff	??___fladd+2,___fladd@b+2
  6220   001C78  C025  F01D         	movff	??___fladd+3,___fladd@b+3
  6221   001C7C  2828               	incf	___fladd@bexp^0,w,c
  6222   001C7E  B4D8               	btfsc	status,2,c
  6223   001C80  EF44  F00E         	goto	u4271
  6224   001C84  EF46  F00E         	goto	u4270
  6225   001C88                     u4271:
  6226   001C88  EF47  F00E         	goto	l4007
  6227   001C8C                     u4270:
  6228   001C8C  2A28               	incf	___fladd@bexp^0,f,c
  6229   001C8E                     l4007:
  6230   001C8E  2828               	incf	___fladd@bexp^0,w,c
  6231   001C90  B4D8               	btfsc	status,2,c
  6232   001C92  EF4D  F00E         	goto	u4281
  6233   001C96  EF4F  F00E         	goto	u4280
  6234   001C9A                     u4281:
  6235   001C9A  EF57  F00E         	goto	l4011
  6236   001C9E                     u4280:
  6237   001C9E  5028               	movf	___fladd@bexp^0,w,c
  6238   001CA0  A4D8               	btfss	status,2,c
  6239   001CA2  EF55  F00E         	goto	u4291
  6240   001CA6  EF57  F00E         	goto	u4290
  6241   001CAA                     u4291:
  6242   001CAA  EF69  F00E         	goto	l4015
  6243   001CAE                     u4290:
  6244   001CAE                     l4011:
  6245   001CAE  0E00               	movlw	0
  6246   001CB0  6E1A               	movwf	___fladd@b^0,c
  6247   001CB2  0E00               	movlw	0
  6248   001CB4  6E1B               	movwf	(___fladd@b+1)^0,c
  6249   001CB6  0E00               	movlw	0
  6250   001CB8  6E1C               	movwf	(___fladd@b+2)^0,c
  6251   001CBA  0E00               	movlw	0
  6252   001CBC  6E1D               	movwf	(___fladd@b+3)^0,c
  6253   001CBE  5028               	movf	___fladd@bexp^0,w,c
  6254   001CC0  A4D8               	btfss	status,2,c
  6255   001CC2  EF65  F00E         	goto	u4301
  6256   001CC6  EF67  F00E         	goto	u4300
  6257   001CCA                     u4301:
  6258   001CCA  EF69  F00E         	goto	l4015
  6259   001CCE                     u4300:
  6260   001CCE  0E00               	movlw	0
  6261   001CD0  6E26               	movwf	___fladd@signs^0,c
  6262   001CD2                     l4015:
  6263   001CD2  A028               	btfss	___fladd@bexp^0,0,c
  6264   001CD4  EF6E  F00E         	goto	u4311
  6265   001CD8  EF70  F00E         	goto	u4310
  6266   001CDC                     u4311:
  6267   001CDC  EF73  F00E         	goto	l4019
  6268   001CE0                     u4310:
  6269   001CE0  8E1C               	bsf	(___fladd@b+2)^0,7,c
  6270   001CE2  EF74  F00E         	goto	l4021
  6271   001CE6                     l4019:
  6272   001CE6  9E1C               	bcf	(___fladd@b+2)^0,7,c
  6273   001CE8                     l4021:
  6274   001CE8  90D8               	bcf	status,0,c
  6275   001CEA  3028               	rrcf	___fladd@bexp^0,w,c
  6276   001CEC  6E1D               	movwf	(___fladd@b+3)^0,c
  6277   001CEE  AE26               	btfss	___fladd@signs^0,7,c
  6278   001CF0  EF7C  F00E         	goto	u4321
  6279   001CF4  EF7E  F00E         	goto	u4320
  6280   001CF8                     u4321:
  6281   001CF8  EF7F  F00E         	goto	l4027
  6282   001CFC                     u4320:
  6283   001CFC  8E1D               	bsf	(___fladd@b+3)^0,7,c
  6284   001CFE                     l4027:
  6285   001CFE  C01A  F01A         	movff	___fladd@b,?___fladd
  6286   001D02  C01B  F01B         	movff	___fladd@b+1,?___fladd+1
  6287   001D06  C01C  F01C         	movff	___fladd@b+2,?___fladd+2
  6288   001D0A  C01D  F01D         	movff	___fladd@b+3,?___fladd+3
  6289   001D0E                     l733:
  6290   001D0E  0012               	return		;funcret
  6291   001D10                     __end_of___fladd:
  6292                           	callstack 0
  6293                           
  6294 ;; *************** function ___flneg *****************
  6295 ;; Defined at:
  6296 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\flneg.c"
  6297 ;; Parameters:    Size  Location     Type
  6298 ;;  f1              4    0[COMRAM] unsigned char 
  6299 ;; Auto vars:     Size  Location     Type
  6300 ;;		None
  6301 ;; Return value:  Size  Location     Type
  6302 ;;                  4    0[COMRAM] unsigned char 
  6303 ;; Registers used:
  6304 ;;		wreg, status,2, status,0
  6305 ;; Tracked objects:
  6306 ;;		On entry : 0/0
  6307 ;;		On exit  : 0/0
  6308 ;;		Unchanged: 0/0
  6309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6310 ;;      Params:         4       0       0       0       0       0       0       0       0
  6311 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6312 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6313 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6314 ;;Total ram usage:        4 bytes
  6315 ;; Hardware stack levels used: 1
  6316 ;; This function calls:
  6317 ;;		Nothing
  6318 ;; This function is called by:
  6319 ;;		_efgtoa
  6320 ;; This function uses a non-reentrant model
  6321 ;;
  6322                           
  6323                           	psect	text24
  6324   003744                     __ptext24:
  6325                           	callstack 0
  6326   003744                     ___flneg:
  6327                           	callstack 25
  6328   003744  5001               	movf	___flneg@f1^0,w,c
  6329   003746  1002               	iorwf	(___flneg@f1+1)^0,w,c
  6330   003748  1003               	iorwf	(___flneg@f1+2)^0,w,c
  6331   00374A  1004               	iorwf	(___flneg@f1+3)^0,w,c
  6332   00374C  B4D8               	btfsc	status,2,c
  6333   00374E  EFAB  F01B         	goto	u4841
  6334   003752  EFAD  F01B         	goto	u4840
  6335   003756                     u4841:
  6336   003756  EFB5  F01B         	goto	l4361
  6337   00375A                     u4840:
  6338   00375A  0E00               	movlw	0
  6339   00375C  1A01               	xorwf	___flneg@f1^0,f,c
  6340   00375E  0E00               	movlw	0
  6341   003760  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  6342   003762  0E00               	movlw	0
  6343   003764  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  6344   003766  0E80               	movlw	128
  6345   003768  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  6346   00376A                     l4361:
  6347   00376A  C001  F001         	movff	___flneg@f1,?___flneg
  6348   00376E  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  6349   003772  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  6350   003776  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  6351   00377A  0012               	return		;funcret
  6352   00377C                     __end_of___flneg:
  6353                           	callstack 0
  6354                           
  6355 ;; *************** function ___flmul *****************
  6356 ;; Defined at:
  6357 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\sprcmul.c"
  6358 ;; Parameters:    Size  Location     Type
  6359 ;;  b               4    0[COMRAM] unsigned char 
  6360 ;;  a               4    4[COMRAM] unsigned char 
  6361 ;; Auto vars:     Size  Location     Type
  6362 ;;  prod            4   19[COMRAM] struct .
  6363 ;;  grs             4   14[COMRAM] unsigned long 
  6364 ;;  temp            2   23[COMRAM] struct .
  6365 ;;  bexp            1   18[COMRAM] unsigned char 
  6366 ;;  aexp            1   13[COMRAM] unsigned char 
  6367 ;;  sign            1   12[COMRAM] unsigned char 
  6368 ;; Return value:  Size  Location     Type
  6369 ;;                  4    0[COMRAM] unsigned char 
  6370 ;; Registers used:
  6371 ;;		wreg, status,2, status,0, prodl, prodh
  6372 ;; Tracked objects:
  6373 ;;		On entry : 0/0
  6374 ;;		On exit  : 0/0
  6375 ;;		Unchanged: 0/0
  6376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6377 ;;      Params:         8       0       0       0       0       0       0       0       0
  6378 ;;      Locals:        13       0       0       0       0       0       0       0       0
  6379 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6380 ;;      Totals:        25       0       0       0       0       0       0       0       0
  6381 ;;Total ram usage:       25 bytes
  6382 ;; Hardware stack levels used: 1
  6383 ;; This function calls:
  6384 ;;		Nothing
  6385 ;; This function is called by:
  6386 ;;		_termistorin
  6387 ;;		_logf
  6388 ;;		_efgtoa
  6389 ;;		_termistorout
  6390 ;; This function uses a non-reentrant model
  6391 ;;
  6392                           
  6393                           	psect	text25
  6394   001D10                     __ptext25:
  6395                           	callstack 0
  6396   001D10                     ___flmul:
  6397                           	callstack 27
  6398   001D10  5004               	movf	(___flmul@b+3)^0,w,c
  6399   001D12  0B80               	andlw	128
  6400   001D14  6E0D               	movwf	___flmul@sign^0,c
  6401   001D16  5004               	movf	(___flmul@b+3)^0,w,c
  6402   001D18  2404               	addwf	(___flmul@b+3)^0,w,c
  6403   001D1A  6E13               	movwf	___flmul@bexp^0,c
  6404   001D1C  AE03               	btfss	(___flmul@b+2)^0,7,c
  6405   001D1E  EF93  F00E         	goto	u4571
  6406   001D22  EF95  F00E         	goto	u4570
  6407   001D26                     u4571:
  6408   001D26  EF96  F00E         	goto	l4189
  6409   001D2A                     u4570:
  6410   001D2A  8013               	bsf	___flmul@bexp^0,0,c
  6411   001D2C                     l4189:
  6412   001D2C  5013               	movf	___flmul@bexp^0,w,c
  6413   001D2E  B4D8               	btfsc	status,2,c
  6414   001D30  EF9C  F00E         	goto	u4581
  6415   001D34  EF9E  F00E         	goto	u4580
  6416   001D38                     u4581:
  6417   001D38  EFB1  F00E         	goto	l4197
  6418   001D3C                     u4580:
  6419   001D3C  2813               	incf	___flmul@bexp^0,w,c
  6420   001D3E  A4D8               	btfss	status,2,c
  6421   001D40  EFA4  F00E         	goto	u4591
  6422   001D44  EFA6  F00E         	goto	u4590
  6423   001D48                     u4591:
  6424   001D48  EFAE  F00E         	goto	l4195
  6425   001D4C                     u4590:
  6426   001D4C  0E00               	movlw	0
  6427   001D4E  6E01               	movwf	___flmul@b^0,c
  6428   001D50  0E00               	movlw	0
  6429   001D52  6E02               	movwf	(___flmul@b+1)^0,c
  6430   001D54  0E00               	movlw	0
  6431   001D56  6E03               	movwf	(___flmul@b+2)^0,c
  6432   001D58  0E00               	movlw	0
  6433   001D5A  6E04               	movwf	(___flmul@b+3)^0,c
  6434   001D5C                     l4195:
  6435   001D5C  8E03               	bsf	(___flmul@b+2)^0,7,c
  6436   001D5E  EFB9  F00E         	goto	l4199
  6437   001D62                     l4197:
  6438   001D62  0E00               	movlw	0
  6439   001D64  6E01               	movwf	___flmul@b^0,c
  6440   001D66  0E00               	movlw	0
  6441   001D68  6E02               	movwf	(___flmul@b+1)^0,c
  6442   001D6A  0E00               	movlw	0
  6443   001D6C  6E03               	movwf	(___flmul@b+2)^0,c
  6444   001D6E  0E00               	movlw	0
  6445   001D70  6E04               	movwf	(___flmul@b+3)^0,c
  6446   001D72                     l4199:
  6447   001D72  5008               	movf	(___flmul@a+3)^0,w,c
  6448   001D74  0B80               	andlw	128
  6449   001D76  1A0D               	xorwf	___flmul@sign^0,f,c
  6450   001D78  5008               	movf	(___flmul@a+3)^0,w,c
  6451   001D7A  2408               	addwf	(___flmul@a+3)^0,w,c
  6452   001D7C  6E0E               	movwf	___flmul@aexp^0,c
  6453   001D7E  AE07               	btfss	(___flmul@a+2)^0,7,c
  6454   001D80  EFC4  F00E         	goto	u4601
  6455   001D84  EFC6  F00E         	goto	u4600
  6456   001D88                     u4601:
  6457   001D88  EFC7  F00E         	goto	l4207
  6458   001D8C                     u4600:
  6459   001D8C  800E               	bsf	___flmul@aexp^0,0,c
  6460   001D8E                     l4207:
  6461   001D8E  500E               	movf	___flmul@aexp^0,w,c
  6462   001D90  B4D8               	btfsc	status,2,c
  6463   001D92  EFCD  F00E         	goto	u4611
  6464   001D96  EFCF  F00E         	goto	u4610
  6465   001D9A                     u4611:
  6466   001D9A  EFE2  F00E         	goto	l4215
  6467   001D9E                     u4610:
  6468   001D9E  280E               	incf	___flmul@aexp^0,w,c
  6469   001DA0  A4D8               	btfss	status,2,c
  6470   001DA2  EFD5  F00E         	goto	u4621
  6471   001DA6  EFD7  F00E         	goto	u4620
  6472   001DAA                     u4621:
  6473   001DAA  EFDF  F00E         	goto	l4213
  6474   001DAE                     u4620:
  6475   001DAE  0E00               	movlw	0
  6476   001DB0  6E05               	movwf	___flmul@a^0,c
  6477   001DB2  0E00               	movlw	0
  6478   001DB4  6E06               	movwf	(___flmul@a+1)^0,c
  6479   001DB6  0E00               	movlw	0
  6480   001DB8  6E07               	movwf	(___flmul@a+2)^0,c
  6481   001DBA  0E00               	movlw	0
  6482   001DBC  6E08               	movwf	(___flmul@a+3)^0,c
  6483   001DBE                     l4213:
  6484   001DBE  8E07               	bsf	(___flmul@a+2)^0,7,c
  6485   001DC0  EFEA  F00E         	goto	l810
  6486   001DC4                     l4215:
  6487   001DC4  0E00               	movlw	0
  6488   001DC6  6E05               	movwf	___flmul@a^0,c
  6489   001DC8  0E00               	movlw	0
  6490   001DCA  6E06               	movwf	(___flmul@a+1)^0,c
  6491   001DCC  0E00               	movlw	0
  6492   001DCE  6E07               	movwf	(___flmul@a+2)^0,c
  6493   001DD0  0E00               	movlw	0
  6494   001DD2  6E08               	movwf	(___flmul@a+3)^0,c
  6495   001DD4                     l810:
  6496   001DD4  500E               	movf	___flmul@aexp^0,w,c
  6497   001DD6  B4D8               	btfsc	status,2,c
  6498   001DD8  EFF0  F00E         	goto	u4631
  6499   001DDC  EFF2  F00E         	goto	u4630
  6500   001DE0                     u4631:
  6501   001DE0  EFFA  F00E         	goto	l4219
  6502   001DE4                     u4630:
  6503   001DE4  5013               	movf	___flmul@bexp^0,w,c
  6504   001DE6  A4D8               	btfss	status,2,c
  6505   001DE8  EFF8  F00E         	goto	u4641
  6506   001DEC  EFFA  F00E         	goto	u4640
  6507   001DF0                     u4641:
  6508   001DF0  EF04  F00F         	goto	l4223
  6509   001DF4                     u4640:
  6510   001DF4                     l4219:
  6511   001DF4  0E00               	movlw	0
  6512   001DF6  6E01               	movwf	?___flmul^0,c
  6513   001DF8  0E00               	movlw	0
  6514   001DFA  6E02               	movwf	(?___flmul+1)^0,c
  6515   001DFC  0E00               	movlw	0
  6516   001DFE  6E03               	movwf	(?___flmul+2)^0,c
  6517   001E00  0E00               	movlw	0
  6518   001E02  6E04               	movwf	(?___flmul+3)^0,c
  6519   001E04  EF9C  F010         	goto	l814
  6520   001E08                     l4223:
  6521   001E08  5007               	movf	(___flmul@a+2)^0,w,c
  6522   001E0A  0201               	mulwf	___flmul@b^0,c
  6523   001E0C  CFF3 F018          	movff	prodl,___flmul@temp
  6524   001E10  CFF4 F019          	movff	prodh,___flmul@temp+1
  6525   001E14  5018               	movf	___flmul@temp^0,w,c
  6526   001E16  6E0F               	movwf	___flmul@grs^0,c
  6527   001E18  6A10               	clrf	(___flmul@grs+1)^0,c
  6528   001E1A  6A11               	clrf	(___flmul@grs+2)^0,c
  6529   001E1C  6A12               	clrf	(___flmul@grs+3)^0,c
  6530   001E1E  5019               	movf	(___flmul@temp+1)^0,w,c
  6531   001E20  6E14               	movwf	___flmul@prod^0,c
  6532   001E22  6A15               	clrf	(___flmul@prod+1)^0,c
  6533   001E24  6A16               	clrf	(___flmul@prod+2)^0,c
  6534   001E26  6A17               	clrf	(___flmul@prod+3)^0,c
  6535   001E28  5006               	movf	(___flmul@a+1)^0,w,c
  6536   001E2A  0202               	mulwf	(___flmul@b+1)^0,c
  6537   001E2C  CFF3 F018          	movff	prodl,___flmul@temp
  6538   001E30  CFF4 F019          	movff	prodh,___flmul@temp+1
  6539   001E34  5018               	movf	___flmul@temp^0,w,c
  6540   001E36  260F               	addwf	___flmul@grs^0,f,c
  6541   001E38  0E00               	movlw	0
  6542   001E3A  2210               	addwfc	(___flmul@grs+1)^0,f,c
  6543   001E3C  2211               	addwfc	(___flmul@grs+2)^0,f,c
  6544   001E3E  2212               	addwfc	(___flmul@grs+3)^0,f,c
  6545   001E40  5019               	movf	(___flmul@temp+1)^0,w,c
  6546   001E42  2614               	addwf	___flmul@prod^0,f,c
  6547   001E44  0E00               	movlw	0
  6548   001E46  2215               	addwfc	(___flmul@prod+1)^0,f,c
  6549   001E48  2216               	addwfc	(___flmul@prod+2)^0,f,c
  6550   001E4A  2217               	addwfc	(___flmul@prod+3)^0,f,c
  6551   001E4C  5005               	movf	___flmul@a^0,w,c
  6552   001E4E  0203               	mulwf	(___flmul@b+2)^0,c
  6553   001E50  CFF3 F018          	movff	prodl,___flmul@temp
  6554   001E54  CFF4 F019          	movff	prodh,___flmul@temp+1
  6555   001E58  5018               	movf	___flmul@temp^0,w,c
  6556   001E5A  260F               	addwf	___flmul@grs^0,f,c
  6557   001E5C  0E00               	movlw	0
  6558   001E5E  2210               	addwfc	(___flmul@grs+1)^0,f,c
  6559   001E60  2211               	addwfc	(___flmul@grs+2)^0,f,c
  6560   001E62  2212               	addwfc	(___flmul@grs+3)^0,f,c
  6561   001E64  5019               	movf	(___flmul@temp+1)^0,w,c
  6562   001E66  2614               	addwf	___flmul@prod^0,f,c
  6563   001E68  0E00               	movlw	0
  6564   001E6A  2215               	addwfc	(___flmul@prod+1)^0,f,c
  6565   001E6C  2216               	addwfc	(___flmul@prod+2)^0,f,c
  6566   001E6E  2217               	addwfc	(___flmul@prod+3)^0,f,c
  6567   001E70  C011  F012         	movff	___flmul@grs+2,___flmul@grs+3
  6568   001E74  C010  F011         	movff	___flmul@grs+1,___flmul@grs+2
  6569   001E78  C00F  F010         	movff	___flmul@grs,___flmul@grs+1
  6570   001E7C  6A0F               	clrf	___flmul@grs^0,c
  6571   001E7E  5005               	movf	___flmul@a^0,w,c
  6572   001E80  0202               	mulwf	(___flmul@b+1)^0,c
  6573   001E82  CFF3 F018          	movff	prodl,___flmul@temp
  6574   001E86  CFF4 F019          	movff	prodh,___flmul@temp+1
  6575   001E8A  5018               	movf	___flmul@temp^0,w,c
  6576   001E8C  260F               	addwf	___flmul@grs^0,f,c
  6577   001E8E  5019               	movf	(___flmul@temp+1)^0,w,c
  6578   001E90  2210               	addwfc	(___flmul@grs+1)^0,f,c
  6579   001E92  0E00               	movlw	0
  6580   001E94  2211               	addwfc	(___flmul@grs+2)^0,f,c
  6581   001E96  0E00               	movlw	0
  6582   001E98  2212               	addwfc	(___flmul@grs+3)^0,f,c
  6583   001E9A  5006               	movf	(___flmul@a+1)^0,w,c
  6584   001E9C  0201               	mulwf	___flmul@b^0,c
  6585   001E9E  CFF3 F018          	movff	prodl,___flmul@temp
  6586   001EA2  CFF4 F019          	movff	prodh,___flmul@temp+1
  6587   001EA6  5018               	movf	___flmul@temp^0,w,c
  6588   001EA8  260F               	addwf	___flmul@grs^0,f,c
  6589   001EAA  5019               	movf	(___flmul@temp+1)^0,w,c
  6590   001EAC  2210               	addwfc	(___flmul@grs+1)^0,f,c
  6591   001EAE  0E00               	movlw	0
  6592   001EB0  2211               	addwfc	(___flmul@grs+2)^0,f,c
  6593   001EB2  0E00               	movlw	0
  6594   001EB4  2212               	addwfc	(___flmul@grs+3)^0,f,c
  6595   001EB6  C011  F012         	movff	___flmul@grs+2,___flmul@grs+3
  6596   001EBA  C010  F011         	movff	___flmul@grs+1,___flmul@grs+2
  6597   001EBE  C00F  F010         	movff	___flmul@grs,___flmul@grs+1
  6598   001EC2  6A0F               	clrf	___flmul@grs^0,c
  6599   001EC4  5005               	movf	___flmul@a^0,w,c
  6600   001EC6  0201               	mulwf	___flmul@b^0,c
  6601   001EC8  CFF3 F018          	movff	prodl,___flmul@temp
  6602   001ECC  CFF4 F019          	movff	prodh,___flmul@temp+1
  6603   001ED0  5018               	movf	___flmul@temp^0,w,c
  6604   001ED2  260F               	addwf	___flmul@grs^0,f,c
  6605   001ED4  5019               	movf	(___flmul@temp+1)^0,w,c
  6606   001ED6  2210               	addwfc	(___flmul@grs+1)^0,f,c
  6607   001ED8  0E00               	movlw	0
  6608   001EDA  2211               	addwfc	(___flmul@grs+2)^0,f,c
  6609   001EDC  0E00               	movlw	0
  6610   001EDE  2212               	addwfc	(___flmul@grs+3)^0,f,c
  6611   001EE0  5007               	movf	(___flmul@a+2)^0,w,c
  6612   001EE2  0202               	mulwf	(___flmul@b+1)^0,c
  6613   001EE4  CFF3 F018          	movff	prodl,___flmul@temp
  6614   001EE8  CFF4 F019          	movff	prodh,___flmul@temp+1
  6615   001EEC  5018               	movf	___flmul@temp^0,w,c
  6616   001EEE  2614               	addwf	___flmul@prod^0,f,c
  6617   001EF0  5019               	movf	(___flmul@temp+1)^0,w,c
  6618   001EF2  2215               	addwfc	(___flmul@prod+1)^0,f,c
  6619   001EF4  0E00               	movlw	0
  6620   001EF6  2216               	addwfc	(___flmul@prod+2)^0,f,c
  6621   001EF8  0E00               	movlw	0
  6622   001EFA  2217               	addwfc	(___flmul@prod+3)^0,f,c
  6623   001EFC  5006               	movf	(___flmul@a+1)^0,w,c
  6624   001EFE  0203               	mulwf	(___flmul@b+2)^0,c
  6625   001F00  CFF3 F018          	movff	prodl,___flmul@temp
  6626   001F04  CFF4 F019          	movff	prodh,___flmul@temp+1
  6627   001F08  5018               	movf	___flmul@temp^0,w,c
  6628   001F0A  2614               	addwf	___flmul@prod^0,f,c
  6629   001F0C  5019               	movf	(___flmul@temp+1)^0,w,c
  6630   001F0E  2215               	addwfc	(___flmul@prod+1)^0,f,c
  6631   001F10  0E00               	movlw	0
  6632   001F12  2216               	addwfc	(___flmul@prod+2)^0,f,c
  6633   001F14  0E00               	movlw	0
  6634   001F16  2217               	addwfc	(___flmul@prod+3)^0,f,c
  6635   001F18  5007               	movf	(___flmul@a+2)^0,w,c
  6636   001F1A  0203               	mulwf	(___flmul@b+2)^0,c
  6637   001F1C  CFF3 F018          	movff	prodl,___flmul@temp
  6638   001F20  CFF4 F019          	movff	prodh,___flmul@temp+1
  6639   001F24  5018               	movf	___flmul@temp^0,w,c
  6640   001F26  6E09               	movwf	??___flmul^0,c
  6641   001F28  5019               	movf	(___flmul@temp+1)^0,w,c
  6642   001F2A  6E0A               	movwf	(??___flmul+1)^0,c
  6643   001F2C  6A0B               	clrf	(??___flmul+2)^0,c
  6644   001F2E  6A0C               	clrf	(??___flmul+3)^0,c
  6645   001F30  C00B  F00C         	movff	??___flmul+2,??___flmul+3
  6646   001F34  C00A  F00B         	movff	??___flmul+1,??___flmul+2
  6647   001F38  C009  F00A         	movff	??___flmul,??___flmul+1
  6648   001F3C  6A09               	clrf	??___flmul^0,c
  6649   001F3E  5009               	movf	??___flmul^0,w,c
  6650   001F40  2614               	addwf	___flmul@prod^0,f,c
  6651   001F42  500A               	movf	(??___flmul+1)^0,w,c
  6652   001F44  2215               	addwfc	(___flmul@prod+1)^0,f,c
  6653   001F46  500B               	movf	(??___flmul+2)^0,w,c
  6654   001F48  2216               	addwfc	(___flmul@prod+2)^0,f,c
  6655   001F4A  500C               	movf	(??___flmul+3)^0,w,c
  6656   001F4C  2217               	addwfc	(___flmul@prod+3)^0,f,c
  6657   001F4E  C00F  F009         	movff	___flmul@grs,??___flmul
  6658   001F52  C010  F00A         	movff	___flmul@grs+1,??___flmul+1
  6659   001F56  C011  F00B         	movff	___flmul@grs+2,??___flmul+2
  6660   001F5A  C012  F00C         	movff	___flmul@grs+3,??___flmul+3
  6661   001F5E  0E19               	movlw	25
  6662   001F60  EFB7  F00F         	goto	u4650
  6663   001F64                     u4655:
  6664   001F64  90D8               	bcf	status,0,c
  6665   001F66  320C               	rrcf	(??___flmul+3)^0,f,c
  6666   001F68  320B               	rrcf	(??___flmul+2)^0,f,c
  6667   001F6A  320A               	rrcf	(??___flmul+1)^0,f,c
  6668   001F6C  3209               	rrcf	??___flmul^0,f,c
  6669   001F6E                     u4650:
  6670   001F6E  2EE8               	decfsz	wreg,f,c
  6671   001F70  EFB2  F00F         	goto	u4655
  6672   001F74  5009               	movf	??___flmul^0,w,c
  6673   001F76  2614               	addwf	___flmul@prod^0,f,c
  6674   001F78  500A               	movf	(??___flmul+1)^0,w,c
  6675   001F7A  2215               	addwfc	(___flmul@prod+1)^0,f,c
  6676   001F7C  500B               	movf	(??___flmul+2)^0,w,c
  6677   001F7E  2216               	addwfc	(___flmul@prod+2)^0,f,c
  6678   001F80  500C               	movf	(??___flmul+3)^0,w,c
  6679   001F82  2217               	addwfc	(___flmul@prod+3)^0,f,c
  6680   001F84  C011  F012         	movff	___flmul@grs+2,___flmul@grs+3
  6681   001F88  C010  F011         	movff	___flmul@grs+1,___flmul@grs+2
  6682   001F8C  C00F  F010         	movff	___flmul@grs,___flmul@grs+1
  6683   001F90  6A0F               	clrf	___flmul@grs^0,c
  6684   001F92  500E               	movf	___flmul@aexp^0,w,c
  6685   001F94  C013  F009         	movff	___flmul@bexp,??___flmul
  6686   001F98  6A0A               	clrf	(??___flmul+1)^0,c
  6687   001F9A  2609               	addwf	??___flmul^0,f,c
  6688   001F9C  0E00               	movlw	0
  6689   001F9E  220A               	addwfc	(??___flmul+1)^0,f,c
  6690   001FA0  0E82               	movlw	130
  6691   001FA2  2409               	addwf	??___flmul^0,w,c
  6692   001FA4  6E18               	movwf	___flmul@temp^0,c
  6693   001FA6  0EFF               	movlw	255
  6694   001FA8  200A               	addwfc	(??___flmul+1)^0,w,c
  6695   001FAA  6E19               	movwf	(___flmul@temp+1)^0,c
  6696   001FAC  EFED  F00F         	goto	l4271
  6697   001FB0                     l4265:
  6698   001FB0  90D8               	bcf	status,0,c
  6699   001FB2  3614               	rlcf	___flmul@prod^0,f,c
  6700   001FB4  3615               	rlcf	(___flmul@prod+1)^0,f,c
  6701   001FB6  3616               	rlcf	(___flmul@prod+2)^0,f,c
  6702   001FB8  3617               	rlcf	(___flmul@prod+3)^0,f,c
  6703   001FBA  AE12               	btfss	(___flmul@grs+3)^0,7,c
  6704   001FBC  EFE2  F00F         	goto	u4661
  6705   001FC0  EFE4  F00F         	goto	u4660
  6706   001FC4                     u4661:
  6707   001FC4  EFE5  F00F         	goto	l817
  6708   001FC8                     u4660:
  6709   001FC8  8014               	bsf	___flmul@prod^0,0,c
  6710   001FCA                     l817:
  6711   001FCA  90D8               	bcf	status,0,c
  6712   001FCC  360F               	rlcf	___flmul@grs^0,f,c
  6713   001FCE  3610               	rlcf	(___flmul@grs+1)^0,f,c
  6714   001FD0  3611               	rlcf	(___flmul@grs+2)^0,f,c
  6715   001FD2  3612               	rlcf	(___flmul@grs+3)^0,f,c
  6716   001FD4  0618               	decf	___flmul@temp^0,f,c
  6717   001FD6  A0D8               	btfss	status,0,c
  6718   001FD8  0619               	decf	(___flmul@temp+1)^0,f,c
  6719   001FDA                     l4271:
  6720   001FDA  AE16               	btfss	(___flmul@prod+2)^0,7,c
  6721   001FDC  EFF2  F00F         	goto	u4671
  6722   001FE0  EFF4  F00F         	goto	u4670
  6723   001FE4                     u4671:
  6724   001FE4  EFD8  F00F         	goto	l4265
  6725   001FE8                     u4670:
  6726   001FE8  0E00               	movlw	0
  6727   001FEA  6E0E               	movwf	___flmul@aexp^0,c
  6728   001FEC  AE12               	btfss	(___flmul@grs+3)^0,7,c
  6729   001FEE  EFFB  F00F         	goto	u4681
  6730   001FF2  EFFD  F00F         	goto	u4680
  6731   001FF6                     u4681:
  6732   001FF6  EF21  F010         	goto	l819
  6733   001FFA                     u4680:
  6734   001FFA  0EFF               	movlw	255
  6735   001FFC  140F               	andwf	___flmul@grs^0,w,c
  6736   001FFE  6E09               	movwf	??___flmul^0,c
  6737   002000  0EFF               	movlw	255
  6738   002002  1410               	andwf	(___flmul@grs+1)^0,w,c
  6739   002004  6E0A               	movwf	(??___flmul+1)^0,c
  6740   002006  0EFF               	movlw	255
  6741   002008  1411               	andwf	(___flmul@grs+2)^0,w,c
  6742   00200A  6E0B               	movwf	(??___flmul+2)^0,c
  6743   00200C  0E7F               	movlw	127
  6744   00200E  1412               	andwf	(___flmul@grs+3)^0,w,c
  6745   002010  6E0C               	movwf	(??___flmul+3)^0,c
  6746   002012  5009               	movf	??___flmul^0,w,c
  6747   002014  100A               	iorwf	(??___flmul+1)^0,w,c
  6748   002016  100B               	iorwf	(??___flmul+2)^0,w,c
  6749   002018  100C               	iorwf	(??___flmul+3)^0,w,c
  6750   00201A  B4D8               	btfsc	status,2,c
  6751   00201C  EF12  F010         	goto	u4691
  6752   002020  EF14  F010         	goto	u4690
  6753   002024                     u4691:
  6754   002024  EF18  F010         	goto	l820
  6755   002028                     u4690:
  6756   002028                     l4279:
  6757   002028  0E01               	movlw	1
  6758   00202A  6E0E               	movwf	___flmul@aexp^0,c
  6759   00202C  EF21  F010         	goto	l819
  6760   002030                     l820:
  6761   002030  A014               	btfss	___flmul@prod^0,0,c
  6762   002032  EF1D  F010         	goto	u4701
  6763   002036  EF1F  F010         	goto	u4700
  6764   00203A                     u4701:
  6765   00203A  EF21  F010         	goto	l819
  6766   00203E                     u4700:
  6767   00203E  EF14  F010         	goto	l4279
  6768   002042                     l819:
  6769   002042  500E               	movf	___flmul@aexp^0,w,c
  6770   002044  B4D8               	btfsc	status,2,c
  6771   002046  EF27  F010         	goto	u4711
  6772   00204A  EF29  F010         	goto	u4710
  6773   00204E                     u4711:
  6774   00204E  EF4D  F010         	goto	l4291
  6775   002052                     u4710:
  6776   002052  0E01               	movlw	1
  6777   002054  2614               	addwf	___flmul@prod^0,f,c
  6778   002056  0E00               	movlw	0
  6779   002058  2215               	addwfc	(___flmul@prod+1)^0,f,c
  6780   00205A  2216               	addwfc	(___flmul@prod+2)^0,f,c
  6781   00205C  2217               	addwfc	(___flmul@prod+3)^0,f,c
  6782   00205E  A017               	btfss	(___flmul@prod+3)^0,0,c
  6783   002060  EF34  F010         	goto	u4721
  6784   002064  EF36  F010         	goto	u4720
  6785   002068                     u4721:
  6786   002068  EF4D  F010         	goto	l4291
  6787   00206C                     u4720:
  6788   00206C  C014  F009         	movff	___flmul@prod,??___flmul
  6789   002070  C015  F00A         	movff	___flmul@prod+1,??___flmul+1
  6790   002074  C016  F00B         	movff	___flmul@prod+2,??___flmul+2
  6791   002078  C017  F00C         	movff	___flmul@prod+3,??___flmul+3
  6792   00207C  340C               	rlcf	(??___flmul+3)^0,w,c
  6793   00207E  320C               	rrcf	(??___flmul+3)^0,f,c
  6794   002080  320B               	rrcf	(??___flmul+2)^0,f,c
  6795   002082  320A               	rrcf	(??___flmul+1)^0,f,c
  6796   002084  3209               	rrcf	??___flmul^0,f,c
  6797   002086  C009  F014         	movff	??___flmul,___flmul@prod
  6798   00208A  C00A  F015         	movff	??___flmul+1,___flmul@prod+1
  6799   00208E  C00B  F016         	movff	??___flmul+2,___flmul@prod+2
  6800   002092  C00C  F017         	movff	??___flmul+3,___flmul@prod+3
  6801   002096  4A18               	infsnz	___flmul@temp^0,f,c
  6802   002098  2A19               	incf	(___flmul@temp+1)^0,f,c
  6803   00209A                     l4291:
  6804   00209A  BE19               	btfsc	(___flmul@temp+1)^0,7,c
  6805   00209C  EF58  F010         	goto	u4731
  6806   0020A0  5019               	movf	(___flmul@temp+1)^0,w,c
  6807   0020A2  E108               	bnz	u4730
  6808   0020A4  2818               	incf	___flmul@temp^0,w,c
  6809   0020A6  A0D8               	btfss	status,0,c
  6810   0020A8  EF58  F010         	goto	u4731
  6811   0020AC  EF5A  F010         	goto	u4730
  6812   0020B0                     u4731:
  6813   0020B0  EF64  F010         	goto	l4295
  6814   0020B4                     u4730:
  6815   0020B4  0E00               	movlw	0
  6816   0020B6  6E14               	movwf	___flmul@prod^0,c
  6817   0020B8  0E00               	movlw	0
  6818   0020BA  6E15               	movwf	(___flmul@prod+1)^0,c
  6819   0020BC  0E80               	movlw	128
  6820   0020BE  6E16               	movwf	(___flmul@prod+2)^0,c
  6821   0020C0  0E7F               	movlw	127
  6822   0020C2  6E17               	movwf	(___flmul@prod+3)^0,c
  6823   0020C4  EF92  F010         	goto	l4307
  6824   0020C8                     l4295:
  6825   0020C8  BE19               	btfsc	(___flmul@temp+1)^0,7,c
  6826   0020CA  EF71  F010         	goto	u4740
  6827   0020CE  5019               	movf	(___flmul@temp+1)^0,w,c
  6828   0020D0  E106               	bnz	u4741
  6829   0020D2  0418               	decf	___flmul@temp^0,w,c
  6830   0020D4  B0D8               	btfsc	status,0,c
  6831   0020D6  EF6F  F010         	goto	u4741
  6832   0020DA  EF71  F010         	goto	u4740
  6833   0020DE                     u4741:
  6834   0020DE  EF7D  F010         	goto	l827
  6835   0020E2                     u4740:
  6836   0020E2  0E00               	movlw	0
  6837   0020E4  6E14               	movwf	___flmul@prod^0,c
  6838   0020E6  0E00               	movlw	0
  6839   0020E8  6E15               	movwf	(___flmul@prod+1)^0,c
  6840   0020EA  0E00               	movlw	0
  6841   0020EC  6E16               	movwf	(___flmul@prod+2)^0,c
  6842   0020EE  0E00               	movlw	0
  6843   0020F0  6E17               	movwf	(___flmul@prod+3)^0,c
  6844   0020F2  0E00               	movlw	0
  6845   0020F4  6E0D               	movwf	___flmul@sign^0,c
  6846   0020F6  EF92  F010         	goto	l4307
  6847   0020FA                     l827:
  6848   0020FA  C018  F013         	movff	___flmul@temp,___flmul@bexp
  6849   0020FE  0EFF               	movlw	255
  6850   002100  1614               	andwf	___flmul@prod^0,f,c
  6851   002102  0EFF               	movlw	255
  6852   002104  1615               	andwf	(___flmul@prod+1)^0,f,c
  6853   002106  0E7F               	movlw	127
  6854   002108  1616               	andwf	(___flmul@prod+2)^0,f,c
  6855   00210A  0E00               	movlw	0
  6856   00210C  1617               	andwf	(___flmul@prod+3)^0,f,c
  6857   00210E  A013               	btfss	___flmul@bexp^0,0,c
  6858   002110  EF8C  F010         	goto	u4751
  6859   002114  EF8E  F010         	goto	u4750
  6860   002118                     u4751:
  6861   002118  EF8F  F010         	goto	l4305
  6862   00211C                     u4750:
  6863   00211C  8E16               	bsf	(___flmul@prod+2)^0,7,c
  6864   00211E                     l4305:
  6865   00211E  90D8               	bcf	status,0,c
  6866   002120  3013               	rrcf	___flmul@bexp^0,w,c
  6867   002122  6E17               	movwf	(___flmul@prod+3)^0,c
  6868   002124                     l4307:
  6869   002124  500D               	movf	___flmul@sign^0,w,c
  6870   002126  1217               	iorwf	(___flmul@prod+3)^0,f,c
  6871   002128  C014  F001         	movff	___flmul@prod,?___flmul
  6872   00212C  C015  F002         	movff	___flmul@prod+1,?___flmul+1
  6873   002130  C016  F003         	movff	___flmul@prod+2,?___flmul+2
  6874   002134  C017  F004         	movff	___flmul@prod+3,?___flmul+3
  6875   002138                     l814:
  6876   002138  0012               	return		;funcret
  6877   00213A                     __end_of___flmul:
  6878                           	callstack 0
  6879                           
  6880 ;; *************** function ___flge *****************
  6881 ;; Defined at:
  6882 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\flge.c"
  6883 ;; Parameters:    Size  Location     Type
  6884 ;;  ff1             4   25[COMRAM] unsigned char 
  6885 ;;  ff2             4   29[COMRAM] unsigned char 
  6886 ;; Auto vars:     Size  Location     Type
  6887 ;;		None
  6888 ;; Return value:  Size  Location     Type
  6889 ;;		None               void
  6890 ;; Registers used:
  6891 ;;		wreg, status,2, status,0
  6892 ;; Tracked objects:
  6893 ;;		On entry : 0/0
  6894 ;;		On exit  : 0/0
  6895 ;;		Unchanged: 0/0
  6896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6897 ;;      Params:         8       0       0       0       0       0       0       0       0
  6898 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6899 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6900 ;;      Totals:        12       0       0       0       0       0       0       0       0
  6901 ;;Total ram usage:       12 bytes
  6902 ;; Hardware stack levels used: 1
  6903 ;; This function calls:
  6904 ;;		Nothing
  6905 ;; This function is called by:
  6906 ;;		_efgtoa
  6907 ;; This function uses a non-reentrant model
  6908 ;;
  6909                           
  6910                           	psect	text26
  6911   002E96                     __ptext26:
  6912                           	callstack 0
  6913   002E96                     ___flge:
  6914                           	callstack 25
  6915   002E96  0E00               	movlw	0
  6916   002E98  141A               	andwf	___flge@ff1^0,w,c
  6917   002E9A  6E22               	movwf	??___flge^0,c
  6918   002E9C  0E00               	movlw	0
  6919   002E9E  141B               	andwf	(___flge@ff1+1)^0,w,c
  6920   002EA0  6E23               	movwf	(??___flge+1)^0,c
  6921   002EA2  0E80               	movlw	128
  6922   002EA4  141C               	andwf	(___flge@ff1+2)^0,w,c
  6923   002EA6  6E24               	movwf	(??___flge+2)^0,c
  6924   002EA8  0E7F               	movlw	127
  6925   002EAA  141D               	andwf	(___flge@ff1+3)^0,w,c
  6926   002EAC  6E25               	movwf	(??___flge+3)^0,c
  6927   002EAE  5022               	movf	??___flge^0,w,c
  6928   002EB0  1023               	iorwf	(??___flge+1)^0,w,c
  6929   002EB2  1024               	iorwf	(??___flge+2)^0,w,c
  6930   002EB4  1025               	iorwf	(??___flge+3)^0,w,c
  6931   002EB6  A4D8               	btfss	status,2,c
  6932   002EB8  EF60  F017         	goto	u4791
  6933   002EBC  EF62  F017         	goto	u4790
  6934   002EC0                     u4791:
  6935   002EC0  EF6A  F017         	goto	l4339
  6936   002EC4                     u4790:
  6937   002EC4  0E00               	movlw	0
  6938   002EC6  6E1A               	movwf	___flge@ff1^0,c
  6939   002EC8  0E00               	movlw	0
  6940   002ECA  6E1B               	movwf	(___flge@ff1+1)^0,c
  6941   002ECC  0E00               	movlw	0
  6942   002ECE  6E1C               	movwf	(___flge@ff1+2)^0,c
  6943   002ED0  0E00               	movlw	0
  6944   002ED2  6E1D               	movwf	(___flge@ff1+3)^0,c
  6945   002ED4                     l4339:
  6946   002ED4  0E00               	movlw	0
  6947   002ED6  141E               	andwf	___flge@ff2^0,w,c
  6948   002ED8  6E22               	movwf	??___flge^0,c
  6949   002EDA  0E00               	movlw	0
  6950   002EDC  141F               	andwf	(___flge@ff2+1)^0,w,c
  6951   002EDE  6E23               	movwf	(??___flge+1)^0,c
  6952   002EE0  0E80               	movlw	128
  6953   002EE2  1420               	andwf	(___flge@ff2+2)^0,w,c
  6954   002EE4  6E24               	movwf	(??___flge+2)^0,c
  6955   002EE6  0E7F               	movlw	127
  6956   002EE8  1421               	andwf	(___flge@ff2+3)^0,w,c
  6957   002EEA  6E25               	movwf	(??___flge+3)^0,c
  6958   002EEC  5022               	movf	??___flge^0,w,c
  6959   002EEE  1023               	iorwf	(??___flge+1)^0,w,c
  6960   002EF0  1024               	iorwf	(??___flge+2)^0,w,c
  6961   002EF2  1025               	iorwf	(??___flge+3)^0,w,c
  6962   002EF4  A4D8               	btfss	status,2,c
  6963   002EF6  EF7F  F017         	goto	u4801
  6964   002EFA  EF81  F017         	goto	u4800
  6965   002EFE                     u4801:
  6966   002EFE  EF89  F017         	goto	l4343
  6967   002F02                     u4800:
  6968   002F02  0E00               	movlw	0
  6969   002F04  6E1E               	movwf	___flge@ff2^0,c
  6970   002F06  0E00               	movlw	0
  6971   002F08  6E1F               	movwf	(___flge@ff2+1)^0,c
  6972   002F0A  0E00               	movlw	0
  6973   002F0C  6E20               	movwf	(___flge@ff2+2)^0,c
  6974   002F0E  0E00               	movlw	0
  6975   002F10  6E21               	movwf	(___flge@ff2+3)^0,c
  6976   002F12                     l4343:
  6977   002F12  AE1D               	btfss	(___flge@ff1+3)^0,7,c
  6978   002F14  EF8E  F017         	goto	u4811
  6979   002F18  EF90  F017         	goto	u4810
  6980   002F1C                     u4811:
  6981   002F1C  EF99  F017         	goto	l4347
  6982   002F20                     u4810:
  6983   002F20  6C1A               	negf	___flge@ff1^0,c
  6984   002F22  1E1B               	comf	(___flge@ff1+1)^0,f,c
  6985   002F24  B0D8               	btfsc	status,0,c
  6986   002F26  2A1B               	incf	(___flge@ff1+1)^0,f,c
  6987   002F28  1E1C               	comf	(___flge@ff1+2)^0,f,c
  6988   002F2A  B0D8               	btfsc	status,0,c
  6989   002F2C  2A1C               	incf	(___flge@ff1+2)^0,f,c
  6990   002F2E  0E80               	movlw	128
  6991   002F30  561D               	subfwb	(___flge@ff1+3)^0,f,c
  6992   002F32                     l4347:
  6993   002F32  AE21               	btfss	(___flge@ff2+3)^0,7,c
  6994   002F34  EF9E  F017         	goto	u4821
  6995   002F38  EFA0  F017         	goto	u4820
  6996   002F3C                     u4821:
  6997   002F3C  EFA9  F017         	goto	l461
  6998   002F40                     u4820:
  6999   002F40  6C1E               	negf	___flge@ff2^0,c
  7000   002F42  1E1F               	comf	(___flge@ff2+1)^0,f,c
  7001   002F44  B0D8               	btfsc	status,0,c
  7002   002F46  2A1F               	incf	(___flge@ff2+1)^0,f,c
  7003   002F48  1E20               	comf	(___flge@ff2+2)^0,f,c
  7004   002F4A  B0D8               	btfsc	status,0,c
  7005   002F4C  2A20               	incf	(___flge@ff2+2)^0,f,c
  7006   002F4E  0E80               	movlw	128
  7007   002F50  5621               	subfwb	(___flge@ff2+3)^0,f,c
  7008   002F52                     l461:
  7009   002F52  0E00               	movlw	0
  7010   002F54  1A1A               	xorwf	___flge@ff1^0,f,c
  7011   002F56  0E00               	movlw	0
  7012   002F58  1A1B               	xorwf	(___flge@ff1+1)^0,f,c
  7013   002F5A  0E00               	movlw	0
  7014   002F5C  1A1C               	xorwf	(___flge@ff1+2)^0,f,c
  7015   002F5E  0E80               	movlw	128
  7016   002F60  1A1D               	xorwf	(___flge@ff1+3)^0,f,c
  7017   002F62  0E00               	movlw	0
  7018   002F64  1A1E               	xorwf	___flge@ff2^0,f,c
  7019   002F66  0E00               	movlw	0
  7020   002F68  1A1F               	xorwf	(___flge@ff2+1)^0,f,c
  7021   002F6A  0E00               	movlw	0
  7022   002F6C  1A20               	xorwf	(___flge@ff2+2)^0,f,c
  7023   002F6E  0E80               	movlw	128
  7024   002F70  1A21               	xorwf	(___flge@ff2+3)^0,f,c
  7025   002F72  501E               	movf	___flge@ff2^0,w,c
  7026   002F74  5C1A               	subwf	___flge@ff1^0,w,c
  7027   002F76  501F               	movf	(___flge@ff2+1)^0,w,c
  7028   002F78  581B               	subwfb	(___flge@ff1+1)^0,w,c
  7029   002F7A  5020               	movf	(___flge@ff2+2)^0,w,c
  7030   002F7C  581C               	subwfb	(___flge@ff1+2)^0,w,c
  7031   002F7E  5021               	movf	(___flge@ff2+3)^0,w,c
  7032   002F80  581D               	subwfb	(___flge@ff1+3)^0,w,c
  7033   002F82  B0D8               	btfsc	status,0,c
  7034   002F84  EFC6  F017         	goto	u4831
  7035   002F88  EFC8  F017         	goto	u4830
  7036   002F8C                     u4831:
  7037   002F8C  EFCB  F017         	goto	l4353
  7038   002F90                     u4830:
  7039   002F90  90D8               	bcf	status,0,c
  7040   002F92  EFCC  F017         	goto	l466
  7041   002F96                     l4353:
  7042   002F96  80D8               	bsf	status,0,c
  7043   002F98                     l466:
  7044   002F98  0012               	return		;funcret
  7045   002F9A                     __end_of___flge:
  7046                           	callstack 0
  7047                           
  7048 ;; *************** function ___fleq *****************
  7049 ;; Defined at:
  7050 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\fleq.c"
  7051 ;; Parameters:    Size  Location     Type
  7052 ;;  ff1             4    0[COMRAM] unsigned char 
  7053 ;;  ff2             4    4[COMRAM] unsigned char 
  7054 ;; Auto vars:     Size  Location     Type
  7055 ;;		None
  7056 ;; Return value:  Size  Location     Type
  7057 ;;		None               void
  7058 ;; Registers used:
  7059 ;;		wreg, status,2, status,0
  7060 ;; Tracked objects:
  7061 ;;		On entry : 0/0
  7062 ;;		On exit  : 0/0
  7063 ;;		Unchanged: 0/0
  7064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7065 ;;      Params:         8       0       0       0       0       0       0       0       0
  7066 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7067 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7068 ;;      Totals:        12       0       0       0       0       0       0       0       0
  7069 ;;Total ram usage:       12 bytes
  7070 ;; Hardware stack levels used: 1
  7071 ;; This function calls:
  7072 ;;		Nothing
  7073 ;; This function is called by:
  7074 ;;		_efgtoa
  7075 ;; This function uses a non-reentrant model
  7076 ;;
  7077                           
  7078                           	psect	text27
  7079   0032D6                     __ptext27:
  7080                           	callstack 0
  7081   0032D6                     ___fleq:
  7082                           	callstack 25
  7083   0032D6  0E00               	movlw	0
  7084   0032D8  1401               	andwf	___fleq@ff1^0,w,c
  7085   0032DA  6E09               	movwf	??___fleq^0,c
  7086   0032DC  0E00               	movlw	0
  7087   0032DE  1402               	andwf	(___fleq@ff1+1)^0,w,c
  7088   0032E0  6E0A               	movwf	(??___fleq+1)^0,c
  7089   0032E2  0E80               	movlw	128
  7090   0032E4  1403               	andwf	(___fleq@ff1+2)^0,w,c
  7091   0032E6  6E0B               	movwf	(??___fleq+2)^0,c
  7092   0032E8  0E7F               	movlw	127
  7093   0032EA  1404               	andwf	(___fleq@ff1+3)^0,w,c
  7094   0032EC  6E0C               	movwf	(??___fleq+3)^0,c
  7095   0032EE  5009               	movf	??___fleq^0,w,c
  7096   0032F0  100A               	iorwf	(??___fleq+1)^0,w,c
  7097   0032F2  100B               	iorwf	(??___fleq+2)^0,w,c
  7098   0032F4  100C               	iorwf	(??___fleq+3)^0,w,c
  7099   0032F6  A4D8               	btfss	status,2,c
  7100   0032F8  EF80  F019         	goto	u4761
  7101   0032FC  EF82  F019         	goto	u4760
  7102   003300                     u4761:
  7103   003300  EF8A  F019         	goto	l4323
  7104   003304                     u4760:
  7105   003304  0E00               	movlw	0
  7106   003306  6E01               	movwf	___fleq@ff1^0,c
  7107   003308  0E00               	movlw	0
  7108   00330A  6E02               	movwf	(___fleq@ff1+1)^0,c
  7109   00330C  0E00               	movlw	0
  7110   00330E  6E03               	movwf	(___fleq@ff1+2)^0,c
  7111   003310  0E00               	movlw	0
  7112   003312  6E04               	movwf	(___fleq@ff1+3)^0,c
  7113   003314                     l4323:
  7114   003314  0E00               	movlw	0
  7115   003316  1405               	andwf	___fleq@ff2^0,w,c
  7116   003318  6E09               	movwf	??___fleq^0,c
  7117   00331A  0E00               	movlw	0
  7118   00331C  1406               	andwf	(___fleq@ff2+1)^0,w,c
  7119   00331E  6E0A               	movwf	(??___fleq+1)^0,c
  7120   003320  0E80               	movlw	128
  7121   003322  1407               	andwf	(___fleq@ff2+2)^0,w,c
  7122   003324  6E0B               	movwf	(??___fleq+2)^0,c
  7123   003326  0E7F               	movlw	127
  7124   003328  1408               	andwf	(___fleq@ff2+3)^0,w,c
  7125   00332A  6E0C               	movwf	(??___fleq+3)^0,c
  7126   00332C  5009               	movf	??___fleq^0,w,c
  7127   00332E  100A               	iorwf	(??___fleq+1)^0,w,c
  7128   003330  100B               	iorwf	(??___fleq+2)^0,w,c
  7129   003332  100C               	iorwf	(??___fleq+3)^0,w,c
  7130   003334  A4D8               	btfss	status,2,c
  7131   003336  EF9F  F019         	goto	u4771
  7132   00333A  EFA1  F019         	goto	u4770
  7133   00333E                     u4771:
  7134   00333E  EFA9  F019         	goto	l4327
  7135   003342                     u4770:
  7136   003342  0E00               	movlw	0
  7137   003344  6E05               	movwf	___fleq@ff2^0,c
  7138   003346  0E00               	movlw	0
  7139   003348  6E06               	movwf	(___fleq@ff2+1)^0,c
  7140   00334A  0E00               	movlw	0
  7141   00334C  6E07               	movwf	(___fleq@ff2+2)^0,c
  7142   00334E  0E00               	movlw	0
  7143   003350  6E08               	movwf	(___fleq@ff2+3)^0,c
  7144   003352                     l4327:
  7145   003352  5005               	movf	___fleq@ff2^0,w,c
  7146   003354  1801               	xorwf	___fleq@ff1^0,w,c
  7147   003356  E10F               	bnz	u4780
  7148   003358  5006               	movf	(___fleq@ff2+1)^0,w,c
  7149   00335A  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  7150   00335C  E10C               	bnz	u4780
  7151   00335E  5007               	movf	(___fleq@ff2+2)^0,w,c
  7152   003360  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  7153   003362  E109               	bnz	u4780
  7154   003364  5008               	movf	(___fleq@ff2+3)^0,w,c
  7155   003366  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  7156   003368  B4D8               	btfsc	status,2,c
  7157   00336A  EFB9  F019         	goto	u4781
  7158   00336E  EFBB  F019         	goto	u4780
  7159   003372                     u4781:
  7160   003372  EFBE  F019         	goto	l4331
  7161   003376                     u4780:
  7162   003376  90D8               	bcf	status,0,c
  7163   003378  EFBF  F019         	goto	l455
  7164   00337C                     l4331:
  7165   00337C  80D8               	bsf	status,0,c
  7166   00337E                     l455:
  7167   00337E  0012               	return		;funcret
  7168   003380                     __end_of___fleq:
  7169                           	callstack 0
  7170                           
  7171 ;; *************** function ___fldiv *****************
  7172 ;; Defined at:
  7173 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\sprcdiv.c"
  7174 ;; Parameters:    Size  Location     Type
  7175 ;;  b               4   41[COMRAM] unsigned char 
  7176 ;;  a               4   45[COMRAM] unsigned char 
  7177 ;; Auto vars:     Size  Location     Type
  7178 ;;  grs             4   60[COMRAM] unsigned long 
  7179 ;;  rem             4   53[COMRAM] unsigned long 
  7180 ;;  new_exp         2   58[COMRAM] short 
  7181 ;;  aexp            1   65[COMRAM] unsigned char 
  7182 ;;  bexp            1   64[COMRAM] unsigned char 
  7183 ;;  sign            1   57[COMRAM] unsigned char 
  7184 ;; Return value:  Size  Location     Type
  7185 ;;                  4   41[COMRAM] unsigned char 
  7186 ;; Registers used:
  7187 ;;		wreg, status,2, status,0
  7188 ;; Tracked objects:
  7189 ;;		On entry : 0/0
  7190 ;;		On exit  : 0/0
  7191 ;;		Unchanged: 0/0
  7192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7193 ;;      Params:         8       0       0       0       0       0       0       0       0
  7194 ;;      Locals:        13       0       0       0       0       0       0       0       0
  7195 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7196 ;;      Totals:        25       0       0       0       0       0       0       0       0
  7197 ;;Total ram usage:       25 bytes
  7198 ;; Hardware stack levels used: 1
  7199 ;; This function calls:
  7200 ;;		Nothing
  7201 ;; This function is called by:
  7202 ;;		_termistorin
  7203 ;;		_logf
  7204 ;;		_efgtoa
  7205 ;;		_termistorout
  7206 ;; This function uses a non-reentrant model
  7207 ;;
  7208                           
  7209                           	psect	text28
  7210   00213A                     __ptext28:
  7211                           	callstack 0
  7212   00213A                     ___fldiv:
  7213                           	callstack 27
  7214   00213A  502D               	movf	(___fldiv@b+3)^0,w,c
  7215   00213C  0B80               	andlw	128
  7216   00213E  6E3A               	movwf	___fldiv@sign^0,c
  7217   002140  502D               	movf	(___fldiv@b+3)^0,w,c
  7218   002142  242D               	addwf	(___fldiv@b+3)^0,w,c
  7219   002144  6E41               	movwf	___fldiv@bexp^0,c
  7220   002146  AE2C               	btfss	(___fldiv@b+2)^0,7,c
  7221   002148  EFA8  F010         	goto	u4341
  7222   00214C  EFAA  F010         	goto	u4340
  7223   002150                     u4341:
  7224   002150  EFAB  F010         	goto	l4051
  7225   002154                     u4340:
  7226   002154  8041               	bsf	___fldiv@bexp^0,0,c
  7227   002156                     l4051:
  7228   002156  5041               	movf	___fldiv@bexp^0,w,c
  7229   002158  B4D8               	btfsc	status,2,c
  7230   00215A  EFB1  F010         	goto	u4351
  7231   00215E  EFB3  F010         	goto	u4350
  7232   002162                     u4351:
  7233   002162  EFC8  F010         	goto	l4061
  7234   002166                     u4350:
  7235   002166  2841               	incf	___fldiv@bexp^0,w,c
  7236   002168  A4D8               	btfss	status,2,c
  7237   00216A  EFB9  F010         	goto	u4361
  7238   00216E  EFBB  F010         	goto	u4360
  7239   002172                     u4361:
  7240   002172  EFC3  F010         	goto	l4057
  7241   002176                     u4360:
  7242   002176  0E00               	movlw	0
  7243   002178  6E2A               	movwf	___fldiv@b^0,c
  7244   00217A  0E00               	movlw	0
  7245   00217C  6E2B               	movwf	(___fldiv@b+1)^0,c
  7246   00217E  0E00               	movlw	0
  7247   002180  6E2C               	movwf	(___fldiv@b+2)^0,c
  7248   002182  0E00               	movlw	0
  7249   002184  6E2D               	movwf	(___fldiv@b+3)^0,c
  7250   002186                     l4057:
  7251   002186  8E2C               	bsf	(___fldiv@b+2)^0,7,c
  7252   002188  0E00               	movlw	0
  7253   00218A  6E2D               	movwf	(___fldiv@b+3)^0,c
  7254   00218C  EFD0  F010         	goto	l4063
  7255   002190                     l4061:
  7256   002190  0E00               	movlw	0
  7257   002192  6E2A               	movwf	___fldiv@b^0,c
  7258   002194  0E00               	movlw	0
  7259   002196  6E2B               	movwf	(___fldiv@b+1)^0,c
  7260   002198  0E00               	movlw	0
  7261   00219A  6E2C               	movwf	(___fldiv@b+2)^0,c
  7262   00219C  0E00               	movlw	0
  7263   00219E  6E2D               	movwf	(___fldiv@b+3)^0,c
  7264   0021A0                     l4063:
  7265   0021A0  5031               	movf	(___fldiv@a+3)^0,w,c
  7266   0021A2  0B80               	andlw	128
  7267   0021A4  1A3A               	xorwf	___fldiv@sign^0,f,c
  7268   0021A6  5031               	movf	(___fldiv@a+3)^0,w,c
  7269   0021A8  2431               	addwf	(___fldiv@a+3)^0,w,c
  7270   0021AA  6E42               	movwf	___fldiv@aexp^0,c
  7271   0021AC  AE30               	btfss	(___fldiv@a+2)^0,7,c
  7272   0021AE  EFDB  F010         	goto	u4371
  7273   0021B2  EFDD  F010         	goto	u4370
  7274   0021B6                     u4371:
  7275   0021B6  EFDE  F010         	goto	l4071
  7276   0021BA                     u4370:
  7277   0021BA  8042               	bsf	___fldiv@aexp^0,0,c
  7278   0021BC                     l4071:
  7279   0021BC  5042               	movf	___fldiv@aexp^0,w,c
  7280   0021BE  B4D8               	btfsc	status,2,c
  7281   0021C0  EFE4  F010         	goto	u4381
  7282   0021C4  EFE6  F010         	goto	u4380
  7283   0021C8                     u4381:
  7284   0021C8  EFFB  F010         	goto	l4081
  7285   0021CC                     u4380:
  7286   0021CC  2842               	incf	___fldiv@aexp^0,w,c
  7287   0021CE  A4D8               	btfss	status,2,c
  7288   0021D0  EFEC  F010         	goto	u4391
  7289   0021D4  EFEE  F010         	goto	u4390
  7290   0021D8                     u4391:
  7291   0021D8  EFF6  F010         	goto	l4077
  7292   0021DC                     u4390:
  7293   0021DC  0E00               	movlw	0
  7294   0021DE  6E2E               	movwf	___fldiv@a^0,c
  7295   0021E0  0E00               	movlw	0
  7296   0021E2  6E2F               	movwf	(___fldiv@a+1)^0,c
  7297   0021E4  0E00               	movlw	0
  7298   0021E6  6E30               	movwf	(___fldiv@a+2)^0,c
  7299   0021E8  0E00               	movlw	0
  7300   0021EA  6E31               	movwf	(___fldiv@a+3)^0,c
  7301   0021EC                     l4077:
  7302   0021EC  8E30               	bsf	(___fldiv@a+2)^0,7,c
  7303   0021EE  0E00               	movlw	0
  7304   0021F0  6E31               	movwf	(___fldiv@a+3)^0,c
  7305   0021F2  EF03  F011         	goto	l4083
  7306   0021F6                     l4081:
  7307   0021F6  0E00               	movlw	0
  7308   0021F8  6E2E               	movwf	___fldiv@a^0,c
  7309   0021FA  0E00               	movlw	0
  7310   0021FC  6E2F               	movwf	(___fldiv@a+1)^0,c
  7311   0021FE  0E00               	movlw	0
  7312   002200  6E30               	movwf	(___fldiv@a+2)^0,c
  7313   002202  0E00               	movlw	0
  7314   002204  6E31               	movwf	(___fldiv@a+3)^0,c
  7315   002206                     l4083:
  7316   002206  502E               	movf	___fldiv@a^0,w,c
  7317   002208  102F               	iorwf	(___fldiv@a+1)^0,w,c
  7318   00220A  1030               	iorwf	(___fldiv@a+2)^0,w,c
  7319   00220C  1031               	iorwf	(___fldiv@a+3)^0,w,c
  7320   00220E  A4D8               	btfss	status,2,c
  7321   002210  EF0C  F011         	goto	u4401
  7322   002214  EF0E  F011         	goto	u4400
  7323   002218                     u4401:
  7324   002218  EF26  F011         	goto	l4095
  7325   00221C                     u4400:
  7326   00221C  0E00               	movlw	0
  7327   00221E  6E2A               	movwf	___fldiv@b^0,c
  7328   002220  0E00               	movlw	0
  7329   002222  6E2B               	movwf	(___fldiv@b+1)^0,c
  7330   002224  0E00               	movlw	0
  7331   002226  6E2C               	movwf	(___fldiv@b+2)^0,c
  7332   002228  0E00               	movlw	0
  7333   00222A  6E2D               	movwf	(___fldiv@b+3)^0,c
  7334   00222C  0E80               	movlw	128
  7335   00222E  122C               	iorwf	(___fldiv@b+2)^0,f,c
  7336   002230  0E7F               	movlw	127
  7337   002232  122D               	iorwf	(___fldiv@b+3)^0,f,c
  7338   002234                     l4089:
  7339   002234  503A               	movf	___fldiv@sign^0,w,c
  7340   002236  122D               	iorwf	(___fldiv@b+3)^0,f,c
  7341   002238  C02A  F02A         	movff	___fldiv@b,?___fldiv
  7342   00223C  C02B  F02B         	movff	___fldiv@b+1,?___fldiv+1
  7343   002240  C02C  F02C         	movff	___fldiv@b+2,?___fldiv+2
  7344   002244  C02D  F02D         	movff	___fldiv@b+3,?___fldiv+3
  7345   002248  EF69  F012         	goto	l778
  7346   00224C                     l4095:
  7347   00224C  5041               	movf	___fldiv@bexp^0,w,c
  7348   00224E  A4D8               	btfss	status,2,c
  7349   002250  EF2C  F011         	goto	u4411
  7350   002254  EF2E  F011         	goto	u4410
  7351   002258                     u4411:
  7352   002258  EF38  F011         	goto	l4103
  7353   00225C                     u4410:
  7354   00225C  0E00               	movlw	0
  7355   00225E  6E2A               	movwf	?___fldiv^0,c
  7356   002260  0E00               	movlw	0
  7357   002262  6E2B               	movwf	(?___fldiv+1)^0,c
  7358   002264  0E00               	movlw	0
  7359   002266  6E2C               	movwf	(?___fldiv+2)^0,c
  7360   002268  0E00               	movlw	0
  7361   00226A  6E2D               	movwf	(?___fldiv+3)^0,c
  7362   00226C  EF69  F012         	goto	l778
  7363   002270                     l4103:
  7364   002270  5042               	movf	___fldiv@aexp^0,w,c
  7365   002272  C041  F032         	movff	___fldiv@bexp,??___fldiv
  7366   002276  6A33               	clrf	(??___fldiv+1)^0,c
  7367   002278  5E32               	subwf	??___fldiv^0,f,c
  7368   00227A  0E00               	movlw	0
  7369   00227C  5A33               	subwfb	(??___fldiv+1)^0,f,c
  7370   00227E  0E7F               	movlw	127
  7371   002280  2432               	addwf	??___fldiv^0,w,c
  7372   002282  6E3B               	movwf	___fldiv@new_exp^0,c
  7373   002284  0E00               	movlw	0
  7374   002286  2033               	addwfc	(??___fldiv+1)^0,w,c
  7375   002288  6E3C               	movwf	(___fldiv@new_exp+1)^0,c
  7376   00228A  C02A  F036         	movff	___fldiv@b,___fldiv@rem
  7377   00228E  C02B  F037         	movff	___fldiv@b+1,___fldiv@rem+1
  7378   002292  C02C  F038         	movff	___fldiv@b+2,___fldiv@rem+2
  7379   002296  C02D  F039         	movff	___fldiv@b+3,___fldiv@rem+3
  7380   00229A  0E00               	movlw	0
  7381   00229C  6E2A               	movwf	___fldiv@b^0,c
  7382   00229E  0E00               	movlw	0
  7383   0022A0  6E2B               	movwf	(___fldiv@b+1)^0,c
  7384   0022A2  0E00               	movlw	0
  7385   0022A4  6E2C               	movwf	(___fldiv@b+2)^0,c
  7386   0022A6  0E00               	movlw	0
  7387   0022A8  6E2D               	movwf	(___fldiv@b+3)^0,c
  7388   0022AA  0E00               	movlw	0
  7389   0022AC  6E3D               	movwf	___fldiv@grs^0,c
  7390   0022AE  0E00               	movlw	0
  7391   0022B0  6E3E               	movwf	(___fldiv@grs+1)^0,c
  7392   0022B2  0E00               	movlw	0
  7393   0022B4  6E3F               	movwf	(___fldiv@grs+2)^0,c
  7394   0022B6  0E00               	movlw	0
  7395   0022B8  6E40               	movwf	(___fldiv@grs+3)^0,c
  7396   0022BA  0E00               	movlw	0
  7397   0022BC  6E42               	movwf	___fldiv@aexp^0,c
  7398   0022BE  EF99  F011         	goto	l780
  7399   0022C2                     l4113:
  7400   0022C2  5042               	movf	___fldiv@aexp^0,w,c
  7401   0022C4  B4D8               	btfsc	status,2,c
  7402   0022C6  EF67  F011         	goto	u4421
  7403   0022CA  EF69  F011         	goto	u4420
  7404   0022CE                     u4421:
  7405   0022CE  EF80  F011         	goto	l4121
  7406   0022D2                     u4420:
  7407   0022D2  90D8               	bcf	status,0,c
  7408   0022D4  3636               	rlcf	___fldiv@rem^0,f,c
  7409   0022D6  3637               	rlcf	(___fldiv@rem+1)^0,f,c
  7410   0022D8  3638               	rlcf	(___fldiv@rem+2)^0,f,c
  7411   0022DA  3639               	rlcf	(___fldiv@rem+3)^0,f,c
  7412   0022DC  90D8               	bcf	status,0,c
  7413   0022DE  362A               	rlcf	___fldiv@b^0,f,c
  7414   0022E0  362B               	rlcf	(___fldiv@b+1)^0,f,c
  7415   0022E2  362C               	rlcf	(___fldiv@b+2)^0,f,c
  7416   0022E4  362D               	rlcf	(___fldiv@b+3)^0,f,c
  7417   0022E6  AE40               	btfss	(___fldiv@grs+3)^0,7,c
  7418   0022E8  EF78  F011         	goto	u4431
  7419   0022EC  EF7A  F011         	goto	u4430
  7420   0022F0                     u4431:
  7421   0022F0  EF7B  F011         	goto	l783
  7422   0022F4                     u4430:
  7423   0022F4  802A               	bsf	___fldiv@b^0,0,c
  7424   0022F6                     l783:
  7425   0022F6  90D8               	bcf	status,0,c
  7426   0022F8  363D               	rlcf	___fldiv@grs^0,f,c
  7427   0022FA  363E               	rlcf	(___fldiv@grs+1)^0,f,c
  7428   0022FC  363F               	rlcf	(___fldiv@grs+2)^0,f,c
  7429   0022FE  3640               	rlcf	(___fldiv@grs+3)^0,f,c
  7430   002300                     l4121:
  7431   002300  502E               	movf	___fldiv@a^0,w,c
  7432   002302  5C36               	subwf	___fldiv@rem^0,w,c
  7433   002304  502F               	movf	(___fldiv@a+1)^0,w,c
  7434   002306  5837               	subwfb	(___fldiv@rem+1)^0,w,c
  7435   002308  5030               	movf	(___fldiv@a+2)^0,w,c
  7436   00230A  5838               	subwfb	(___fldiv@rem+2)^0,w,c
  7437   00230C  5031               	movf	(___fldiv@a+3)^0,w,c
  7438   00230E  5839               	subwfb	(___fldiv@rem+3)^0,w,c
  7439   002310  A0D8               	btfss	status,0,c
  7440   002312  EF8D  F011         	goto	u4441
  7441   002316  EF8F  F011         	goto	u4440
  7442   00231A                     u4441:
  7443   00231A  EF98  F011         	goto	l4127
  7444   00231E                     u4440:
  7445   00231E  8C40               	bsf	(___fldiv@grs+3)^0,6,c
  7446   002320  502E               	movf	___fldiv@a^0,w,c
  7447   002322  5E36               	subwf	___fldiv@rem^0,f,c
  7448   002324  502F               	movf	(___fldiv@a+1)^0,w,c
  7449   002326  5A37               	subwfb	(___fldiv@rem+1)^0,f,c
  7450   002328  5030               	movf	(___fldiv@a+2)^0,w,c
  7451   00232A  5A38               	subwfb	(___fldiv@rem+2)^0,f,c
  7452   00232C  5031               	movf	(___fldiv@a+3)^0,w,c
  7453   00232E  5A39               	subwfb	(___fldiv@rem+3)^0,f,c
  7454   002330                     l4127:
  7455   002330  2A42               	incf	___fldiv@aexp^0,f,c
  7456   002332                     l780:
  7457   002332  0E19               	movlw	25
  7458   002334  6442               	cpfsgt	___fldiv@aexp^0,c
  7459   002336  EF9F  F011         	goto	u4451
  7460   00233A  EFA1  F011         	goto	u4450
  7461   00233E                     u4451:
  7462   00233E  EF61  F011         	goto	l4113
  7463   002342                     u4450:
  7464   002342  5036               	movf	___fldiv@rem^0,w,c
  7465   002344  1037               	iorwf	(___fldiv@rem+1)^0,w,c
  7466   002346  1038               	iorwf	(___fldiv@rem+2)^0,w,c
  7467   002348  1039               	iorwf	(___fldiv@rem+3)^0,w,c
  7468   00234A  B4D8               	btfsc	status,2,c
  7469   00234C  EFAA  F011         	goto	u4461
  7470   002350  EFAC  F011         	goto	u4460
  7471   002354                     u4461:
  7472   002354  EFC4  F011         	goto	l4139
  7473   002358                     u4460:
  7474   002358  803D               	bsf	___fldiv@grs^0,0,c
  7475   00235A  EFC4  F011         	goto	l4139
  7476   00235E                     l4133:
  7477   00235E  90D8               	bcf	status,0,c
  7478   002360  362A               	rlcf	___fldiv@b^0,f,c
  7479   002362  362B               	rlcf	(___fldiv@b+1)^0,f,c
  7480   002364  362C               	rlcf	(___fldiv@b+2)^0,f,c
  7481   002366  362D               	rlcf	(___fldiv@b+3)^0,f,c
  7482   002368  AE40               	btfss	(___fldiv@grs+3)^0,7,c
  7483   00236A  EFB9  F011         	goto	u4471
  7484   00236E  EFBB  F011         	goto	u4470
  7485   002372                     u4471:
  7486   002372  EFBC  F011         	goto	l789
  7487   002376                     u4470:
  7488   002376  802A               	bsf	___fldiv@b^0,0,c
  7489   002378                     l789:
  7490   002378  90D8               	bcf	status,0,c
  7491   00237A  363D               	rlcf	___fldiv@grs^0,f,c
  7492   00237C  363E               	rlcf	(___fldiv@grs+1)^0,f,c
  7493   00237E  363F               	rlcf	(___fldiv@grs+2)^0,f,c
  7494   002380  3640               	rlcf	(___fldiv@grs+3)^0,f,c
  7495   002382  063B               	decf	___fldiv@new_exp^0,f,c
  7496   002384  A0D8               	btfss	status,0,c
  7497   002386  063C               	decf	(___fldiv@new_exp+1)^0,f,c
  7498   002388                     l4139:
  7499   002388  AE2C               	btfss	(___fldiv@b+2)^0,7,c
  7500   00238A  EFC9  F011         	goto	u4481
  7501   00238E  EFCB  F011         	goto	u4480
  7502   002392                     u4481:
  7503   002392  EFAF  F011         	goto	l4133
  7504   002396                     u4480:
  7505   002396  0E00               	movlw	0
  7506   002398  6E42               	movwf	___fldiv@aexp^0,c
  7507   00239A  AE40               	btfss	(___fldiv@grs+3)^0,7,c
  7508   00239C  EFD2  F011         	goto	u4491
  7509   0023A0  EFD4  F011         	goto	u4490
  7510   0023A4                     u4491:
  7511   0023A4  EFF8  F011         	goto	l791
  7512   0023A8                     u4490:
  7513   0023A8  0EFF               	movlw	255
  7514   0023AA  143D               	andwf	___fldiv@grs^0,w,c
  7515   0023AC  6E32               	movwf	??___fldiv^0,c
  7516   0023AE  0EFF               	movlw	255
  7517   0023B0  143E               	andwf	(___fldiv@grs+1)^0,w,c
  7518   0023B2  6E33               	movwf	(??___fldiv+1)^0,c
  7519   0023B4  0EFF               	movlw	255
  7520   0023B6  143F               	andwf	(___fldiv@grs+2)^0,w,c
  7521   0023B8  6E34               	movwf	(??___fldiv+2)^0,c
  7522   0023BA  0E7F               	movlw	127
  7523   0023BC  1440               	andwf	(___fldiv@grs+3)^0,w,c
  7524   0023BE  6E35               	movwf	(??___fldiv+3)^0,c
  7525   0023C0  5032               	movf	??___fldiv^0,w,c
  7526   0023C2  1033               	iorwf	(??___fldiv+1)^0,w,c
  7527   0023C4  1034               	iorwf	(??___fldiv+2)^0,w,c
  7528   0023C6  1035               	iorwf	(??___fldiv+3)^0,w,c
  7529   0023C8  B4D8               	btfsc	status,2,c
  7530   0023CA  EFE9  F011         	goto	u4501
  7531   0023CE  EFEB  F011         	goto	u4500
  7532   0023D2                     u4501:
  7533   0023D2  EFEF  F011         	goto	l792
  7534   0023D6                     u4500:
  7535   0023D6                     l4147:
  7536   0023D6  0E01               	movlw	1
  7537   0023D8  6E42               	movwf	___fldiv@aexp^0,c
  7538   0023DA  EFF8  F011         	goto	l791
  7539   0023DE                     l792:
  7540   0023DE  A02A               	btfss	___fldiv@b^0,0,c
  7541   0023E0  EFF4  F011         	goto	u4511
  7542   0023E4  EFF6  F011         	goto	u4510
  7543   0023E8                     u4511:
  7544   0023E8  EFF8  F011         	goto	l791
  7545   0023EC                     u4510:
  7546   0023EC  EFEB  F011         	goto	l4147
  7547   0023F0                     l791:
  7548   0023F0  5042               	movf	___fldiv@aexp^0,w,c
  7549   0023F2  B4D8               	btfsc	status,2,c
  7550   0023F4  EFFE  F011         	goto	u4521
  7551   0023F8  EF00  F012         	goto	u4520
  7552   0023FC                     u4521:
  7553   0023FC  EF24  F012         	goto	l4159
  7554   002400                     u4520:
  7555   002400  0E01               	movlw	1
  7556   002402  262A               	addwf	___fldiv@b^0,f,c
  7557   002404  0E00               	movlw	0
  7558   002406  222B               	addwfc	(___fldiv@b+1)^0,f,c
  7559   002408  222C               	addwfc	(___fldiv@b+2)^0,f,c
  7560   00240A  222D               	addwfc	(___fldiv@b+3)^0,f,c
  7561   00240C  A02D               	btfss	(___fldiv@b+3)^0,0,c
  7562   00240E  EF0B  F012         	goto	u4531
  7563   002412  EF0D  F012         	goto	u4530
  7564   002416                     u4531:
  7565   002416  EF24  F012         	goto	l4159
  7566   00241A                     u4530:
  7567   00241A  C02A  F032         	movff	___fldiv@b,??___fldiv
  7568   00241E  C02B  F033         	movff	___fldiv@b+1,??___fldiv+1
  7569   002422  C02C  F034         	movff	___fldiv@b+2,??___fldiv+2
  7570   002426  C02D  F035         	movff	___fldiv@b+3,??___fldiv+3
  7571   00242A  3435               	rlcf	(??___fldiv+3)^0,w,c
  7572   00242C  3235               	rrcf	(??___fldiv+3)^0,f,c
  7573   00242E  3234               	rrcf	(??___fldiv+2)^0,f,c
  7574   002430  3233               	rrcf	(??___fldiv+1)^0,f,c
  7575   002432  3232               	rrcf	??___fldiv^0,f,c
  7576   002434  C032  F02A         	movff	??___fldiv,___fldiv@b
  7577   002438  C033  F02B         	movff	??___fldiv+1,___fldiv@b+1
  7578   00243C  C034  F02C         	movff	??___fldiv+2,___fldiv@b+2
  7579   002440  C035  F02D         	movff	??___fldiv+3,___fldiv@b+3
  7580   002444  4A3B               	infsnz	___fldiv@new_exp^0,f,c
  7581   002446  2A3C               	incf	(___fldiv@new_exp+1)^0,f,c
  7582   002448                     l4159:
  7583   002448  BE3C               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7584   00244A  EF2F  F012         	goto	u4541
  7585   00244E  503C               	movf	(___fldiv@new_exp+1)^0,w,c
  7586   002450  E108               	bnz	u4540
  7587   002452  283B               	incf	___fldiv@new_exp^0,w,c
  7588   002454  A0D8               	btfss	status,0,c
  7589   002456  EF2F  F012         	goto	u4541
  7590   00245A  EF31  F012         	goto	u4540
  7591   00245E                     u4541:
  7592   00245E  EF3C  F012         	goto	l4163
  7593   002462                     u4540:
  7594   002462  0E00               	movlw	0
  7595   002464  6E3C               	movwf	(___fldiv@new_exp+1)^0,c
  7596   002466  683B               	setf	___fldiv@new_exp^0,c
  7597   002468  0E00               	movlw	0
  7598   00246A  6E2A               	movwf	___fldiv@b^0,c
  7599   00246C  0E00               	movlw	0
  7600   00246E  6E2B               	movwf	(___fldiv@b+1)^0,c
  7601   002470  0E00               	movlw	0
  7602   002472  6E2C               	movwf	(___fldiv@b+2)^0,c
  7603   002474  0E00               	movlw	0
  7604   002476  6E2D               	movwf	(___fldiv@b+3)^0,c
  7605   002478                     l4163:
  7606   002478  BE3C               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7607   00247A  EF49  F012         	goto	u4550
  7608   00247E  503C               	movf	(___fldiv@new_exp+1)^0,w,c
  7609   002480  E106               	bnz	u4551
  7610   002482  043B               	decf	___fldiv@new_exp^0,w,c
  7611   002484  B0D8               	btfsc	status,0,c
  7612   002486  EF47  F012         	goto	u4551
  7613   00248A  EF49  F012         	goto	u4550
  7614   00248E                     u4551:
  7615   00248E  EF57  F012         	goto	l4167
  7616   002492                     u4550:
  7617   002492  0E00               	movlw	0
  7618   002494  6E3C               	movwf	(___fldiv@new_exp+1)^0,c
  7619   002496  0E00               	movlw	0
  7620   002498  6E3B               	movwf	___fldiv@new_exp^0,c
  7621   00249A  0E00               	movlw	0
  7622   00249C  6E2A               	movwf	___fldiv@b^0,c
  7623   00249E  0E00               	movlw	0
  7624   0024A0  6E2B               	movwf	(___fldiv@b+1)^0,c
  7625   0024A2  0E00               	movlw	0
  7626   0024A4  6E2C               	movwf	(___fldiv@b+2)^0,c
  7627   0024A6  0E00               	movlw	0
  7628   0024A8  6E2D               	movwf	(___fldiv@b+3)^0,c
  7629   0024AA  0E00               	movlw	0
  7630   0024AC  6E3A               	movwf	___fldiv@sign^0,c
  7631   0024AE                     l4167:
  7632   0024AE  C03B  F041         	movff	___fldiv@new_exp,___fldiv@bexp
  7633   0024B2  A041               	btfss	___fldiv@bexp^0,0,c
  7634   0024B4  EF5E  F012         	goto	u4561
  7635   0024B8  EF60  F012         	goto	u4560
  7636   0024BC                     u4561:
  7637   0024BC  EF63  F012         	goto	l4173
  7638   0024C0                     u4560:
  7639   0024C0  8E2C               	bsf	(___fldiv@b+2)^0,7,c
  7640   0024C2  EF64  F012         	goto	l4175
  7641   0024C6                     l4173:
  7642   0024C6  9E2C               	bcf	(___fldiv@b+2)^0,7,c
  7643   0024C8                     l4175:
  7644   0024C8  90D8               	bcf	status,0,c
  7645   0024CA  3041               	rrcf	___fldiv@bexp^0,w,c
  7646   0024CC  6E2D               	movwf	(___fldiv@b+3)^0,c
  7647   0024CE  EF1A  F011         	goto	l4089
  7648   0024D2                     l778:
  7649   0024D2  0012               	return		;funcret
  7650   0024D4                     __end_of___fldiv:
  7651                           	callstack 0
  7652                           
  7653 ;; *************** function _LCD_Write_String *****************
  7654 ;; Defined at:
  7655 ;;		line 134 in file "lcd.c"
  7656 ;; Parameters:    Size  Location     Type
  7657 ;;  Str             2    5[COMRAM] PTR unsigned char 
  7658 ;;		 -> TempoutSTR(32), TempinSTR(32), 
  7659 ;; Auto vars:     Size  Location     Type
  7660 ;;  i               2    7[COMRAM] int 
  7661 ;; Return value:  Size  Location     Type
  7662 ;;                  1    wreg      void 
  7663 ;; Registers used:
  7664 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7665 ;; Tracked objects:
  7666 ;;		On entry : 0/0
  7667 ;;		On exit  : 0/0
  7668 ;;		Unchanged: 0/0
  7669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7670 ;;      Params:         2       0       0       0       0       0       0       0       0
  7671 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7672 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7673 ;;      Totals:         4       0       0       0       0       0       0       0       0
  7674 ;;Total ram usage:        4 bytes
  7675 ;; Hardware stack levels used: 1
  7676 ;; Hardware stack levels required when called: 5
  7677 ;; This function calls:
  7678 ;;		_LCD_Write_Char
  7679 ;; This function is called by:
  7680 ;;		_menu
  7681 ;; This function uses a non-reentrant model
  7682 ;;
  7683                           
  7684                           	psect	text29
  7685   003690                     __ptext29:
  7686                           	callstack 0
  7687   003690                     _LCD_Write_String:
  7688                           	callstack 24
  7689   003690                     
  7690                           ;lcd.c: 134: void LCD_Write_String(char* Str);lcd.c: 135: {;lcd.c: 136:     for(int i=0;
      +                           Str[i]!='\0'; i++)
  7691   003690  0E00               	movlw	0
  7692   003692  6E09               	movwf	(LCD_Write_String@i+1)^0,c
  7693   003694  0E00               	movlw	0
  7694   003696  6E08               	movwf	LCD_Write_String@i^0,c
  7695   003698  EF59  F01B         	goto	l4891
  7696   00369C                     l4887:
  7697                           
  7698                           ;lcd.c: 137:        LCD_Write_Char(Str[i]);
  7699   00369C  5008               	movf	LCD_Write_String@i^0,w,c
  7700   00369E  2406               	addwf	LCD_Write_String@Str^0,w,c
  7701   0036A0  6ED9               	movwf	fsr2l,c
  7702   0036A2  5009               	movf	(LCD_Write_String@i+1)^0,w,c
  7703   0036A4  2007               	addwfc	(LCD_Write_String@Str+1)^0,w,c
  7704   0036A6  6EDA               	movwf	fsr2h,c
  7705   0036A8  50DF               	movf	indf2,w,c
  7706   0036AA  EC1F  F01C         	call	_LCD_Write_Char
  7707   0036AE  4A08               	infsnz	LCD_Write_String@i^0,f,c
  7708   0036B0  2A09               	incf	(LCD_Write_String@i+1)^0,f,c
  7709   0036B2                     l4891:
  7710   0036B2  5008               	movf	LCD_Write_String@i^0,w,c
  7711   0036B4  2406               	addwf	LCD_Write_String@Str^0,w,c
  7712   0036B6  6ED9               	movwf	fsr2l,c
  7713   0036B8  5009               	movf	(LCD_Write_String@i+1)^0,w,c
  7714   0036BA  2007               	addwfc	(LCD_Write_String@Str+1)^0,w,c
  7715   0036BC  6EDA               	movwf	fsr2h,c
  7716   0036BE  50DF               	movf	indf2,w,c
  7717   0036C0  A4D8               	btfss	status,2,c
  7718   0036C2  EF65  F01B         	goto	u5601
  7719   0036C6  EF67  F01B         	goto	u5600
  7720   0036CA                     u5601:
  7721   0036CA  EF4E  F01B         	goto	l4887
  7722   0036CE                     u5600:
  7723   0036CE  0012               	return		;funcret
  7724   0036D0                     __end_of_LCD_Write_String:
  7725                           	callstack 0
  7726                           
  7727 ;; *************** function _LCD_Write_Char *****************
  7728 ;; Defined at:
  7729 ;;		line 127 in file "lcd.c"
  7730 ;; Parameters:    Size  Location     Type
  7731 ;;  Data            1    wreg     unsigned char 
  7732 ;; Auto vars:     Size  Location     Type
  7733 ;;  Data            1    4[COMRAM] unsigned char 
  7734 ;; Return value:  Size  Location     Type
  7735 ;;                  1    wreg      void 
  7736 ;; Registers used:
  7737 ;;		wreg, status,2, status,0, cstack
  7738 ;; Tracked objects:
  7739 ;;		On entry : 0/0
  7740 ;;		On exit  : 0/0
  7741 ;;		Unchanged: 0/0
  7742 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7743 ;;      Params:         0       0       0       0       0       0       0       0       0
  7744 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7745 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7746 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7747 ;;Total ram usage:        1 bytes
  7748 ;; Hardware stack levels used: 1
  7749 ;; Hardware stack levels required when called: 4
  7750 ;; This function calls:
  7751 ;;		_LCD_Write_4Bit
  7752 ;; This function is called by:
  7753 ;;		_LCD_Write_String
  7754 ;; This function uses a non-reentrant model
  7755 ;;
  7756                           
  7757                           	psect	text30
  7758   00383E                     __ptext30:
  7759                           	callstack 0
  7760   00383E                     _LCD_Write_Char:
  7761                           	callstack 24
  7762                           
  7763                           ;incstack = 0
  7764                           ;LCD_Write_Char@Data stored from wreg
  7765   00383E  6E05               	movwf	LCD_Write_Char@Data^0,c
  7766   003840                     
  7767                           ;lcd.c: 127: void LCD_Write_Char(char Data);lcd.c: 128: {;lcd.c: 129:   RS = 1;
  7768   003840  0E01               	movlw	1
  7769   003842  0100               	movlb	0	; () banked
  7770   003844  6FD5               	movwf	_RS& (0+255),b
  7771   003846                     
  7772                           ; BSR set to: 0
  7773                           ;lcd.c: 130:   LCD_Write_4Bit(Data & 0xF0);
  7774   003846  5005               	movf	LCD_Write_Char@Data^0,w,c
  7775   003848  0BF0               	andlw	240
  7776   00384A  ECFF  F01B         	call	_LCD_Write_4Bit
  7777   00384E                     
  7778                           ;lcd.c: 131:   LCD_Write_4Bit((Data << 4) & 0xF0);
  7779   00384E  3805               	swapf	LCD_Write_Char@Data^0,w,c
  7780   003850  0BF0               	andlw	240
  7781   003852  0BF0               	andlw	240
  7782   003854  ECFF  F01B         	call	_LCD_Write_4Bit
  7783   003858  0012               	return		;funcret
  7784   00385A                     __end_of_LCD_Write_Char:
  7785                           	callstack 0
  7786                           
  7787 ;; *************** function _LCD_Set_Cursor *****************
  7788 ;; Defined at:
  7789 ;;		line 140 in file "lcd.c"
  7790 ;; Parameters:    Size  Location     Type
  7791 ;;  ROW             1    wreg     unsigned char 
  7792 ;;  COL             1    5[COMRAM] unsigned char 
  7793 ;; Auto vars:     Size  Location     Type
  7794 ;;  ROW             1    6[COMRAM] unsigned char 
  7795 ;; Return value:  Size  Location     Type
  7796 ;;                  1    wreg      void 
  7797 ;; Registers used:
  7798 ;;		wreg, status,2, status,0, cstack
  7799 ;; Tracked objects:
  7800 ;;		On entry : 0/0
  7801 ;;		On exit  : 0/0
  7802 ;;		Unchanged: 0/0
  7803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7804 ;;      Params:         1       0       0       0       0       0       0       0       0
  7805 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7806 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7807 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7808 ;;Total ram usage:        2 bytes
  7809 ;; Hardware stack levels used: 1
  7810 ;; Hardware stack levels required when called: 5
  7811 ;; This function calls:
  7812 ;;		_LCD_CMD
  7813 ;; This function is called by:
  7814 ;;		_menu
  7815 ;; This function uses a non-reentrant model
  7816 ;;
  7817                           
  7818                           	psect	text31
  7819   0034E2                     __ptext31:
  7820                           	callstack 0
  7821   0034E2                     _LCD_Set_Cursor:
  7822                           	callstack 24
  7823                           
  7824                           ;incstack = 0
  7825                           ;LCD_Set_Cursor@ROW stored from wreg
  7826   0034E2  6E07               	movwf	LCD_Set_Cursor@ROW^0,c
  7827   0034E4                     
  7828                           ;lcd.c: 140: void LCD_Set_Cursor(unsigned char ROW, unsigned char COL);lcd.c: 141: {;lcd
      +                          .c: 142:   switch(ROW)
  7829   0034E4  EF8C  F01A         	goto	l3677
  7830   0034E8                     l3669:
  7831                           
  7832                           ;lcd.c: 145:       LCD_CMD(0xC0 + COL-1);
  7833   0034E8  5006               	movf	LCD_Set_Cursor@COL^0,w,c
  7834   0034EA  0FBF               	addlw	191
  7835   0034EC  EC2D  F01C         	call	_LCD_CMD
  7836                           
  7837                           ;lcd.c: 146:       break;
  7838   0034F0  EF9B  F01A         	goto	l106
  7839   0034F4                     l3671:
  7840                           
  7841                           ;lcd.c: 148:       LCD_CMD(0x94 + COL-1);
  7842   0034F4  5006               	movf	LCD_Set_Cursor@COL^0,w,c
  7843   0034F6  0F93               	addlw	147
  7844   0034F8  EC2D  F01C         	call	_LCD_CMD
  7845                           
  7846                           ;lcd.c: 149:       break;
  7847   0034FC  EF9B  F01A         	goto	l106
  7848   003500                     l3673:
  7849                           
  7850                           ;lcd.c: 151:       LCD_CMD(0xD4 + COL-1);
  7851   003500  5006               	movf	LCD_Set_Cursor@COL^0,w,c
  7852   003502  0FD3               	addlw	211
  7853   003504  EC2D  F01C         	call	_LCD_CMD
  7854                           
  7855                           ;lcd.c: 152:       break;
  7856   003508  EF9B  F01A         	goto	l106
  7857   00350C                     l3675:
  7858                           
  7859                           ;lcd.c: 155:       LCD_CMD(0x80 + COL-1);
  7860   00350C  5006               	movf	LCD_Set_Cursor@COL^0,w,c
  7861   00350E  0F7F               	addlw	127
  7862   003510  EC2D  F01C         	call	_LCD_CMD
  7863                           
  7864                           ;lcd.c: 156:   }
  7865   003514  EF9B  F01A         	goto	l106
  7866   003518                     l3677:
  7867   003518  5007               	movf	LCD_Set_Cursor@ROW^0,w,c
  7868                           
  7869                           ; Switch size 1, requested type "simple"
  7870                           ; Number of cases is 3, Range of values is 2 to 4
  7871                           ; switch strategies available:
  7872                           ; Name         Instructions Cycles
  7873                           ; simple_byte           10     6 (average)
  7874                           ;	Chosen strategy is simple_byte
  7875   00351A  0A02               	xorlw	2	; case 2
  7876   00351C  B4D8               	btfsc	status,2,c
  7877   00351E  EF74  F01A         	goto	l3669
  7878   003522  0A01               	xorlw	1	; case 3
  7879   003524  B4D8               	btfsc	status,2,c
  7880   003526  EF7A  F01A         	goto	l3671
  7881   00352A  0A07               	xorlw	7	; case 4
  7882   00352C  B4D8               	btfsc	status,2,c
  7883   00352E  EF80  F01A         	goto	l3673
  7884   003532  EF86  F01A         	goto	l3675
  7885   003536                     l106:
  7886   003536  0012               	return		;funcret
  7887   003538                     __end_of_LCD_Set_Cursor:
  7888                           	callstack 0
  7889                           
  7890 ;; *************** function _LCD_Init *****************
  7891 ;; Defined at:
  7892 ;;		line 80 in file "lcd.c"
  7893 ;; Parameters:    Size  Location     Type
  7894 ;;  I2C_Add         1    wreg     unsigned char 
  7895 ;; Auto vars:     Size  Location     Type
  7896 ;;  I2C_Add         1    6[COMRAM] unsigned char 
  7897 ;; Return value:  Size  Location     Type
  7898 ;;                  1    wreg      void 
  7899 ;; Registers used:
  7900 ;;		wreg, status,2, status,0, cstack
  7901 ;; Tracked objects:
  7902 ;;		On entry : 0/0
  7903 ;;		On exit  : 0/0
  7904 ;;		Unchanged: 0/0
  7905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7906 ;;      Params:         0       0       0       0       0       0       0       0       0
  7907 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7908 ;;      Temps:          1       0       0       0       0       0       0       0       0
  7909 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7910 ;;Total ram usage:        2 bytes
  7911 ;; Hardware stack levels used: 1
  7912 ;; Hardware stack levels required when called: 5
  7913 ;; This function calls:
  7914 ;;		_IO_Expander_Write
  7915 ;;		_LCD_CMD
  7916 ;; This function is called by:
  7917 ;;		_main
  7918 ;; This function uses a non-reentrant model
  7919 ;;
  7920                           
  7921                           	psect	text32
  7922   003098                     __ptext32:
  7923                           	callstack 0
  7924   003098                     _LCD_Init:
  7925                           	callstack 25
  7926                           
  7927                           ;incstack = 0
  7928                           ;LCD_Init@I2C_Add stored from wreg
  7929   003098  6E07               	movwf	LCD_Init@I2C_Add^0,c
  7930   00309A                     
  7931                           ;lcd.c: 80: void LCD_Init(unsigned char I2C_Add);lcd.c: 81: {;lcd.c: 82:   i2c_add = I2C
      +                          _Add;
  7932   00309A  C007  F0D4         	movff	LCD_Init@I2C_Add,_i2c_add
  7933   00309E                     
  7934                           ;lcd.c: 83:   IO_Expander_Write(0x00);
  7935   00309E  0E00               	movlw	0
  7936   0030A0  EC10  F01C         	call	_IO_Expander_Write
  7937   0030A4                     
  7938                           ;lcd.c: 84:   _delay((unsigned long)((30)*(4000000/4000.0)));
  7939   0030A4  0E27               	movlw	39
  7940   0030A6  6E06               	movwf	??_LCD_Init^0,c
  7941   0030A8  0EF5               	movlw	245
  7942   0030AA                     u5627:
  7943   0030AA  2EE8               	decfsz	wreg,f,c
  7944   0030AC  D7FE               	bra	u5627
  7945   0030AE  2E06               	decfsz	??_LCD_Init^0,f,c
  7946   0030B0  D7FC               	bra	u5627
  7947   0030B2  0000               	nop	
  7948                           
  7949                           ;lcd.c: 85:   LCD_CMD(0x03);
  7950   0030B4  0E03               	movlw	3
  7951   0030B6  EC2D  F01C         	call	_LCD_CMD
  7952   0030BA                     
  7953                           ;lcd.c: 86:   _delay((unsigned long)((5)*(4000000/4000.0)));
  7954   0030BA  0E07               	movlw	7
  7955   0030BC  6E06               	movwf	??_LCD_Init^0,c
  7956   0030BE  0E7D               	movlw	125
  7957   0030C0                     u5637:
  7958   0030C0  2EE8               	decfsz	wreg,f,c
  7959   0030C2  D7FE               	bra	u5637
  7960   0030C4  2E06               	decfsz	??_LCD_Init^0,f,c
  7961   0030C6  D7FC               	bra	u5637
  7962   0030C8  0000               	nop	
  7963   0030CA                     
  7964                           ;lcd.c: 87:   LCD_CMD(0x03);
  7965   0030CA  0E03               	movlw	3
  7966   0030CC  EC2D  F01C         	call	_LCD_CMD
  7967                           
  7968                           ;lcd.c: 88:   _delay((unsigned long)((5)*(4000000/4000.0)));
  7969   0030D0  0E07               	movlw	7
  7970   0030D2  6E06               	movwf	??_LCD_Init^0,c
  7971   0030D4  0E7D               	movlw	125
  7972   0030D6                     u5647:
  7973   0030D6  2EE8               	decfsz	wreg,f,c
  7974   0030D8  D7FE               	bra	u5647
  7975   0030DA  2E06               	decfsz	??_LCD_Init^0,f,c
  7976   0030DC  D7FC               	bra	u5647
  7977   0030DE  0000               	nop	
  7978   0030E0                     
  7979                           ;lcd.c: 89:   LCD_CMD(0x03);
  7980   0030E0  0E03               	movlw	3
  7981   0030E2  EC2D  F01C         	call	_LCD_CMD
  7982   0030E6                     
  7983                           ;lcd.c: 90:   _delay((unsigned long)((5)*(4000000/4000.0)));
  7984   0030E6  0E07               	movlw	7
  7985   0030E8  6E06               	movwf	??_LCD_Init^0,c
  7986   0030EA  0E7D               	movlw	125
  7987   0030EC                     u5657:
  7988   0030EC  2EE8               	decfsz	wreg,f,c
  7989   0030EE  D7FE               	bra	u5657
  7990   0030F0  2E06               	decfsz	??_LCD_Init^0,f,c
  7991   0030F2  D7FC               	bra	u5657
  7992   0030F4  0000               	nop	
  7993                           
  7994                           ;lcd.c: 91:   LCD_CMD(0x02);
  7995   0030F6  0E02               	movlw	2
  7996   0030F8  EC2D  F01C         	call	_LCD_CMD
  7997   0030FC                     
  7998                           ;lcd.c: 92:   _delay((unsigned long)((5)*(4000000/4000.0)));
  7999   0030FC  0E07               	movlw	7
  8000   0030FE  6E06               	movwf	??_LCD_Init^0,c
  8001   003100  0E7D               	movlw	125
  8002   003102                     u5667:
  8003   003102  2EE8               	decfsz	wreg,f,c
  8004   003104  D7FE               	bra	u5667
  8005   003106  2E06               	decfsz	??_LCD_Init^0,f,c
  8006   003108  D7FC               	bra	u5667
  8007   00310A  0000               	nop	
  8008   00310C                     
  8009                           ;lcd.c: 93:   LCD_CMD(0x20 | (2 << 2));
  8010   00310C  0E28               	movlw	40
  8011   00310E  EC2D  F01C         	call	_LCD_CMD
  8012                           
  8013                           ;lcd.c: 94:   _delay((unsigned long)((50)*(4000000/4000.0)));
  8014   003112  0E41               	movlw	65
  8015   003114  6E06               	movwf	??_LCD_Init^0,c
  8016   003116  0EEE               	movlw	238
  8017   003118                     u5677:
  8018   003118  2EE8               	decfsz	wreg,f,c
  8019   00311A  D7FE               	bra	u5677
  8020   00311C  2E06               	decfsz	??_LCD_Init^0,f,c
  8021   00311E  D7FC               	bra	u5677
  8022   003120  D000               	nop2	
  8023   003122                     
  8024                           ;lcd.c: 95:   LCD_CMD(0x0C);
  8025   003122  0E0C               	movlw	12
  8026   003124  EC2D  F01C         	call	_LCD_CMD
  8027   003128                     
  8028                           ;lcd.c: 96:   _delay((unsigned long)((50)*(4000000/4000.0)));
  8029   003128  0E41               	movlw	65
  8030   00312A  6E06               	movwf	??_LCD_Init^0,c
  8031   00312C  0EEE               	movlw	238
  8032   00312E                     u5687:
  8033   00312E  2EE8               	decfsz	wreg,f,c
  8034   003130  D7FE               	bra	u5687
  8035   003132  2E06               	decfsz	??_LCD_Init^0,f,c
  8036   003134  D7FC               	bra	u5687
  8037   003136  D000               	nop2	
  8038                           
  8039                           ;lcd.c: 97:   LCD_CMD(0x01);
  8040   003138  0E01               	movlw	1
  8041   00313A  EC2D  F01C         	call	_LCD_CMD
  8042   00313E                     
  8043                           ;lcd.c: 98:   _delay((unsigned long)((50)*(4000000/4000.0)));
  8044   00313E  0E41               	movlw	65
  8045   003140  6E06               	movwf	??_LCD_Init^0,c
  8046   003142  0EEE               	movlw	238
  8047   003144                     u5697:
  8048   003144  2EE8               	decfsz	wreg,f,c
  8049   003146  D7FE               	bra	u5697
  8050   003148  2E06               	decfsz	??_LCD_Init^0,f,c
  8051   00314A  D7FC               	bra	u5697
  8052   00314C  D000               	nop2	
  8053   00314E                     
  8054                           ;lcd.c: 99:   LCD_CMD(0x04 | 0x02);
  8055   00314E  0E06               	movlw	6
  8056   003150  EC2D  F01C         	call	_LCD_CMD
  8057                           
  8058                           ;lcd.c: 100:   _delay((unsigned long)((50)*(4000000/4000.0)));
  8059   003154  0E41               	movlw	65
  8060   003156  6E06               	movwf	??_LCD_Init^0,c
  8061   003158  0EEE               	movlw	238
  8062   00315A                     u5707:
  8063   00315A  2EE8               	decfsz	wreg,f,c
  8064   00315C  D7FE               	bra	u5707
  8065   00315E  2E06               	decfsz	??_LCD_Init^0,f,c
  8066   003160  D7FC               	bra	u5707
  8067   003162  D000               	nop2	
  8068   003164  0012               	return		;funcret
  8069   003166                     __end_of_LCD_Init:
  8070                           	callstack 0
  8071                           
  8072 ;; *************** function _LCD_Clear *****************
  8073 ;; Defined at:
  8074 ;;		line 183 in file "lcd.c"
  8075 ;; Parameters:    Size  Location     Type
  8076 ;;		None
  8077 ;; Auto vars:     Size  Location     Type
  8078 ;;		None
  8079 ;; Return value:  Size  Location     Type
  8080 ;;                  1    wreg      void 
  8081 ;; Registers used:
  8082 ;;		wreg, status,2, status,0, cstack
  8083 ;; Tracked objects:
  8084 ;;		On entry : 0/0
  8085 ;;		On exit  : 0/0
  8086 ;;		Unchanged: 0/0
  8087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8088 ;;      Params:         0       0       0       0       0       0       0       0       0
  8089 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8090 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8091 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8092 ;;Total ram usage:        0 bytes
  8093 ;; Hardware stack levels used: 1
  8094 ;; Hardware stack levels required when called: 5
  8095 ;; This function calls:
  8096 ;;		_LCD_CMD
  8097 ;; This function is called by:
  8098 ;;		_main
  8099 ;; This function uses a non-reentrant model
  8100 ;;
  8101                           
  8102                           	psect	text33
  8103   0038BC                     __ptext33:
  8104                           	callstack 0
  8105   0038BC                     _LCD_Clear:
  8106                           	callstack 25
  8107   0038BC                     
  8108                           ;lcd.c: 185:   LCD_CMD(0x01);
  8109   0038BC  0E01               	movlw	1
  8110   0038BE  EC2D  F01C         	call	_LCD_CMD
  8111   0038C2                     
  8112                           ;lcd.c: 186:   _delay((unsigned long)((40)*(4000000/4000000.0)));
  8113   0038C2  0E0D               	movlw	13
  8114   0038C4                     u5717:
  8115   0038C4  2EE8               	decfsz	wreg,f,c
  8116   0038C6  D7FE               	bra	u5717
  8117   0038C8  0000               	nop	
  8118   0038CA  0012               	return		;funcret
  8119   0038CC                     __end_of_LCD_Clear:
  8120                           	callstack 0
  8121                           
  8122 ;; *************** function _LCD_CMD *****************
  8123 ;; Defined at:
  8124 ;;		line 120 in file "lcd.c"
  8125 ;; Parameters:    Size  Location     Type
  8126 ;;  CMD             1    wreg     unsigned char 
  8127 ;; Auto vars:     Size  Location     Type
  8128 ;;  CMD             1    4[COMRAM] unsigned char 
  8129 ;; Return value:  Size  Location     Type
  8130 ;;                  1    wreg      void 
  8131 ;; Registers used:
  8132 ;;		wreg, status,2, status,0, cstack
  8133 ;; Tracked objects:
  8134 ;;		On entry : 0/0
  8135 ;;		On exit  : 0/0
  8136 ;;		Unchanged: 0/0
  8137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8138 ;;      Params:         0       0       0       0       0       0       0       0       0
  8139 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8140 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8141 ;;      Totals:         1       0       0       0       0       0       0       0       0
  8142 ;;Total ram usage:        1 bytes
  8143 ;; Hardware stack levels used: 1
  8144 ;; Hardware stack levels required when called: 4
  8145 ;; This function calls:
  8146 ;;		_LCD_Write_4Bit
  8147 ;; This function is called by:
  8148 ;;		_LCD_Init
  8149 ;;		_LCD_Set_Cursor
  8150 ;;		_LCD_Clear
  8151 ;;		_LCD_SL
  8152 ;;		_LCD_SR
  8153 ;; This function uses a non-reentrant model
  8154 ;;
  8155                           
  8156                           	psect	text34
  8157   00385A                     __ptext34:
  8158                           	callstack 0
  8159   00385A                     _LCD_CMD:
  8160                           	callstack 24
  8161                           
  8162                           ;incstack = 0
  8163                           ;LCD_CMD@CMD stored from wreg
  8164   00385A  6E05               	movwf	LCD_CMD@CMD^0,c
  8165   00385C                     
  8166                           ;lcd.c: 120: void LCD_CMD(unsigned char CMD);lcd.c: 121: {;lcd.c: 122:   RS = 0;
  8167   00385C  0E00               	movlw	0
  8168   00385E  0100               	movlb	0	; () banked
  8169   003860  6FD5               	movwf	_RS& (0+255),b
  8170   003862                     
  8171                           ; BSR set to: 0
  8172                           ;lcd.c: 123:   LCD_Write_4Bit(CMD & 0xF0);
  8173   003862  5005               	movf	LCD_CMD@CMD^0,w,c
  8174   003864  0BF0               	andlw	240
  8175   003866  ECFF  F01B         	call	_LCD_Write_4Bit
  8176   00386A                     
  8177                           ;lcd.c: 124:   LCD_Write_4Bit((CMD << 4) & 0xF0);
  8178   00386A  3805               	swapf	LCD_CMD@CMD^0,w,c
  8179   00386C  0BF0               	andlw	240
  8180   00386E  0BF0               	andlw	240
  8181   003870  ECFF  F01B         	call	_LCD_Write_4Bit
  8182   003874  0012               	return		;funcret
  8183   003876                     __end_of_LCD_CMD:
  8184                           	callstack 0
  8185                           
  8186 ;; *************** function _LCD_Write_4Bit *****************
  8187 ;; Defined at:
  8188 ;;		line 111 in file "lcd.c"
  8189 ;; Parameters:    Size  Location     Type
  8190 ;;  Nibble          1    wreg     unsigned char 
  8191 ;; Auto vars:     Size  Location     Type
  8192 ;;  Nibble          1    3[COMRAM] unsigned char 
  8193 ;; Return value:  Size  Location     Type
  8194 ;;                  1    wreg      void 
  8195 ;; Registers used:
  8196 ;;		wreg, status,2, status,0, cstack
  8197 ;; Tracked objects:
  8198 ;;		On entry : 0/0
  8199 ;;		On exit  : 0/0
  8200 ;;		Unchanged: 0/0
  8201 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8202 ;;      Params:         0       0       0       0       0       0       0       0       0
  8203 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8204 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8205 ;;      Totals:         1       0       0       0       0       0       0       0       0
  8206 ;;Total ram usage:        1 bytes
  8207 ;; Hardware stack levels used: 1
  8208 ;; Hardware stack levels required when called: 3
  8209 ;; This function calls:
  8210 ;;		_IO_Expander_Write
  8211 ;; This function is called by:
  8212 ;;		_LCD_CMD
  8213 ;;		_LCD_Write_Char
  8214 ;; This function uses a non-reentrant model
  8215 ;;
  8216                           
  8217                           	psect	text35
  8218   0037FE                     __ptext35:
  8219                           	callstack 0
  8220   0037FE                     _LCD_Write_4Bit:
  8221                           	callstack 24
  8222                           
  8223                           ;incstack = 0
  8224                           ;LCD_Write_4Bit@Nibble stored from wreg
  8225   0037FE  6E04               	movwf	LCD_Write_4Bit@Nibble^0,c
  8226   003800                     
  8227                           ;lcd.c: 111: void LCD_Write_4Bit(unsigned char Nibble);lcd.c: 112: {;lcd.c: 114:   Nibbl
      +                          e |= RS;
  8228   003800  0100               	movlb	0	; () banked
  8229   003802  51D5               	movf	_RS& (0+255),w,b
  8230   003804  1204               	iorwf	LCD_Write_4Bit@Nibble^0,f,c
  8231   003806                     
  8232                           ; BSR set to: 0
  8233                           ;lcd.c: 115:   IO_Expander_Write(Nibble | 0x04);
  8234   003806  5004               	movf	LCD_Write_4Bit@Nibble^0,w,c
  8235   003808  0904               	iorlw	4
  8236   00380A  EC10  F01C         	call	_IO_Expander_Write
  8237   00380E                     
  8238                           ;lcd.c: 116:   IO_Expander_Write(Nibble & 0xFB);
  8239   00380E  5004               	movf	LCD_Write_4Bit@Nibble^0,w,c
  8240   003810  0BFB               	andlw	251
  8241   003812  EC10  F01C         	call	_IO_Expander_Write
  8242   003816                     
  8243                           ;lcd.c: 117:   _delay((unsigned long)((50)*(4000000/4000000.0)));
  8244   003816  0E10               	movlw	16
  8245   003818                     u5727:
  8246   003818  2EE8               	decfsz	wreg,f,c
  8247   00381A  D7FE               	bra	u5727
  8248   00381C  D000               	nop2	
  8249   00381E  0012               	return		;funcret
  8250   003820                     __end_of_LCD_Write_4Bit:
  8251                           	callstack 0
  8252                           
  8253 ;; *************** function _IO_Expander_Write *****************
  8254 ;; Defined at:
  8255 ;;		line 103 in file "lcd.c"
  8256 ;; Parameters:    Size  Location     Type
  8257 ;;  Data            1    wreg     unsigned char 
  8258 ;; Auto vars:     Size  Location     Type
  8259 ;;  Data            1    2[COMRAM] unsigned char 
  8260 ;; Return value:  Size  Location     Type
  8261 ;;                  1    wreg      void 
  8262 ;; Registers used:
  8263 ;;		wreg, status,2, status,0, cstack
  8264 ;; Tracked objects:
  8265 ;;		On entry : 0/0
  8266 ;;		On exit  : 0/0
  8267 ;;		Unchanged: 0/0
  8268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8269 ;;      Params:         0       0       0       0       0       0       0       0       0
  8270 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8271 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8272 ;;      Totals:         1       0       0       0       0       0       0       0       0
  8273 ;;Total ram usage:        1 bytes
  8274 ;; Hardware stack levels used: 1
  8275 ;; Hardware stack levels required when called: 2
  8276 ;; This function calls:
  8277 ;;		_I2C_Master_Start
  8278 ;;		_I2C_Master_Stop
  8279 ;;		_I2C_Master_Write
  8280 ;; This function is called by:
  8281 ;;		_LCD_Init
  8282 ;;		_LCD_Write_4Bit
  8283 ;;		_Backlight
  8284 ;;		_noBacklight
  8285 ;; This function uses a non-reentrant model
  8286 ;;
  8287                           
  8288                           	psect	text36
  8289   003820                     __ptext36:
  8290                           	callstack 0
  8291   003820                     _IO_Expander_Write:
  8292                           	callstack 24
  8293                           
  8294                           ;incstack = 0
  8295                           ;IO_Expander_Write@Data stored from wreg
  8296   003820  6E03               	movwf	IO_Expander_Write@Data^0,c
  8297   003822                     
  8298                           ;lcd.c: 103: void IO_Expander_Write(unsigned char Data);lcd.c: 104: {;lcd.c: 105:   I2C_
      +                          Master_Start();
  8299   003822  EC6A  F01C         	call	_I2C_Master_Start	;wreg free
  8300                           
  8301                           ;lcd.c: 106:   I2C_Master_Write(i2c_add);
  8302   003826  0100               	movlb	0	; () banked
  8303   003828  51D4               	movf	_i2c_add& (0+255),w,b
  8304   00382A  EC3B  F01C         	call	_I2C_Master_Write
  8305                           
  8306                           ;lcd.c: 107:   I2C_Master_Write(Data | BackLight_State);
  8307   00382E  5003               	movf	IO_Expander_Write@Data^0,w,c
  8308   003830  0100               	movlb	0	; () banked
  8309   003832  11F7               	iorwf	_BackLight_State& (0+255),w,b
  8310   003834  EC3B  F01C         	call	_I2C_Master_Write
  8311                           
  8312                           ;lcd.c: 108:   I2C_Master_Stop();
  8313   003838  EC66  F01C         	call	_I2C_Master_Stop	;wreg free
  8314   00383C  0012               	return		;funcret
  8315   00383E                     __end_of_IO_Expander_Write:
  8316                           	callstack 0
  8317                           
  8318 ;; *************** function _I2C_Master_Write *****************
  8319 ;; Defined at:
  8320 ;;		line 56 in file "lcd.c"
  8321 ;; Parameters:    Size  Location     Type
  8322 ;;  data            1    wreg     unsigned char 
  8323 ;; Auto vars:     Size  Location     Type
  8324 ;;  data            1    1[COMRAM] unsigned char 
  8325 ;; Return value:  Size  Location     Type
  8326 ;;                  1    wreg      unsigned char 
  8327 ;; Registers used:
  8328 ;;		wreg, status,2, status,0, cstack
  8329 ;; Tracked objects:
  8330 ;;		On entry : 0/0
  8331 ;;		On exit  : 0/0
  8332 ;;		Unchanged: 0/0
  8333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8334 ;;      Params:         0       0       0       0       0       0       0       0       0
  8335 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8336 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8337 ;;      Totals:         1       0       0       0       0       0       0       0       0
  8338 ;;Total ram usage:        1 bytes
  8339 ;; Hardware stack levels used: 1
  8340 ;; Hardware stack levels required when called: 1
  8341 ;; This function calls:
  8342 ;;		_I2C_Master_Wait
  8343 ;; This function is called by:
  8344 ;;		_IO_Expander_Write
  8345 ;; This function uses a non-reentrant model
  8346 ;;
  8347                           
  8348                           	psect	text37
  8349   003876                     __ptext37:
  8350                           	callstack 0
  8351   003876                     _I2C_Master_Write:
  8352                           	callstack 24
  8353                           
  8354                           ;incstack = 0
  8355                           ;I2C_Master_Write@data stored from wreg
  8356   003876  6E02               	movwf	I2C_Master_Write@data^0,c
  8357   003878                     
  8358                           ;lcd.c: 56: unsigned char I2C_Master_Write(unsigned char data);lcd.c: 57: {;lcd.c: 58:  
      +                             I2C_Master_Wait();
  8359   003878  ECEC  F01B         	call	_I2C_Master_Wait	;wreg free
  8360   00387C                     
  8361                           ;lcd.c: 59:     SSPBUF = data;
  8362   00387C  C002  FFC9         	movff	I2C_Master_Write@data,4041	;volatile
  8363   003880                     l67:
  8364   003880  A69E               	btfss	3998,3,c	;volatile
  8365   003882  EF45  F01C         	goto	u2451
  8366   003886  EF47  F01C         	goto	u2450
  8367   00388A                     u2451:
  8368   00388A  EF40  F01C         	goto	l67
  8369   00388E                     u2450:
  8370   00388E                     
  8371                           ;lcd.c: 61:  SSPIF = 0;
  8372   00388E  969E               	bcf	3998,3,c	;volatile
  8373   003890  0012               	return		;funcret
  8374   003892                     __end_of_I2C_Master_Write:
  8375                           	callstack 0
  8376                           
  8377 ;; *************** function _I2C_Master_Stop *****************
  8378 ;; Defined at:
  8379 ;;		line 36 in file "lcd.c"
  8380 ;; Parameters:    Size  Location     Type
  8381 ;;		None
  8382 ;; Auto vars:     Size  Location     Type
  8383 ;;		None
  8384 ;; Return value:  Size  Location     Type
  8385 ;;                  1    wreg      void 
  8386 ;; Registers used:
  8387 ;;		wreg, status,2, status,0, cstack
  8388 ;; Tracked objects:
  8389 ;;		On entry : 0/0
  8390 ;;		On exit  : 0/0
  8391 ;;		Unchanged: 0/0
  8392 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8393 ;;      Params:         0       0       0       0       0       0       0       0       0
  8394 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8395 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8396 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8397 ;;Total ram usage:        0 bytes
  8398 ;; Hardware stack levels used: 1
  8399 ;; Hardware stack levels required when called: 1
  8400 ;; This function calls:
  8401 ;;		_I2C_Master_Wait
  8402 ;; This function is called by:
  8403 ;;		_IO_Expander_Write
  8404 ;; This function uses a non-reentrant model
  8405 ;;
  8406                           
  8407                           	psect	text38
  8408   0038CC                     __ptext38:
  8409                           	callstack 0
  8410   0038CC                     _I2C_Master_Stop:
  8411                           	callstack 24
  8412   0038CC                     
  8413                           ;lcd.c: 38:     I2C_Master_Wait();
  8414   0038CC  ECEC  F01B         	call	_I2C_Master_Wait	;wreg free
  8415   0038D0                     
  8416                           ;lcd.c: 39:     PEN = 1;
  8417   0038D0  84C5               	bsf	4037,2,c	;volatile
  8418   0038D2  0012               	return		;funcret
  8419   0038D4                     __end_of_I2C_Master_Stop:
  8420                           	callstack 0
  8421                           
  8422 ;; *************** function _I2C_Master_Start *****************
  8423 ;; Defined at:
  8424 ;;		line 24 in file "lcd.c"
  8425 ;; Parameters:    Size  Location     Type
  8426 ;;		None
  8427 ;; Auto vars:     Size  Location     Type
  8428 ;;		None
  8429 ;; Return value:  Size  Location     Type
  8430 ;;                  1    wreg      void 
  8431 ;; Registers used:
  8432 ;;		wreg, status,2, status,0, cstack
  8433 ;; Tracked objects:
  8434 ;;		On entry : 0/0
  8435 ;;		On exit  : 0/0
  8436 ;;		Unchanged: 0/0
  8437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8438 ;;      Params:         0       0       0       0       0       0       0       0       0
  8439 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8440 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8441 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8442 ;;Total ram usage:        0 bytes
  8443 ;; Hardware stack levels used: 1
  8444 ;; Hardware stack levels required when called: 1
  8445 ;; This function calls:
  8446 ;;		_I2C_Master_Wait
  8447 ;; This function is called by:
  8448 ;;		_IO_Expander_Write
  8449 ;; This function uses a non-reentrant model
  8450 ;;
  8451                           
  8452                           	psect	text39
  8453   0038D4                     __ptext39:
  8454                           	callstack 0
  8455   0038D4                     _I2C_Master_Start:
  8456                           	callstack 24
  8457   0038D4                     
  8458                           ;lcd.c: 26:     I2C_Master_Wait();
  8459   0038D4  ECEC  F01B         	call	_I2C_Master_Wait	;wreg free
  8460   0038D8                     
  8461                           ;lcd.c: 27:     SEN = 1;
  8462   0038D8  80C5               	bsf	4037,0,c	;volatile
  8463   0038DA  0012               	return		;funcret
  8464   0038DC                     __end_of_I2C_Master_Start:
  8465                           	callstack 0
  8466                           
  8467 ;; *************** function _I2C_Master_Wait *****************
  8468 ;; Defined at:
  8469 ;;		line 19 in file "lcd.c"
  8470 ;; Parameters:    Size  Location     Type
  8471 ;;		None
  8472 ;; Auto vars:     Size  Location     Type
  8473 ;;		None
  8474 ;; Return value:  Size  Location     Type
  8475 ;;                  1    wreg      void 
  8476 ;; Registers used:
  8477 ;;		wreg, status,2, status,0
  8478 ;; Tracked objects:
  8479 ;;		On entry : 0/0
  8480 ;;		On exit  : 0/0
  8481 ;;		Unchanged: 0/0
  8482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8483 ;;      Params:         0       0       0       0       0       0       0       0       0
  8484 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8485 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8486 ;;      Totals:         1       0       0       0       0       0       0       0       0
  8487 ;;Total ram usage:        1 bytes
  8488 ;; Hardware stack levels used: 1
  8489 ;; This function calls:
  8490 ;;		Nothing
  8491 ;; This function is called by:
  8492 ;;		_I2C_Master_Start
  8493 ;;		_I2C_Master_Stop
  8494 ;;		_I2C_Master_Write
  8495 ;;		_I2C_Master_RepeatedStart
  8496 ;;		_I2C_ACK
  8497 ;;		_I2C_NACK
  8498 ;;		_I2C_Read_Byte
  8499 ;; This function uses a non-reentrant model
  8500 ;;
  8501                           
  8502                           	psect	text40
  8503   0037D8                     __ptext40:
  8504                           	callstack 0
  8505   0037D8                     _I2C_Master_Wait:
  8506                           	callstack 24
  8507   0037D8                     l46:
  8508   0037D8  B4C7               	btfsc	199,2,c	;volatile
  8509   0037DA  EFF1  F01B         	goto	u2031
  8510   0037DE  EFF3  F01B         	goto	u2030
  8511   0037E2                     u2031:
  8512   0037E2  EFEC  F01B         	goto	l46
  8513   0037E6                     u2030:
  8514   0037E6  CFC5 F001          	movff	4037,??_I2C_Master_Wait	;volatile
  8515   0037EA  0E1F               	movlw	31
  8516   0037EC  1601               	andwf	??_I2C_Master_Wait^0,f,c
  8517   0037EE  A4D8               	btfss	status,2,c
  8518   0037F0  EFFC  F01B         	goto	u2041
  8519   0037F4  EFFE  F01B         	goto	u2040
  8520   0037F8                     u2041:
  8521   0037F8  EFEC  F01B         	goto	l46
  8522   0037FC                     u2040:
  8523   0037FC  0012               	return		;funcret
  8524   0037FE                     __end_of_I2C_Master_Wait:
  8525                           	callstack 0
  8526                           
  8527 ;; *************** function _I2C_Master_Init *****************
  8528 ;; Defined at:
  8529 ;;		line 9 in file "lcd.c"
  8530 ;; Parameters:    Size  Location     Type
  8531 ;;		None
  8532 ;; Auto vars:     Size  Location     Type
  8533 ;;		None
  8534 ;; Return value:  Size  Location     Type
  8535 ;;                  1    wreg      void 
  8536 ;; Registers used:
  8537 ;;		wreg, status,2
  8538 ;; Tracked objects:
  8539 ;;		On entry : 0/0
  8540 ;;		On exit  : 0/0
  8541 ;;		Unchanged: 0/0
  8542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8543 ;;      Params:         0       0       0       0       0       0       0       0       0
  8544 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8545 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8546 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8547 ;;Total ram usage:        0 bytes
  8548 ;; Hardware stack levels used: 1
  8549 ;; This function calls:
  8550 ;;		Nothing
  8551 ;; This function is called by:
  8552 ;;		_main
  8553 ;; This function uses a non-reentrant model
  8554 ;;
  8555                           
  8556                           	psect	text41
  8557   003892                     __ptext41:
  8558                           	callstack 0
  8559   003892                     _I2C_Master_Init:
  8560                           	callstack 30
  8561   003892                     
  8562                           ;lcd.c: 11:   SSPCON1 = 0x28;
  8563   003892  0E28               	movlw	40
  8564   003894  6EC6               	movwf	198,c	;volatile
  8565                           
  8566                           ;lcd.c: 12:   SSPCON2 = 0x00;
  8567   003896  0E00               	movlw	0
  8568   003898  6EC5               	movwf	197,c	;volatile
  8569                           
  8570                           ;lcd.c: 13:   SSPSTAT = 0x00;
  8571   00389A  0E00               	movlw	0
  8572   00389C  6EC7               	movwf	199,c	;volatile
  8573                           
  8574                           ;lcd.c: 14:   SSPADD = ((4000000/4)/100000) - 1;
  8575   00389E  0E09               	movlw	9
  8576   0038A0  6EC8               	movwf	200,c	;volatile
  8577   0038A2                     
  8578                           ;lcd.c: 15:   TRISBbits.RB1 = 1;
  8579   0038A2  8293               	bsf	147,1,c	;volatile
  8580   0038A4                     
  8581                           ;lcd.c: 16:   TRISBbits.RB0 = 1;
  8582   0038A4  8093               	bsf	147,0,c	;volatile
  8583   0038A6  0012               	return		;funcret
  8584   0038A8                     __end_of_I2C_Master_Init:
  8585                           	callstack 0
  8586                           
  8587 ;; *************** function _ADC_Init *****************
  8588 ;; Defined at:
  8589 ;;		line 21 in file "newmain1.c"
  8590 ;; Parameters:    Size  Location     Type
  8591 ;;		None
  8592 ;; Auto vars:     Size  Location     Type
  8593 ;;		None
  8594 ;; Return value:  Size  Location     Type
  8595 ;;                  1    wreg      void 
  8596 ;; Registers used:
  8597 ;;		wreg, status,2
  8598 ;; Tracked objects:
  8599 ;;		On entry : 0/0
  8600 ;;		On exit  : 0/0
  8601 ;;		Unchanged: 0/0
  8602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8603 ;;      Params:         0       0       0       0       0       0       0       0       0
  8604 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8605 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8606 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8607 ;;Total ram usage:        0 bytes
  8608 ;; Hardware stack levels used: 1
  8609 ;; This function calls:
  8610 ;;		Nothing
  8611 ;; This function is called by:
  8612 ;;		_main
  8613 ;; This function uses a non-reentrant model
  8614 ;;
  8615                           
  8616                           	psect	text42
  8617   0038A8                     __ptext42:
  8618                           	callstack 0
  8619   0038A8                     _ADC_Init:
  8620                           	callstack 30
  8621   0038A8                     
  8622                           ;newmain1.c: 23:     TRISA = 0xff;
  8623   0038A8  6892               	setf	146,c	;volatile
  8624   0038AA                     
  8625                           ;newmain1.c: 24:     ADCON1=0b11001101;
  8626   0038AA  0ECD               	movlw	205
  8627   0038AC  6EC1               	movwf	193,c	;volatile
  8628                           
  8629                           ;newmain1.c: 25:     ADCON2 = 0x92;
  8630   0038AE  0E92               	movlw	146
  8631   0038B0  6EC0               	movwf	192,c	;volatile
  8632                           
  8633                           ;newmain1.c: 26:     ADRESH=0;
  8634   0038B2  0E00               	movlw	0
  8635   0038B4  6EC4               	movwf	196,c	;volatile
  8636                           
  8637                           ;newmain1.c: 27:     ADRESL=0;
  8638   0038B6  0E00               	movlw	0
  8639   0038B8  6EC3               	movwf	195,c	;volatile
  8640   0038BA  0012               	return		;funcret
  8641   0038BC                     __end_of_ADC_Init:
  8642                           	callstack 0
  8643                           
  8644                           	psect	rparam
  8645   000000                     
  8646                           	psect	config
  8647                           
  8648                           ;Config register CONFIG1L @ 0x300000
  8649                           ;	PLL Prescaler Selection bits
  8650                           ;	PLLDIV = 2, Divide by 2 (8 MHz oscillator input)
  8651                           ;	System Clock Postscaler Selection bits
  8652                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  8653                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  8654                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  8655   300000                     	org	3145728
  8656   300000  01                 	db	1
  8657                           
  8658                           ;Config register CONFIG1H @ 0x300001
  8659                           ;	Oscillator Selection bits
  8660                           ;	FOSC = XT_XT, XT oscillator (XT)
  8661                           ;	Fail-Safe Clock Monitor Enable bit
  8662                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  8663                           ;	Internal/External Oscillator Switchover bit
  8664                           ;	IESO = OFF, Oscillator Switchover mode disabled
  8665   300001                     	org	3145729
  8666   300001  00                 	db	0
  8667                           
  8668                           ;Config register CONFIG2L @ 0x300002
  8669                           ;	Power-up Timer Enable bit
  8670                           ;	PWRT = OFF, PWRT disabled
  8671                           ;	Brown-out Reset Enable bits
  8672                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  8673                           ;	Brown-out Reset Voltage bits
  8674                           ;	BORV = 3, Minimum setting 2.05V
  8675                           ;	USB Voltage Regulator Enable bit
  8676                           ;	VREGEN = OFF, USB voltage regulator disabled
  8677   300002                     	org	3145730
  8678   300002  19                 	db	25
  8679                           
  8680                           ;Config register CONFIG2H @ 0x300003
  8681                           ;	Watchdog Timer Enable bit
  8682                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  8683                           ;	Watchdog Timer Postscale Select bits
  8684                           ;	WDTPS = 32768, 1:32768
  8685   300003                     	org	3145731
  8686   300003  1E                 	db	30
  8687                           
  8688                           ; Padding undefined space
  8689   300004                     	org	3145732
  8690   300004  FF                 	db	255
  8691                           
  8692                           ;Config register CONFIG3H @ 0x300005
  8693                           ;	CCP2 MUX bit
  8694                           ;	CCP2MX = OFF, CCP2 input/output is multiplexed with RB3
  8695                           ;	PORTB A/D Enable bit
  8696                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  8697                           ;	Low-Power Timer 1 Oscillator Enable bit
  8698                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  8699                           ;	MCLR Pin Enable bit
  8700                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  8701   300005                     	org	3145733
  8702   300005  80                 	db	128
  8703                           
  8704                           ;Config register CONFIG4L @ 0x300006
  8705                           ;	Stack Full/Underflow Reset Enable bit
  8706                           ;	STVREN = ON, Stack full/underflow will cause Reset
  8707                           ;	Single-Supply ICSP Enable bit
  8708                           ;	LVP = OFF, Single-Supply ICSP disabled
  8709                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  8710                           ;	ICPRT = OFF, ICPORT disabled
  8711                           ;	Extended Instruction Set Enable bit
  8712                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  8713                           ;	Background Debugger Enable bit
  8714                           ;	DEBUG = 0x1, unprogrammed default
  8715   300006                     	org	3145734
  8716   300006  81                 	db	129
  8717                           
  8718                           ; Padding undefined space
  8719   300007                     	org	3145735
  8720   300007  FF                 	db	255
  8721                           
  8722                           ;Config register CONFIG5L @ 0x300008
  8723                           ;	Code Protection bit
  8724                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  8725                           ;	Code Protection bit
  8726                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  8727                           ;	Code Protection bit
  8728                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  8729                           ;	Code Protection bit
  8730                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  8731   300008                     	org	3145736
  8732   300008  0F                 	db	15
  8733                           
  8734                           ;Config register CONFIG5H @ 0x300009
  8735                           ;	Boot Block Code Protection bit
  8736                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  8737                           ;	Data EEPROM Code Protection bit
  8738                           ;	CPD = OFF, Data EEPROM is not code-protected
  8739   300009                     	org	3145737
  8740   300009  C0                 	db	192
  8741                           
  8742                           ;Config register CONFIG6L @ 0x30000A
  8743                           ;	Write Protection bit
  8744                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  8745                           ;	Write Protection bit
  8746                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  8747                           ;	Write Protection bit
  8748                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  8749                           ;	Write Protection bit
  8750                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  8751   30000A                     	org	3145738
  8752   30000A  0F                 	db	15
  8753                           
  8754                           ;Config register CONFIG6H @ 0x30000B
  8755                           ;	Configuration Register Write Protection bit
  8756                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  8757                           ;	Boot Block Write Protection bit
  8758                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  8759                           ;	Data EEPROM Write Protection bit
  8760                           ;	WRTD = OFF, Data EEPROM is not write-protected
  8761   30000B                     	org	3145739
  8762   30000B  E0                 	db	224
  8763                           
  8764                           ;Config register CONFIG7L @ 0x30000C
  8765                           ;	Table Read Protection bit
  8766                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  8767                           ;	Table Read Protection bit
  8768                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  8769                           ;	Table Read Protection bit
  8770                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  8771                           ;	Table Read Protection bit
  8772                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  8773   30000C                     	org	3145740
  8774   30000C  0F                 	db	15
  8775                           
  8776                           ;Config register CONFIG7H @ 0x30000D
  8777                           ;	Boot Block Table Read Protection bit
  8778                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  8779   30000D                     	org	3145741
  8780   30000D  40                 	db	64
  8781                           tosu	equ	0xFFF
  8782                           tosh	equ	0xFFE
  8783                           tosl	equ	0xFFD
  8784                           stkptr	equ	0xFFC
  8785                           pclatu	equ	0xFFB
  8786                           pclath	equ	0xFFA
  8787                           pcl	equ	0xFF9
  8788                           tblptru	equ	0xFF8
  8789                           tblptrh	equ	0xFF7
  8790                           tblptrl	equ	0xFF6
  8791                           tablat	equ	0xFF5
  8792                           prodh	equ	0xFF4
  8793                           prodl	equ	0xFF3
  8794                           indf0	equ	0xFEF
  8795                           postinc0	equ	0xFEE
  8796                           postdec0	equ	0xFED
  8797                           preinc0	equ	0xFEC
  8798                           plusw0	equ	0xFEB
  8799                           fsr0h	equ	0xFEA
  8800                           fsr0l	equ	0xFE9
  8801                           wreg	equ	0xFE8
  8802                           indf1	equ	0xFE7
  8803                           postinc1	equ	0xFE6
  8804                           postdec1	equ	0xFE5
  8805                           preinc1	equ	0xFE4
  8806                           plusw1	equ	0xFE3
  8807                           fsr1h	equ	0xFE2
  8808                           fsr1l	equ	0xFE1
  8809                           bsr	equ	0xFE0
  8810                           indf2	equ	0xFDF
  8811                           postinc2	equ	0xFDE
  8812                           postdec2	equ	0xFDD
  8813                           preinc2	equ	0xFDC
  8814                           plusw2	equ	0xFDB
  8815                           fsr2h	equ	0xFDA
  8816                           fsr2l	equ	0xFD9
  8817                           status	equ	0xFD8

Data Sizes:
    Strings     50
    Constant    24
    Data        2
    BSS         173
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160     89     152
    BANK1           256      0     112
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    efgtoa@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    LCD_Write_String@Str	PTR unsigned char  size(2) Largest target is 32
		 -> TempinSTR(BANK0[32]), TempoutSTR(BANK1[32]), 

    line1	PTR unsigned char  size(1) Largest target is 13
		 -> STR_1(CODE[13]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@d1	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s1	PTR const void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(BANK0[1]), 

    S738$buffer	PTR unsigned char  size(2) Largest target is 0

    S738$source	PTR const unsigned char  size(2) Largest target is 0

    sp__memcpy	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 15
		 -> STR_2(CODE[14]), STR_3(CODE[15]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 32
		 -> TempinSTR(BANK0[32]), TempoutSTR(BANK1[32]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(1) Largest target is 4
		 -> STR_4(CODE[4]), STR_7(CODE[4]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 15
		 -> STR_2(CODE[14]), STR_3(CODE[15]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(BANK0[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 15
		 -> STR_2(CODE[14]), STR_3(CODE[15]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 15
		 -> STR_2(CODE[14]), STR_3(CODE[15]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 


Critical Paths under _main in COMRAM

    _termistorin->_logf
    _logf->___fldiv
    ___xxtofl->___aldiv
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _read_prec_or_width->___wmul
    _efgtoa->_floorf
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    ___flsub->___fladd
    ___fladd->___flmul
    ___flge->___flmul
    ___fldiv->___fladd
    _LCD_Write_String->_LCD_Write_Char
    _LCD_Write_Char->_LCD_Write_4Bit
    _LCD_Set_Cursor->_LCD_CMD
    _LCD_Init->_LCD_CMD
    _LCD_Clear->_LCD_CMD
    _LCD_CMD->_LCD_Write_4Bit
    _LCD_Write_4Bit->_IO_Expander_Write
    _IO_Expander_Write->_I2C_Master_Write
    _I2C_Master_Write->_I2C_Master_Wait
    _I2C_Master_Stop->_I2C_Master_Wait
    _I2C_Master_Start->_I2C_Master_Wait

Critical Paths under _main in BANK0

    _main->_menu
    _menu->_sprintf
    _termistorin->_logf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   82439
                                             87 BANK0      2     2      0
                           _ADC_Init
                    _I2C_Master_Init
                          _LCD_Clear
                           _LCD_Init
                               _menu
 ---------------------------------------------------------------------------------
 (1) _menu                                                 8     8      0   82107
                                             79 BANK0      8     8      0
                     _LCD_Set_Cursor
                   _LCD_Write_String
                            _sprintf
                        _termistorin
 ---------------------------------------------------------------------------------
 (2) _termistorin                                         20    16      4   42415
                                             76 COMRAM     4     0      4
                                             58 BANK0     16    16      0
                            ___aldiv
                            ___fladd
                            ___fldiv
                            ___flmul
                           ___xxtofl
                               _logf
 ---------------------------------------------------------------------------------
 (3) _logf                                                68    64      4   24906
                                             66 COMRAM    10     6      4
                                              0 BANK0     58    58      0
                            ___aldiv (ARG)
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4     550
                                             14 COMRAM    14    10      4
                            ___aldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             14     6      8     604
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             24    15      9   38786
                                             57 BANK0     22    13      9
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             4     1      3   38102
                                             53 BANK0      4     1      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           11     8      3   37605
                                             94 COMRAM     1     1      0
                                             44 BANK0      9     6      3
                             _efgtoa
                              _fputc
                 _read_prec_or_width
 ---------------------------------------------------------------------------------
 (5) _read_prec_or_width                                   5     3      2     852
                                              6 COMRAM     5     3      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     412
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) _efgtoa                                              53    47      6   34554
                                             86 COMRAM     8     2      6
                                              0 BANK0     44    44      0
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (6) _strcpy                                               6     3      3     463
                                              0 COMRAM     6     3      3
 ---------------------------------------------------------------------------------
 (6) _pad                                                  8     3      5    3399
                                             14 COMRAM     8     3      5
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (7) _fputs                                                6     3      3    1357
                                              8 COMRAM     6     3      3
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                8     5      3    1037
                                              0 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _memcpy                                              11     5      6     478
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (6) _labs                                                 8     4      4     363
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (6) _floorf                                              20    16      4     669
                                             66 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fpclassifyf                                       14    10      4     375
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4     607
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (4) ___flsub                                              8     0      8    6887
                                             41 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fladd                                             16     8      8    5962
                                             25 COMRAM    16     8      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4     155
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             25    17      8    6653
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8     986
                                             25 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8     770
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (4) ___fldiv                                             25    17      8    3263
                                             41 COMRAM    25    17      8
                            ___fladd (ARG)
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _LCD_Write_String                                     4     2      2     443
                                              5 COMRAM     4     2      2
                     _LCD_Write_Char
 ---------------------------------------------------------------------------------
 (3) _LCD_Write_Char                                       1     1      0     133
                                              4 COMRAM     1     1      0
                     _LCD_Write_4Bit
 ---------------------------------------------------------------------------------
 (2) _LCD_Set_Cursor                                       2     1      1     395
                                              5 COMRAM     2     1      1
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0     199
                                              5 COMRAM     2     2      0
                  _IO_Expander_Write
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _LCD_Clear                                            0     0      0     133
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (3) _LCD_CMD                                              1     1      0     133
                                              4 COMRAM     1     1      0
                     _LCD_Write_4Bit
 ---------------------------------------------------------------------------------
 (4) _LCD_Write_4Bit                                       1     1      0      89
                                              3 COMRAM     1     1      0
                  _IO_Expander_Write
 ---------------------------------------------------------------------------------
 (5) _IO_Expander_Write                                    1     1      0      44
                                              2 COMRAM     1     1      0
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (6) _I2C_Master_Write                                     1     1      0      22
                                              1 COMRAM     1     1      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (6) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (6) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (7) _I2C_Master_Wait                                      1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _I2C_Master_Init
   _LCD_Clear
     _LCD_CMD
       _LCD_Write_4Bit
         _IO_Expander_Write
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Master_Write
             _I2C_Master_Wait
   _LCD_Init
     _IO_Expander_Write
     _LCD_CMD
   _menu
     _LCD_Set_Cursor
       _LCD_CMD
     _LCD_Write_String
       _LCD_Write_Char
         _LCD_Write_4Bit
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _efgtoa
             ___fladd
               ___flmul (ARG)
             ___fldiv
               ___fladd (ARG)
               ___flmul (ARG)
             ___fleq
             ___flge
               ___flmul (ARG)
             ___flmul
             ___flneg
             ___flsub
               ___fladd
               ___flmul (ARG)
             ___fltol
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
             _labs
             _memcpy
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
             _strcpy
           _fputc
           _read_prec_or_width
             ___wmul
     _termistorin
       ___aldiv
       ___fladd
       ___fldiv
       ___flmul
       ___xxtofl
         ___aldiv (ARG)
       _logf
         ___aldiv (ARG)
         ___fladd (ARG)
         ___fldiv (ARG)
         ___flmul (ARG)
         ___flsub (ARG)
         ___xxtofl (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      25        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      70       7       43.8%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     59      98       5       95.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITBIGSFRh          36      0       0      20        0.0%
BITBIGSFRll         32      0       0      23        0.0%
BITBIGSFRlhhl       21      0       0      21        0.0%
BITBIGSFRlhl         A      0       0      22        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     167      24        0.0%
DATA                 0      0     167       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Sat Feb 24 16:01:44 2024

              ___fldiv@aexp 0042                ___fldiv@bexp 0041                ___fldiv@sign 003A  
                        l43 38A6                          l52 38DA                          l46 37D8  
                        l70 3890                          l49 37FC                          l58 38D2  
                        l82 383C                          l67 3880                          l91 3858  
                        l69 388E                          l85 381E                          l79 3164  
                        l88 3874                          l97 36CE                          _GO 7E11  
                        _RS 00D5         ___wmul@multiplicand 0003                         l121 38CA  
                       l106 3536                         l170 38BA                         l185 32D4  
                       l275 2D8E                         l179 2ACE                         l196 37D6  
                       l461 2F52                         l470 377A                         l455 337E  
                       l466 2F98                         l810 1DD4                         l820 2030  
                       l724 1A3E                         l741 1B58                         l733 1D0E  
                       l725 1A2C                         l493 2E94                         l814 2138  
                       l750 1C28                         l726 19F2                         l751 1C16  
                       l904 364E                         l817 1FCA                         l827 20FA  
                       l819 2042                         l931 343C                         l851 2B26  
                       l780 2332                         l766 35CC                         l854 2C82  
                       l791 23F0                         l783 22F6                         l935 348A  
                       l951 0A18                         l792 23DE                         l865 2C1A  
                       l778 24D2                         l946 1232                         l858 2BBE  
                       l890 184E                         l789 2378                         l949 0BD2  
                       l991 341C                         l889 12CE                         l979 101A  
                       l995 3424                         _PEN 7E2A                         _SEN 7E28  
                       _Lg1 080D                         _Lg2 0809                         _Lg3 0805  
                       _Lg4 0801                         _pad 3426                         wreg 0FE8  
              ___flmul@aexp 000E                ___flmul@bexp 0013                ___flmul@sign 000D  
              ___flmul@temp 0018                ___flmul@prod 0014             __end_of_LCD_CMD 3876  
       LCD_Write_String@Str 0006              _LCD_Set_Cursor 34E2                ___fltol@exp1 000A  
                      l1001 26F6                        l1023 360E                        l1040 2908  
                      l1033 3096                        l1043 284C                        l1060 3586  
                      l1054 34E0                        l1072 321E                        l1080 368E  
                      l1083 38DE                        l4001 1C44                        l1089 3742  
                      l4011 1CAE                        l4003 1C52                        l4021 1CE8  
                      l4013 1CCE                        l4005 1C8C                        l2335 3892  
                      l4111 22BA                        l4103 2270                        l4023 1CEE  
                      l4015 1CD2                        l4007 1C8E                        l4031 3650  
                      l2337 38A2                        l3401 3816                        l4121 2300  
                      l4113 22C2                        l4105 228A                        l4201 1D78  
                      l4025 1CFC                        l4017 1CE0                        l4009 1C9E  
                      l4033 365C                        l4041 37CE                        l2371 38A8  
                      l2339 38A4                        l4131 2358                        l4123 231E  
                      l4115 22D2                        l4107 229A                        l4051 2156  
                      l4211 1DAE                        l4203 1D7E                        l4027 1CFE  
                      l4019 1CE6                        l4035 366A                        l3411 2B4C  
                      l3403 2AD2                        l2373 38AA                        l3157 3822  
                      l4141 2396                        l4133 235E                        l4125 2320  
                      l4117 22E6                        l4109 22AA                        l4053 2166  
                      l4061 2190                        l4045 213A                        l4301 210E  
                      l4213 1DBE                        l4205 1D8C                        l4037 366E  
                      l3421 2BA6                        l3405 2AE2                        l4151 2400  
                      l4143 239A                        l4135 2368                        l4127 2330  
                      l4119 22F4                        l4071 21BC                        l4063 21A0  
                      l4055 2176                        l4047 2146                        l4303 211C  
                      l4231 1E40                        l4223 1E08                        l4215 1DC4  
                      l4207 1D8E                        l4039 37B2                        l3431 2C0A  
                      l3423 2BA8                        l3415 2B60                        l3407 2AF0  
                      l3521 386A                        l4161 2462                        l4153 240C  
                      l4145 23A8                        l4137 2376                        l4129 2342  
                      l4073 21CC                        l4081 21F6                        l4065 21A6  
                      l4057 2186                        l4049 2154                        l4321 3304  
                      l4305 211E                        l4241 1E8A                        l4233 1E58  
                      l4225 1E14                        l4217 1DE4                        l4209 1D9E  
                      l4313 3588                        l4401 2E64                        l3441 2C62  
                      l3433 2C28                        l3425 2BB4                        l3417 2B68  
                      l3409 2B36                        l2475 37D8                        l3523 3840  
                      l4171 24C0                        l4163 2478                        l4155 241A  
                      l4147 23D6                        l4139 2388                        l4091 2238  
                      l4083 2206                        l4075 21DC                        l4067 21AC  
                      l4059 2188                        l4331 337C                        l4323 3314  
                      l4307 2124                        l4251 1EE0                        l4243 1E9A  
                      l4235 1E64                        l4227 1E1E                        l4219 1DF4  
                      l4315 3598                        l4403 2E74                        l4411 3434  
                      l3611 2CA6                        l3443 2C70                        l3435 2C2A  
                      l3427 2BF0                        l3419 2B74                        l2477 37E6  
                      l3517 385C                        l3525 3846                        l4173 24C6  
                      l4165 2492                        l4157 2444                        l4085 221C  
                      l4077 21EC                        l4069 21BA                        l4325 3342  
                      l4341 2F02                        l4309 2128                        l4261 1F84  
                      l4253 1EFC                        l4245 1EA6                        l4237 1E70  
                      l4229 1E34                        l4405 2E84                        l4421 2F9A  
                      l4413 3448                        l4501 0870                        l3621 2CDC  
                      l3613 2CAA                        l3605 2C84                        l3445 2C72  
                      l3437 2C2E                        l3429 2BFC                        l3519 3862  
                      l3711 30BA                        l3527 384E                        l4175 24C8  
                      l4167 24AE                        l4159 2448                        l4087 222C  
                      l4095 224C                        l4079 21EE                        l4327 3352  
                      l4319 32D6                        l4351 2F90                        l4343 2F12  
                      l4335 2E96                        l4271 1FDA                        l4263 1F92  
                      l4255 1F08                        l4247 1EB6                        l4239 1E7E  
                      l4191 1D3C                        l4183 1D10                        l4423 2FBA  
                      l4415 3458                        l4511 08BA                        l4503 0874  
                      l3631 2D1E                        l3623 2CF2                        l3615 2CB8  
                      l3607 2C88                        l3439 2C52                        l3721 310C  
                      l3713 30CA                        l3705 309A                        l4169 24B2  
                      l4097 225C                        l4089 2234                        l4329 3376  
                      l4353 2F96                        l4345 2F20                        l4337 2EC4  
                      l4273 1FE8                        l4265 1FB0                        l4257 1F24  
                      l4249 1ED0                        l4193 1D4C                        l4185 1D1C  
                      l4361 376A                        l4425 2FF8                        l4433 3038  
                      l4417 345C                        l4409 3426                        l4601 0C54  
                      l4521 0908                        l4513 08CA                        l4505 0898  
                      l3633 2D3C                        l3625 2CFA                        l3641 2D5E  
                      l3617 2CC8                        l3609 2C96                        l2691 38D8  
                      l3395 3800                        l3731 38BC                        l3723 3122  
                      l3715 30E0                        l3707 309E                        l4099 225C  
                      l4347 2F32                        l4339 2ED4                        l4283 2052  
                      l4291 209A                        l4275 1FEC                        l4267 1FBA  
                      l4259 1F4E                        l4195 1D5C                        l4187 1D2A  
                      l4371 2DBA                        l4435 304A                        l4427 3020  
                      l4451 34AE                        l4419 347A                        l4443 370A  
                      l4611 0CEC                        l4603 0C5C                        l4531 0940  
                      l4523 091A                        l4515 08D6                        l4507 08A2  
                      l3643 2D6E                        l3635 2D4C                        l3627 2D06  
                      l3619 2CCC                        l2693 38CC                        l3397 3806  
                      l3733 38C2                        l3725 3128                        l3717 30E6  
                      l3709 30A4                        l4349 2F40                        l4293 20B4  
                      l4285 205E                        l4277 1FFA                        l4269 1FC8  
                      l4197 1D62                        l4189 1D2C                        l4357 3744  
                      l3901 1984                        l4381 2E08                        l4373 2DE4  
                      l4365 2D90                        l4429 302C                        l4461 2782  
                      l3821 3190                        l4445 3712                        l4701 1192  
                      l4621 0DD0                        l4613 0D44                        l4605 0C64  
                      l4541 099E                        l4533 094A                        l4525 091E  
                      l4517 08DE                        l4509 08AA                        l3645 2D7E  
                      l3637 2D4E                        l3629 2D14                        ?_pad 000F  
                      l2695 38D0                        l3399 380E                        l3727 313E  
                      l3719 30FC                        l3671 34F4                        l4295 20C8  
                      l4287 206C                        l4279 2028                        l4199 1D72  
                      l4359 375A                        l3911 19BE                        l3903 1988  
                      l3831 185C                        l4391 2E34                        l4375 2DE6  
                      l4367 2DA6                        l4439 308E                        l4463 2790  
                      l4471 2870                        l4455 26F8                        l4447 348C  
                      l3823 31AC                        l3815 3166                        l4711 120E  
                      l4703 11C2                        l4631 0E6A                        l4623 0E02  
                      l4615 0D78                        l4607 0C74                        l4543 09A2  
                      l4527 0924                        l4519 08E2                        l3639 2D58  
                      l2689 38D4                        l2697 3878                        l3729 314E  
                      l3673 3500                        l4297 20E2                        l4289 2096  
                      l3921 1A10                        l3913 19DA                        l3905 198C  
                      l3841 189C                        l3833 186A                        l4377 2DF6  
                      l4473 28AC                        l4457 2718                        l4449 349A  
                      l3825 31DE                        l3817 3176                        l4713 1216  
                      l4705 11D0                        l4641 0F42                        l4633 0E9E  
                      l4625 0E18                        l4609 0C88                        l4617 0D7E  
                      l4561 0A28                        l4545 09A8                        l4529 092C  
                      l4537 0966                        l4721 33AA                        l4801 1254  
                      l2699 387C                        l3675 350C                        l3667 34E4  
                      l4299 20FE                        l3931 1A5C                        l3923 1A1E  
                      l3915 19EA                        l3907 1990                        l3851 18CE  
                      l3843 189E                        l3835 186C                        l4387 2E20  
                      l4379 2DFA                        l4475 28C0                        l4467 2800  
                      l4459 276E                        l4491 3568                        l4483 3538  
                      l3819 3186                        l4707 11E8                        l4651 0F6C  
                      l4635 0EF4                        l4643 0F46                        l4627 0E4A  
                      l4619 0D9C                        l4571 0B10                        l4563 0A2E  
                      l4547 09B0                        l4539 098C                        l4555 09C8  
                      l4723 33B2                        l4731 24D4                        l4811 12BA  
                      l4803 125E                        l3669 34E8                        l3677 3518  
                      l3941 1A9C                        l3925 1A20                        l3917 1A00  
                      l3909 1994                        l3861 18F6                        l3853 18D0  
                      l3837 187C                        l3845 18A6                        l3829 1850  
                      l4397 2E48                        l4389 2E2A                        l4477 28E8  
                      l4469 283C                        l4485 354C                        l4493 356C  
                      l4709 11F8                        l4661 103A                        l4653 0F78  
                      l4645 0F56                        l4637 0EFA                        l4629 0E5A  
                      l4573 0B24                        l4581 0BA0                        l4565 0A62  
                      l4557 09E2                        l4725 33CE                        l4717 3380  
                      l4741 2532                        l4733 24F8                        l4821 12F8  
                      l4805 1274                        l4901 2A0E                        l3951 1AC6  
                      l3943 1AA8                        l3935 1A70                        l3927 1A2A  
                      l3919 1A0C                        l3871 1930                        l3863 1906  
                      l3855 18D6                        l3847 18B6                        l3839 188C  
                      l4399 2E54                        l4479 28F8                        l4487 3558  
                      l4671 106C                        l4663 104A                        l4655 0FF0  
                      l4647 0F5E                        l4639 0F2E                        l4591 0C06  
                      l4583 0BDA                        l4575 0B58                        l4567 0AA0  
                      l4495 084C                        l4727 33EE                        l4719 3388  
                      l4751 258E                        l4743 253A                        l4735 2500  
                      l4911 3626                        l4831 1362                        l4823 1300  
                      l4815 12DC                        l4807 1282                        l4903 2ABE  
                      l3961 1B38                        l3945 1AAC                        l3937 1A80  
                      l3929 1A4C                        l3953 1ACC                        l3881 195C  
                      l3873 1942                        l3865 1916                        l3857 18E4  
                      l3849 18BC                        l4489 355C                        l4681 10A0  
                      l4673 1070                        l4665 104E                        l4657 1010  
                      l4649 0F64                        l4593 0C0A                        l4585 0BEA  
                      l4577 0B60                        l4569 0AD2                        l4497 0852  
                      l4729 33F6                        l4761 25C2                        l4745 254E  
                      l4737 250C                        l4913 362E                        l4841 1442  
                      l4833 137E                        l4809 12AA                        l4825 1338  
                      l4921 3258                        l3971 1B92                        l3955 1AF2  
                      l3963 1B48                        l3947 1ABA                        l3939 1A8E  
                      l3891 1970                        l3883 1960                        l3875 1950  
                      l3867 1918                        l3859 18E6                        l4691 113E  
                      l4683 10A4                        l4675 1076                        l4667 1054  
                      l4659 102C                        l4595 0C1C                        l4587 0BF6  
                      l4499 0862                        l4771 2610                        l4763 25CA  
                      l4747 2572                        l4755 25A0                        l4739 2510  
                      l4915 363E                        l4907 3610                        l4851 158E  
                      l4843 149A                        l4827 134E                        l4931 32C8  
                      l4923 3280                        l3981 1BC2                        l3973 1B9C  
                      l3965 1B6E                        l3957 1B26                        l3949 1ABC  
                      l3893 1974                        l3885 1964                        l3877 1954  
                      l3869 1920                        l4685 10AA                        l4669 105C  
                      l4677 107C                        l4693 1142                        l4597 0C2A  
                      l4589 0BFE                        l4781 2684                        l4773 2638  
                      l4757 25AA                        l4749 257A                        l4909 361E  
                      l4861 16B6                        l4853 15E6                        l4845 14CE  
                      l4837 1392                        l4925 32AA                        l3991 1BEA  
                      l3983 1BC6                        l3975 1BAA                        l3967 1B7E  
                      l3959 1B28                        l3895 1978                        l3887 1968  
                      l3879 1958                        l4695 1160                        l4687 1102  
                      l4679 108E                        l4599 0C42                        l4759 25BC  
                      l4767 25D2                        l4871 17F6                        l4863 16DE  
                      l4855 161A                        l4847 1502                        l4839 140E  
                      l4927 32B4                        l4919 3220                        l4951 379C  
                      l3993 1BF8                        l3985 1BD6                        l3977 1BAC  
                      l3897 197C                        l3889 196C                        l4697 117C  
                      l4689 1136                        l4777 2660                        l4769 25F0  
                      l4793 26D4                        l4881 3604                        l4865 1736  
                      l4857 164E                        l4849 155A                        l4929 32BE  
                      l4953 37A2                        l4945 377C                        l4891 36B2  
                      l3995 1C0E                        l3979 1BBA                        l3987 1BD8  
                      l3899 1980                        l4699 1184                        l4787 26AE  
                      l4779 2676                        l4875 35CE                        l4867 178E  
                      l4859 1682                        l4955 37A6                        l4947 3794  
                      l4885 3690                        l3989 1BE6                        l4789 26C6  
                      l4877 35D6                        l4869 17C2                        l4893 290A  
                      l4949 3798                        l4887 369C                        l3999 1C38  
                      l4879 35E8                        l4799 1234                        l4895 295E  
                      l4889 36AE                        l4897 2982                        l4899 29B6  
                      _ADON 7E10                        STR_1 0836                        STR_2 0828  
                      STR_3 0819                        STR_4 0843                        STR_7 0847  
                      u2030 37E6                        u2031 37E2                        u2040 37FC  
                      u2041 37F8                        u4000 1906                        u4001 1902  
                      u4010 1942                        u4011 193E                        u4100 1A5C  
                      u4020 1950                        u4101 1A58                        u4021 194C  
                      u4110 1A8E                        u4030 19BE                        u4111 1A8A  
                      u4031 19BA                        u4200 1BD6                        u4120 1A9C  
                      u4040 19D6                        u5000 3086                        u4201 1BD2  
                      u4121 1A98                        u4041 19D0                        u2450 388E  
                      u4210 1BE6                        u4130 1ABA                        u4050 19D8  
                      u5010 3742                        u2451 388A                        u4211 1BE2  
                      u4131 1AB6                        u5011 373E                        u4300 1CCE  
                      u4220 1BF8                        u4140 1AF2                        u4060 1A00  
                      u5100 2890                        u5020 349A                        u4301 1CCA  
                      u4221 1BF4                        u4141 1AEE                        u4061 19FC  
                      u5021 3496                        u4310 1CE0                        u4230 1C0E  
                      u4150 1B38                        u4070 1A1E                        u5110 28AC  
                      u5030 2740                        u4311 1CDC                        u4231 1C0A  
                      u4151 1B34                        u4071 1A1A                        u5111 28A8  
                      u4400 221C                        u4320 1CFC                        u4240 1C24  
                      u4160 1B6E                        u4080 1A3E                        u5120 28E8  
                      u5040 276E                        u5200 099E                        u3600 2AE2  
                      u4401 2218                        u4321 1CF8                        u4241 1C20  
                      u4161 1B6A                        u4081 1A3A                        u5121 28E4  
                      u5105 2886                        u5041 276A                        u5201 099A  
                      u3601 2ADE                        u4410 225C                        u4250 1C38  
                      u4170 1B7E                        u4090 1A4C                        u5050 2790  
                      u5130 3586                        u4330 368E                        u5210 0A14  
                      u3610 2AF0                        u4411 2258                        u4251 1C34  
                      u4171 1B7A                        u4091 1A48                        u5051 278C  
                      u5035 2736                        u5131 3582                        u4331 368A  
                      u5211 0A10                        u3611 2AEC                        u4500 23D6  
                      u4420 22D2                        u4340 2154                        u4260 1C52  
                      u4180 1BAA                        u5300 0C54                        u5220 0AA0  
                      u5140 0870                        u3620 2B4C                        u4501 23D2  
                      u4421 22CE                        u4341 2150                        u4261 1C4E  
                      u4181 1BA6                        u5301 0C50                        u5221 0A9C  
                      u5141 086C                        u3621 2B48                        u4510 23EC  
                      u4430 22F4                        u4350 2166                        u4270 1C8C  
                      u4190 1BBA                        u5070 27FC                        u5310 0D9C  
                      u5230 0AD2                        u5150 08BA                        u3630 2BA2  
                      u4511 23E8                        u4431 22F0                        u4351 2162  
                      u4271 1C88                        u4191 1BB6                        u5071 27F8  
                      u5311 0D98                        u5231 0ACE                        u5151 08B6  
                      u3631 2B9E                        u4520 2400                        u4440 231E  
                      u4360 2176                        u4600 1D8C                        u4280 1C9E  
                      u5080 2820                        u5400 108E                        u5320 0E02  
                      u5240 0B10                        u5160 08CA                        u3640 2BEC  
                      u4521 23FC                        u4441 231A                        u4361 2172  
                      u4601 1D88                        u4281 1C9A                        u5065 27A4  
                      u5401 108A                        u5321 0DFE                        u5241 0B0C  
                      u5161 08C6                        u3641 2BE8                        u4530 241A  
                      u4450 2342                        u4370 21BA                        u4610 1D9E  
                      u4290 1CAE                        u5090 283C                        u5066 27AE  
                      u5410 1160                        u5330 0E4A                        u5250 0B9C  
                      u5170 0908                        u3810 2C96                        u3650 2C0A  
                      u4531 2416                        u4451 233E                        u4371 21B6  
                      u4611 1D9A                        u4291 1CAA                        u5091 2838  
                      u5067 27BE                        u5411 115C                        u5331 0E46  
                      u5251 0B98                        u5171 0904                        u3811 2C92  
                      u3651 2C06                        u4540 2462                        u4460 2358  
                      u4380 21CC                        u4700 203E                        u4620 1DAE  
                      u3900 3176                        u5420 117C                        u5340 0E5A  
                      u5260 0BD2                        u5180 091A                        u5500 2572  
                      u3820 2CB8                        u3660 2C1A                        u4541 245E  
                      u4461 2354                        u4381 21C8                        u4701 203A  
                      u4621 1DAA                        u5085 2816                        u3901 3172  
                      u5421 1178                        u5341 0E56                        u5261 0BCE  
                      u5181 0916                        u5501 256E                        u3821 2CB4  
                      u3661 2C16                        u4550 2492                        u4470 2376  
                      u4390 21DC                        u4710 2052                        u4630 1DE4  
                      u3910 3186                        u5430 11E2                        u5350 0EF4  
                      u5270 0BEA                        u5190 098C                        u5510 260C  
                      u3830 2CF2                        u3670 2C28                        u4551 248E  
                      u4471 2372                        u4391 21D8                        u4711 204E  
                      u4631 1DE0                        u3911 3182                        u5431 11DC  
                      u5351 0EF0                        u5271 0BE6                        u5191 0988  
                      u5511 2608                        u3831 2CEE                        u3671 2C24  
                      u5600 36CE                        u4560 24C0                        u4480 2396  
                      u4800 2F02                        u4720 206C                        u4640 1DF4  
                      u3920 31AC                        u5440 11E4                        u5360 0F42  
                      u5280 0C1C                        u3840 2D14                        u3680 2C62  
                      u5520 1274                        u5601 36CA                        u4561 24BC  
                      u4481 2392                        u4801 2EFE                        u4721 2068  
                      u4641 1DF0                        u3921 31A8                        u5361 0F3E  
                      u5281 0C18                        u3841 2D10                        u3681 2C5E  
                      u5521 1270                        u4490 23A8                        u4810 2F20  
                      u4730 20B4                        u4650 1F6E                        u4570 1D2A  
                      u3930 31DE                        u5450 11F8                        u5370 0FF0  
                      u5290 0C2A                        u3850 2D3C                        u3690 2C70  
                      u5530 1282                        u4491 23A4                        u4811 2F1C  
                      u4731 20B0                        u4571 1D26                        u3931 31DA  
                      u5451 11F4                        u5371 0FEC                        u5291 0C26  
                      u3851 2D38                        u3691 2C6C                        u5531 127E  
                      u4820 2F40                        u4740 20E2                        u4660 1FC8  
                      u4580 1D3C                        u3940 186A                        u4900 2E64  
                      u5380 102C                        u5460 33AA                        u3860 2D6E  
                      u5540 12AA                        _RCEN 7E2B                        u4821 2F3C  
                      u4741 20DE                        u4661 1FC4                        u4581 1D38  
                      u3941 1866                        u4901 2E60                        u5381 1028  
                      u5461 33A6                        u3861 2D6A                        u5541 12A6  
                      u4830 2F90                        u4750 211C                        u4670 1FE8  
                      u4590 1D4C                        u3950 187C                        u4910 2E74  
                      u5390 103A                        u5470 341C                        u5550 12DC  
                      u4831 2F8C                        u4751 2118                        u4671 1FE4  
                      u4655 1F64                        u4591 1D48                        u3951 1878  
                      u4911 2E70                        u5391 1036                        u5471 3418  
                      u5551 12D8                        u4760 3304                        u4680 1FFA  
                      u4840 375A                        u3960 188C                        u4920 3434  
                      u5480 24F8                        u5560 134E                        u4761 3300  
                      u4681 1FF6                        u4841 3756                        u3961 1888  
                      u4921 3430                        u5481 24F4                        u5561 134A  
                      u5617 3788                        u4770 3342                        u4690 2028  
                      u3970 18CE                        u4850 2DA6                        u4930 347A  
                      u5490 2532                        u5570 137E                        u5707 315A  
                      u5627 30AA                        u4771 333E                        u4691 2024  
                      u3971 18CA                        u4851 2DA2                        u4931 3476  
                      u5491 252E                        u5571 137A                        u4780 3376  
                      u3980 18E4                        u4860 2DDA                        u4940 2FDA  
                      u5580 13C4                        u5717 38C4                        u5637 30C0  
                      u4781 3372                        u3981 18E0                        u4790 2EC4  
                      u3990 18F6                        u4870 2E08                        u4950 2FF8  
                      u5590 3604                        u5727 3818                        u5647 30D6  
                      u4791 2EC0                        u3991 18F2                        u4871 2E04  
                      u4951 2FF4                        u5591 3600                        u4880 2E1C  
                      u4960 3020                        u5657 30EC                        u4881 2E18  
                      u4865 2DD0                        u4961 301C                        u4945 2FD0  
                      u5585 13BA                        u4890 2E44                        u4970 304A  
                      u5667 3102                        u4891 2E40                        u4971 3046  
                      u5677 3118                        u4990 3084                        u5687 312E  
                      u4991 307E                        u5697 3144                        u4985 305C  
                      _RSEN 7E29           ?_LCD_Write_String 0006                        _dbuf 0100  
                      _labs 348C                        _main 377C                        _menu 3220  
                      _logf 1234                        _prec 00CB                        pad@i 0015  
                      pad@p 0012                        fsr1h 0FE2                        fsr2h 0FDA  
                      indf2 0FDF                        fsr1l 0FE1                        fsr2l 0FD9  
          __end_of_ADC_Init 38BC               ___fpclassifyf 2F9A                        prodh 0FF4  
                      prodl 0FF3                        start 0000          ??_LCD_Write_String 0008  
           ___fldiv@new_exp 003B                ___param_bank 0000        LCD_Write_4Bit@Nibble 0004  
                     ??_pad 0014            __end_of_LCD_Init 3166            ?_I2C_Master_Init 0001  
          ?_I2C_Master_Wait 0001            ?_I2C_Master_Stop 0001               ___fltol@sign1 0009  
           __end_of___aldiv 2D90                       ?_labs 0001             __end_of___fladd 1D10  
                     ?_main 0001                       _ACKEN 7E2C                       _ACKDT 7E2D  
                     ?_menu 0001                       ?_logf 0043             __end_of___fldiv 24D4  
           __end_of___flneg 377C             __end_of___flmul 213A             __end_of___flsub 35CE  
           __end_of___fltol 2E96                vfpfcnvrt@fmt 008D                       _TRISA 0F92  
                     _SSPIF 7CF3      __end_of_LCD_Set_Cursor 3538                       _flags 00D3  
                     _line1 00F6         read_prec_or_width@c 0009                       _errno 00CD  
       read_prec_or_width@n 000A                       _fputc 3166                       _fputs 3650  
                     labs@a 0001                       pad@fp 000F                       _width 00C9  
                     _putch 38DE                       logf@R 0060                       logf@k 007C  
                     logf@s 0086                       logf@w 008E                       logf@x 0043  
                     logf@z 008A                       tablat 0FF5                       status 0FD8  
           __end_of_sprintf 3650              ?___fpclassifyf 0001              _LCD_Write_4Bit 37FE  
            _LCD_Write_Char 383E             __initialization 36D0                __end_of_labs 34E2  
              __end_of_main 37B2                __end_of_menu 32D6                __end_of_logf 1850  
         _IO_Expander_Write 3820          ?_IO_Expander_Write 0001                      ??_labs 0005  
                    ??_main 00B7                      ??_menu 0060                      ??_logf 0047  
         __end_of_LCD_Clear 38CC               __activetblptr 0002                   ??_LCD_CMD 0005  
__end_of_read_prec_or_width 3426           ?_I2C_Master_Start 0001           ?_I2C_Master_Write 0001  
       ??_IO_Expander_Write 0003             ?_LCD_Set_Cursor 0006          ??_I2C_Master_Start 0002  
                    _ADCON0 0FC2                      _ADCON1 0FC1          ??_I2C_Master_Write 0002  
                    _ADCON2 0FC0                      _AN0RES 00D1                      _AN1RES 00CF  
                    ?_fputc 0001                      ?_fputs 0009                      _ADRESH 0FC4  
                    _ADRESL 0FC3                      ?_putch 0001                      _SSPADD 0FC8  
                    _SSPBUF 0FC9      __end_of_LCD_Write_4Bit 3820            __end_of___xxtofl 2C84  
    __end_of_LCD_Write_Char 385A                 menu@tempout 00B3   __end_of_IO_Expander_Write 383E  
              vfprintf@cfmt 0098                      ___flge 2E96                      ___fleq 32D6  
                 ??___aldiv 0009                   ??___fladd 0022                      ___wmul 37B2  
                    _ln2_hi 0815                   ??___fldiv 0032                      _ln2_lo 0811  
                 ??___flneg 0005                   ??___flmul 0009                   ??___flsub 0032  
                 ??___fltol 0005                      _efgtoa 084C                  _TempoutSTR 0150  
                    _floorf 26F8                      _memcpy 3538        read_prec_or_width@ap 0008  
                    clear_0 36EE                      clear_1 36FA                      isa$std 0001  
                    pad@buf 0010                      _strcpy 370A                      logf@t1 0064  
                    logf@t2 0068                      logf@dk 0082                      fputc@c 0001  
                    logf@ux 0096                      fputs@c 000C                      fputs@i 000D  
                    fputs@s 0009             ___fpclassifyf@e 0009                   ?_ADC_Init 0001  
           ___fpclassifyf@u 000B             ___fpclassifyf@x 0001                __mediumconst 0000  
                    tblptrh 0FF7                      tblptrl 0FF6                      tblptru 0FF8  
                    putch@c 0001            __end_of_vfprintf 3610                   ??_sprintf 0060  
              ?_termistorin 004D                  ___flge@ff1 001A                  ___flge@ff2 001E  
           ??___fpclassifyf 0005                ___xxtofl@arg 0019                ___xxtofl@exp 0018  
              ___xxtofl@val 000F                  ___fleq@ff1 0001                  ___fleq@ff2 0005  
                __accesstop 0060     __end_of__initialization 3700                   ?_LCD_Init 0001  
                ___flneg@f1 0001             ?_LCD_Write_4Bit 0001               ___rparam_used 0001  
                ___fltol@f1 0001             ?_LCD_Write_Char 0001              __pcstackCOMRAM 0001  
              __pidataBANK0 38DC               __end_of_fputc 3220               __end_of_fputs 3690  
             __end_of_putch 38E0                  ??_ADC_Init 0001                     ??_fputc 0004  
                   ??_fputs 000C                     ??_putch 0001                  __pbssBANK0 00B9  
                __pbssBANK1 0100            _termistorin$1212 009A            _termistorin$1213 009E  
          _termistorin$1214 00A2                  ??_LCD_Init 0006                  _efgtoa$863 0066  
                   ?___flge 001A                     ?___fleq 0001                     ?___wmul 0001  
                   ?_efgtoa 0057                     ?_floorf 0043                     ?_memcpy 0001  
                   _ACKSTAT 7E2E                     ?_strcpy 0001                     _LCD_CMD 385A  
                 ?___xxtofl 000F                     _SSPCON1 0FC6                     _SSPCON2 0FC5  
                   _SSPSTAT 0FC7                     _i2c_add 00D4                     __Hparam 0000  
                   __Lparam 0000                     ___aldiv 2C84                     ___fladd 1850  
                   ___fldiv 213A                     ___flneg 3744                     ___flmul 1D10  
                   ___flsub 3588                     ___fltol 2D90                   ?_vfprintf 0095  
              __psmallconst 0800                 _Temperature 00C5                     __pcinit 36D0  
                   __ramtop 0800            ??_LCD_Set_Cursor 0007                     __ptext0 377C  
                   __ptext1 3220                     __ptext2 290A                     __ptext3 1234  
                   __ptext4 2AD0                     __ptext5 2C84                     __ptext6 3610  
                   __ptext7 35CE                     __ptext8 24D4                     __ptext9 3380  
     read_prec_or_width@fmt 0007                  ??___xxtofl 0013            ___aldiv@dividend 0001  
                   efgtoa@c 005C                     efgtoa@d 006B                     efgtoa@e 006F  
                   efgtoa@f 0058                     efgtoa@g 0082                     efgtoa@h 0079  
                   efgtoa@i 0077                     efgtoa@l 007D                     efgtoa@m 006D  
                   efgtoa@n 0086                     efgtoa@p 0062                     efgtoa@t 0064  
                   efgtoa@u 0088                     efgtoa@w 0071                   _LCD_Clear 38BC  
                   _sprintf 3610        end_of_initialization 3700                     floorf@e 0051  
                   floorf@m 004D                     floorf@u 0053                     floorf@x 0043  
                   memcpy@d 0008                     memcpy@n 0005                     memcpy@s 000A  
                   fputc@fp 0003               __Lmediumconst 0000                     fputs@fp 000B  
        _read_prec_or_width 3380           __end_of_vfpfcnvrt 26F8                  efgtoa@mode 0069  
                efgtoa@sign 0081            ___aldiv@quotient 000B                     postdec2 0FDD  
       ?_read_prec_or_width 0007                     postinc0 0FEE                     postinc1 0FE6  
                   postinc2 0FDE            vfpfcnvrt@convarg 008F                  ??_vfprintf 0060  
                   strcpy@d 0005                  LCD_CMD@CMD 0005                 ___fladd@grs 0029  
             ___xxtofl@sign 0017                   _TRISBbits 0F93                  ?_LCD_Clear 0001  
      ??_read_prec_or_width 0009                 ___fldiv@grs 003D                 ___fldiv@rem 0036  
          ??_LCD_Write_4Bit 0004           LCD_Write_String@i 0008            ??_LCD_Write_Char 0005  
               ___flmul@grs 000F              __end_of___flge 2F9A              __end_of___fleq 3380  
               vfpfcnvrt@ap 008E                 vfpfcnvrt@cp 0094                 vfpfcnvrt@fp 008C  
            __end_of___wmul 37D8              __end_of_ln2_hi 0819              __end_of_ln2_lo 0815  
          _LCD_Write_String 3690              __end_of_efgtoa 1234              __end_of_floorf 290A  
            __end_of_memcpy 3588                  floorf@F521 00B9              __end_of_strcpy 3744  
       start_initialization 36D0                 __end_of_Lg1 0811                 __end_of_Lg2 080D  
               __end_of_Lg3 0809                 __end_of_Lg4 0805                 __end_of_pad 348C  
         ??_I2C_Master_Init 0001           ??_I2C_Master_Wait 0001           ??_I2C_Master_Stop 0002  
     __end_of___fpclassifyf 3098                  menu@tempin 00AF                 vfprintf@fmt 0096  
                 _TempinSTR 00D6                    ??___flge 0022                    ??___fleq 0009  
                  ??___wmul 0005                    ??_efgtoa 005D                 __pdataBANK0 00F6  
                  ??_floorf 0047                    ??_memcpy 0007                    ??_strcpy 0004  
                 ___fladd@a 001E                   ___fladd@b 001A                    ?_LCD_CMD 0001  
                 ___fldiv@a 002E                   ___fldiv@b 002A           termistorin@AN0RES 004D  
                 ___flmul@a 0005                   ___flmul@b 0001                   ___flsub@a 002E  
                 ___flsub@b 002A               __pcstackBANK0 0060                 ??_LCD_Clear 0006  
          _I2C_Master_Start 38D4            _I2C_Master_Write 3876       IO_Expander_Write@Data 0003  
                  ?___aldiv 0001           termistorin@tempin 00A6                    ?___fladd 001A  
                  ?___fldiv 002A                    ?___flneg 0001                    ?___flmul 0001  
                  ?___flsub 002A                    ?___fltol 0001                   _logf$1220 0070  
                 _logf$1221 0074                   _logf$1222 0078                   _logf$1218 0092  
                 _logf$1219 006C        I2C_Master_Write@data 0002                 __smallconst 0800  
                  _ADC_Init 38A8                    ?_sprintf 0099             ___aldiv@divisor 0005  
           ___aldiv@counter 0009                    _LCD_Init 3098              ___wmul@product 0005  
                 _vfpfcnvrt 24D4                  _ADCON0bits 0FC2           ___wmul@multiplier 0001  
                vfpfcnvrt@c 0093               ??_termistorin 0051    __end_of_LCD_Write_String 36D0  
                  __Hrparam 0000                   memcpy@tmp 0007                  vfprintf@ap 0097  
                  __Lrparam 0000                  vfprintf@fp 0095                  ?_vfpfcnvrt 008C  
        ___fpclassifyf@F465 00BD                  sprintf@fmt 009B             _I2C_Master_Init 3892  
                  ___xxtofl 2AD0             _I2C_Master_Wait 37D8             _I2C_Master_Stop 38CC  
                  __ptext10 37B2                    __ptext11 084C                    __ptext20 2F9A  
                  __ptext12 370A                    __ptext21 2D90                    __ptext13 3426  
                  __ptext30 383E                    __ptext22 3588                    __ptext14 3650  
                  __ptext31 34E2                    __ptext23 1850                    __ptext15 3166  
                  __ptext40 37D8                    __ptext32 3098                    __ptext24 3744  
                  __ptext16 38DE                    __ptext41 3892                    __ptext33 38BC  
                  __ptext25 1D10                    __ptext17 3538                    __ptext42 38A8  
                  __ptext34 385A                    __ptext26 2E96                    __ptext18 348C  
                  __ptext35 37FE                    __ptext27 32D6                    __ptext19 26F8  
                  __ptext36 3820                    __ptext28 213A                    __ptext37 3876  
                  __ptext29 3690                    __ptext38 38CC                    __ptext39 38D4  
                strcpy@dest 0001             _BackLight_State 00F7         __end_of_termistorin 2AD0  
                  efgtoa@fp 0057                    efgtoa@ne 0060                    efgtoa@pp 0068  
                  efgtoa@ou 0073                    isa$xinst 0000                    _vfprintf 35CE  
                  logf@F472 00C1    __end_of_I2C_Master_Start 38DC    __end_of_I2C_Master_Write 3892  
                  memcpy@d1 0001                    memcpy@s1 0003                    logf@hfsq 007E  
        LCD_Write_Char@Data 0005                   sprintf@ap 00A2                   strcpy@src 0003  
               efgtoa@nmode 006A     __end_of_I2C_Master_Init 38A8     __end_of_I2C_Master_Wait 37FE  
   __end_of_I2C_Master_Stop 38D4                 ??_vfpfcnvrt 005F             LCD_Init@I2C_Add 0007  
                  sprintf@f 00A3                    sprintf@s 0099                ___aldiv@sign 000A  
         LCD_Set_Cursor@COL 0006           LCD_Set_Cursor@ROW 0007               ___fladd@signs 0026  
               _termistorin 290A                ___fladd@aexp 0027                ___fladd@bexp 0028  
