

Microchip MPLAB XC8 Assembler V2.46 build 20240104201356 
                                                                                               Sat Feb 24 16:07:55 2024

Microchip MPLAB XC8 C Compiler v2.46 (Free license) build 20240104201356 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=3
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=2
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=2
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    29                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text29,global,reloc=2,class=CODE,delta=1
    43                           	psect	text30,global,reloc=2,class=CODE,delta=1
    44                           	psect	text31,global,reloc=2,class=CODE,delta=1
    45                           	psect	text32,global,reloc=2,class=CODE,delta=1
    46                           	psect	text33,global,reloc=2,class=CODE,delta=1
    47                           	psect	text34,global,reloc=2,class=CODE,delta=1
    48                           	psect	text35,global,reloc=2,class=CODE,delta=1
    49                           	psect	text36,global,reloc=2,class=CODE,delta=1
    50                           	psect	text37,global,reloc=2,class=CODE,delta=1
    51                           	psect	text38,global,reloc=2,class=CODE,delta=1
    52                           	psect	text39,global,reloc=2,class=CODE,delta=1
    53                           	psect	text40,global,reloc=2,class=CODE,delta=1
    54                           	psect	text41,global,reloc=2,class=CODE,delta=1
    55                           	psect	text42,global,reloc=2,class=CODE,delta=1
    56                           	psect	text43,global,reloc=2,class=CODE,delta=1
    57                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    58                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    59                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    60   000000                     
    61                           ; Generated 17/10/2023 GMT
    62                           ; 
    63                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    64                           ; All rights reserved.
    65                           ; 
    66                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    67                           ; 
    68                           ; Redistribution and use in source and binary forms, with or without modification, are
    69                           ; permitted provided that the following conditions are met:
    70                           ; 
    71                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    72                           ;        conditions and the following disclaimer.
    73                           ; 
    74                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    75                           ;        of conditions and the following disclaimer in the documentation and/or other
    76                           ;        materials provided with the distribution. Publication is not required when
    77                           ;        this file is used in an embedded application.
    78                           ; 
    79                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    80                           ;        software without specific prior written permission.
    81                           ; 
    82                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    83                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    84                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    85                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    86                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    87                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    88                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    89                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    90                           ; 
    91                           ; 
    92                           ; Code-generator required, PIC18F4550 Definitions
    93                           ; 
    94                           ; SFR Addresses
    95   000000                     
    96                           	psect	idataBANK0
    97   0039A0                     __pidataBANK0:
    98                           	callstack 0
    99                           
   100                           ;initializer for _BackLight_State
   101   0039A0  08                 	db	8
   102                           
   103                           	psect	smallconst
   104   000800                     __psmallconst:
   105                           	callstack 0
   106   000800  00                 	db	0
   107   000801  9E26               	dw	40486
   108   000803  3E78               	dw	15992
   109   000805                     __end_of_Lg4:
   110                           	callstack 0
   111   000805  E9EE               	dw	59886
   112   000807  3E91               	dw	16017
   113   000809                     __end_of_Lg3:
   114                           	callstack 0
   115   000809  CE13               	dw	52755
   116   00080B  3ECC               	dw	16076
   117   00080D                     __end_of_Lg2:
   118                           	callstack 0
   119   00080D  AAAA               	dw	43690
   120   00080F  3F2A               	dw	16170
   121   000811                     __end_of_Lg1:
   122                           	callstack 0
   123   000811  F7D1               	dw	63441
   124   000813  3717               	dw	14103
   125   000815                     __end_of_ln2_lo:
   126                           	callstack 0
   127   000815  7180               	dw	29056
   128   000817  3F31               	dw	16177
   129   000819                     __end_of_ln2_hi:
   130                           	callstack 0
   131   000000                     _ADCON0	set	4034
   132   000000                     _ADRESL	set	4035
   133   000000                     _ADRESH	set	4036
   134   000000                     _ADCON0bits	set	4034
   135   000000                     _GO	set	32273
   136   000000                     _ADON	set	32272
   137   000000                     _RCEN	set	32299
   138   000000                     _ACKSTAT	set	32302
   139   000000                     _ACKEN	set	32300
   140   000000                     _ACKDT	set	32301
   141   000000                     _PEN	set	32298
   142   000000                     _RSEN	set	32297
   143   000000                     _SEN	set	32296
   144   000000                     _TRISA	set	3986
   145   000000                     _TRISBbits	set	3987
   146   000000                     _SSPCON2	set	4037
   147   000000                     _SSPCON1	set	4038
   148   000000                     _SSPBUF	set	4041
   149   000000                     _SSPADD	set	4040
   150   000000                     _SSPSTAT	set	4039
   151   000000                     _SSPIF	set	31987
   152   000000                     _ADCON2	set	4032
   153   000000                     _ADCON1	set	4033
   154   000819                     STR_2:
   155   000819  4F                 	db	79	;'O'
   156   00081A  55                 	db	85	;'U'
   157   00081B  54                 	db	84	;'T'
   158   00081C  3A                 	db	58	;':'
   159   00081D  20                 	db	32
   160   00081E  25                 	db	37
   161   00081F  2E                 	db	46
   162   000820  32                 	db	50	;'2'
   163   000821  66                 	db	102	;'f'
   164   000822  25                 	db	37
   165   000823  63                 	db	99	;'c'
   166   000824  43                 	db	67	;'C'
   167   000825  20                 	db	32
   168   000826  20                 	db	32
   169   000827  00                 	db	0
   170   000828                     STR_1:
   171   000828  49                 	db	73	;'I'
   172   000829  4E                 	db	78	;'N'
   173   00082A  3A                 	db	58	;':'
   174   00082B  20                 	db	32
   175   00082C  25                 	db	37
   176   00082D  2E                 	db	46
   177   00082E  32                 	db	50	;'2'
   178   00082F  66                 	db	102	;'f'
   179   000830  25                 	db	37
   180   000831  63                 	db	99	;'c'
   181   000832  43                 	db	67	;'C'
   182   000833  20                 	db	32
   183   000834  20                 	db	32
   184   000835  00                 	db	0
   185   000836                     STR_3:
   186   000836  69                 	db	105	;'i'
   187   000837  6E                 	db	110	;'n'
   188   000838  66                 	db	102	;'f'
   189   000839  00                 	db	0
   190   00083A                     STR_6:
   191   00083A  6E                 	db	110	;'n'
   192   00083B  61                 	db	97	;'a'
   193   00083C  6E                 	db	110	;'n'
   194   00083D  00                 	db	0
   195   00083E  00                 	db	0	; dummy byte at the end
   196   000000                     
   197                           ; #config settings
   198                           
   199                           	psect	cinit
   200   003840                     __pcinit:
   201                           	callstack 0
   202   003840                     start_initialization:
   203                           	callstack 0
   204   003840                     __initialization:
   205                           	callstack 0
   206                           
   207                           ; Initialize objects allocated to BANK0 (1 bytes)
   208                           ; load TBLPTR registers with __pidataBANK0
   209   003840  0EA0               	movlw	low __pidataBANK0
   210   003842  6EF6               	movwf	tblptrl,c
   211   003844  0E39               	movlw	high __pidataBANK0
   212   003846  6EF7               	movwf	tblptrh,c
   213   003848  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   214   00384A  6EF8               	movwf	tblptru,c
   215   00384C  0009               	tblrd		*+	;fetch initializer
   216   00384E  CFF5 F0F4          	movff	tablat,__pdataBANK0
   217                           
   218                           ; Clear objects allocated to BANK1 (112 bytes)
   219   003852  EE01  F000         	lfsr	0,__pbssBANK1
   220   003856  0E70               	movlw	112
   221   003858                     clear_0:
   222   003858  6AEE               	clrf	postinc0,c
   223   00385A  06E8               	decf	wreg,f,c
   224   00385C  E1FD               	bnz	clear_0
   225                           
   226                           ; Clear objects allocated to BANK0 (57 bytes)
   227   00385E  EE00  F0BB         	lfsr	0,__pbssBANK0
   228   003862  0E39               	movlw	57
   229   003864                     clear_1:
   230   003864  6AEE               	clrf	postinc0,c
   231   003866  06E8               	decf	wreg,f,c
   232   003868  E1FD               	bnz	clear_1
   233   00386A                     end_of_initialization:
   234                           	callstack 0
   235   00386A                     __end_of__initialization:
   236                           	callstack 0
   237   00386A  0E00               	movlw	low (__Lmediumconst shr (0+16))
   238   00386C  6EF8               	movwf	tblptru,c
   239   00386E  0100               	movlb	0
   240   003870  EF05  F01C         	goto	_main	;jump to C main() function
   241                           
   242                           	psect	bssBANK0
   243   0000BB                     __pbssBANK0:
   244                           	callstack 0
   245   0000BB                     floorf@F521:
   246                           	callstack 0
   247   0000BB                     	ds	4
   248   0000BF                     ___fpclassifyf@F465:
   249                           	callstack 0
   250   0000BF                     	ds	4
   251   0000C3                     logf@F472:
   252                           	callstack 0
   253   0000C3                     	ds	4
   254   0000C7                     _width:
   255                           	callstack 0
   256   0000C7                     	ds	2
   257   0000C9                     _prec:
   258                           	callstack 0
   259   0000C9                     	ds	2
   260   0000CB                     _errno:
   261                           	callstack 0
   262   0000CB                     	ds	2
   263   0000CD                     _AN1RES:
   264                           	callstack 0
   265   0000CD                     	ds	2
   266   0000CF                     _AN0RES:
   267                           	callstack 0
   268   0000CF                     	ds	2
   269   0000D1                     _flags:
   270                           	callstack 0
   271   0000D1                     	ds	1
   272   0000D2                     _i2c_add:
   273                           	callstack 0
   274   0000D2                     	ds	1
   275   0000D3                     _RS:
   276                           	callstack 0
   277   0000D3                     	ds	1
   278   0000D4                     _TempinSTR:
   279                           	callstack 0
   280   0000D4                     	ds	32
   281                           
   282                           	psect	dataBANK0
   283   0000F4                     __pdataBANK0:
   284                           	callstack 0
   285   0000F4                     _BackLight_State:
   286                           	callstack 0
   287   0000F4                     	ds	1
   288                           
   289                           	psect	bssBANK1
   290   000100                     __pbssBANK1:
   291                           	callstack 0
   292   000100                     _dbuf:
   293                           	callstack 0
   294   000100                     	ds	80
   295   000150                     _TempoutSTR:
   296                           	callstack 0
   297   000150                     	ds	32
   298                           
   299                           	psect	cstackBANK0
   300   000060                     __pcstackBANK0:
   301                           	callstack 0
   302   000060                     efgtoa@ne:
   303                           	callstack 0
   304   000060                     logf@R:
   305                           	callstack 0
   306                           
   307                           ; 4 bytes @ 0x0
   308   000060                     	ds	2
   309   000062                     efgtoa@p:
   310                           	callstack 0
   311                           
   312                           ; 2 bytes @ 0x2
   313   000062                     	ds	2
   314   000064                     efgtoa@t:
   315                           	callstack 0
   316   000064                     logf@t1:
   317                           	callstack 0
   318                           
   319                           ; 4 bytes @ 0x4
   320   000064                     	ds	2
   321   000066                     _efgtoa$861:
   322                           	callstack 0
   323                           
   324                           ; 2 bytes @ 0x6
   325   000066                     	ds	2
   326   000068                     efgtoa@pp:
   327                           	callstack 0
   328   000068                     logf@t2:
   329                           	callstack 0
   330                           
   331                           ; 4 bytes @ 0x8
   332   000068                     	ds	1
   333   000069                     efgtoa@mode:
   334                           	callstack 0
   335                           
   336                           ; 1 bytes @ 0x9
   337   000069                     	ds	1
   338   00006A                     efgtoa@nmode:
   339                           	callstack 0
   340                           
   341                           ; 1 bytes @ 0xA
   342   00006A                     	ds	1
   343   00006B                     efgtoa@d:
   344                           	callstack 0
   345                           
   346                           ; 2 bytes @ 0xB
   347   00006B                     	ds	1
   348   00006C                     _logf$1216:
   349                           	callstack 0
   350                           
   351                           ; 4 bytes @ 0xC
   352   00006C                     	ds	1
   353   00006D                     efgtoa@m:
   354                           	callstack 0
   355                           
   356                           ; 2 bytes @ 0xD
   357   00006D                     	ds	2
   358   00006F                     efgtoa@e:
   359                           	callstack 0
   360                           
   361                           ; 2 bytes @ 0xF
   362   00006F                     	ds	1
   363   000070                     _logf$1217:
   364                           	callstack 0
   365                           
   366                           ; 4 bytes @ 0x10
   367   000070                     	ds	1
   368   000071                     efgtoa@w:
   369                           	callstack 0
   370                           
   371                           ; 2 bytes @ 0x11
   372   000071                     	ds	2
   373   000073                     efgtoa@ou:
   374                           	callstack 0
   375                           
   376                           ; 4 bytes @ 0x13
   377   000073                     	ds	1
   378   000074                     _logf$1218:
   379                           	callstack 0
   380                           
   381                           ; 4 bytes @ 0x14
   382   000074                     	ds	3
   383   000077                     efgtoa@i:
   384                           	callstack 0
   385                           
   386                           ; 2 bytes @ 0x17
   387   000077                     	ds	1
   388   000078                     _logf$1219:
   389                           	callstack 0
   390                           
   391                           ; 4 bytes @ 0x18
   392   000078                     	ds	1
   393   000079                     efgtoa@h:
   394                           	callstack 0
   395                           
   396                           ; 4 bytes @ 0x19
   397   000079                     	ds	3
   398   00007C                     logf@k:
   399                           	callstack 0
   400                           
   401                           ; 2 bytes @ 0x1C
   402   00007C                     	ds	1
   403   00007D                     efgtoa@l:
   404                           	callstack 0
   405                           
   406                           ; 4 bytes @ 0x1D
   407   00007D                     	ds	1
   408   00007E                     logf@hfsq:
   409                           	callstack 0
   410                           
   411                           ; 4 bytes @ 0x1E
   412   00007E                     	ds	3
   413   000081                     efgtoa@sign:
   414                           	callstack 0
   415                           
   416                           ; 1 bytes @ 0x21
   417   000081                     	ds	1
   418   000082                     logf@dk:
   419                           	callstack 0
   420   000082                     efgtoa@g:
   421                           	callstack 0
   422                           
   423                           ; 4 bytes @ 0x22
   424   000082                     	ds	4
   425   000086                     efgtoa@n:
   426                           	callstack 0
   427   000086                     logf@s:
   428                           	callstack 0
   429                           
   430                           ; 4 bytes @ 0x26
   431   000086                     	ds	2
   432   000088                     efgtoa@u:
   433                           	callstack 0
   434                           
   435                           ; 4 bytes @ 0x28
   436   000088                     	ds	2
   437   00008A                     logf@z:
   438                           	callstack 0
   439                           
   440                           ; 4 bytes @ 0x2A
   441   00008A                     	ds	2
   442   00008C                     vfpfcnvrt@fp:
   443                           	callstack 0
   444                           
   445                           ; 1 bytes @ 0x2C
   446   00008C                     	ds	1
   447   00008D                     vfpfcnvrt@fmt:
   448                           	callstack 0
   449                           
   450                           ; 1 bytes @ 0x2D
   451   00008D                     	ds	1
   452   00008E                     vfpfcnvrt@ap:
   453                           	callstack 0
   454   00008E                     logf@w:
   455                           	callstack 0
   456                           
   457                           ; 4 bytes @ 0x2E
   458   00008E                     	ds	1
   459   00008F                     vfpfcnvrt@convarg:
   460                           	callstack 0
   461                           
   462                           ; 4 bytes @ 0x2F
   463   00008F                     	ds	3
   464   000092                     _logf$1215:
   465                           	callstack 0
   466                           
   467                           ; 4 bytes @ 0x32
   468   000092                     	ds	1
   469   000093                     vfpfcnvrt@c:
   470                           	callstack 0
   471                           
   472                           ; 1 bytes @ 0x33
   473   000093                     	ds	1
   474   000094                     vfpfcnvrt@cp:
   475                           	callstack 0
   476                           
   477                           ; 1 bytes @ 0x34
   478   000094                     	ds	1
   479   000095                     ?_vfprintf:
   480                           	callstack 0
   481   000095                     vfprintf@fp:
   482                           	callstack 0
   483                           
   484                           ; 1 bytes @ 0x35
   485   000095                     	ds	1
   486   000096                     vfprintf@fmt:
   487                           	callstack 0
   488   000096                     logf@ux:
   489                           	callstack 0
   490                           
   491                           ; 4 bytes @ 0x36
   492   000096                     	ds	1
   493   000097                     vfprintf@ap:
   494                           	callstack 0
   495                           
   496                           ; 1 bytes @ 0x37
   497   000097                     	ds	1
   498   000098                     vfprintf@cfmt:
   499                           	callstack 0
   500                           
   501                           ; 1 bytes @ 0x38
   502   000098                     	ds	1
   503   000099                     ?_sprintf:
   504                           	callstack 0
   505   000099                     sprintf@s:
   506                           	callstack 0
   507                           
   508                           ; 2 bytes @ 0x39
   509   000099                     	ds	1
   510   00009A                     _termistorin$1209:
   511                           	callstack 0
   512                           
   513                           ; 4 bytes @ 0x3A
   514   00009A                     	ds	1
   515   00009B                     sprintf@fmt:
   516                           	callstack 0
   517                           
   518                           ; 1 bytes @ 0x3B
   519   00009B                     	ds	3
   520   00009E                     _termistorin$1210:
   521                           	callstack 0
   522                           
   523                           ; 4 bytes @ 0x3E
   524   00009E                     	ds	4
   525   0000A2                     sprintf@ap:
   526                           	callstack 0
   527   0000A2                     _termistorin$1211:
   528                           	callstack 0
   529                           
   530                           ; 4 bytes @ 0x42
   531   0000A2                     	ds	1
   532   0000A3                     sprintf@f:
   533                           	callstack 0
   534                           
   535                           ; 12 bytes @ 0x43
   536   0000A3                     	ds	3
   537   0000A6                     termistorin@tempin:
   538                           	callstack 0
   539                           
   540                           ; 4 bytes @ 0x46
   541   0000A6                     	ds	9
   542   0000AF                     ??_menu:
   543                           
   544                           ; 1 bytes @ 0x4F
   545   0000AF                     	ds	2
   546   0000B1                     menu@tempin:
   547                           	callstack 0
   548                           
   549                           ; 4 bytes @ 0x51
   550   0000B1                     	ds	4
   551   0000B5                     menu@tempout:
   552                           	callstack 0
   553                           
   554                           ; 4 bytes @ 0x55
   555   0000B5                     	ds	4
   556   0000B9                     ??_main:
   557                           
   558                           ; 1 bytes @ 0x59
   559   0000B9                     	ds	2
   560                           
   561                           	psect	cstackCOMRAM
   562   000001                     __pcstackCOMRAM:
   563                           	callstack 0
   564   000001                     ??_I2C_Master_Wait:
   565   000001                     ?___fpclassifyf:
   566                           	callstack 0
   567   000001                     ?_ADC_Read:
   568                           	callstack 0
   569   000001                     ?___wmul:
   570                           	callstack 0
   571   000001                     ?___flmul:
   572                           	callstack 0
   573   000001                     ?_labs:
   574                           	callstack 0
   575   000001                     ?___aldiv:
   576                           	callstack 0
   577   000001                     ?___flneg:
   578                           	callstack 0
   579   000001                     ?___fltol:
   580                           	callstack 0
   581   000001                     ___wmul@multiplier:
   582                           	callstack 0
   583   000001                     memcpy@d1:
   584                           	callstack 0
   585   000001                     fputc@c:
   586                           	callstack 0
   587   000001                     strcpy@dest:
   588                           	callstack 0
   589   000001                     ___aldiv@dividend:
   590                           	callstack 0
   591   000001                     ___fleq@ff1:
   592                           	callstack 0
   593   000001                     ___flneg@f1:
   594                           	callstack 0
   595   000001                     ___fltol@f1:
   596                           	callstack 0
   597   000001                     ___flmul@b:
   598                           	callstack 0
   599   000001                     ___fpclassifyf@x:
   600                           	callstack 0
   601   000001                     labs@a:
   602                           	callstack 0
   603                           
   604                           ; 4 bytes @ 0x0
   605   000001                     	ds	1
   606   000002                     I2C_Master_Write@data:
   607                           	callstack 0
   608                           
   609                           ; 1 bytes @ 0x1
   610   000002                     	ds	1
   611   000003                     ??_ADC_Read:
   612   000003                     IO_Expander_Write@Data:
   613                           	callstack 0
   614   000003                     fputc@fp:
   615                           	callstack 0
   616   000003                     strcpy@src:
   617                           	callstack 0
   618   000003                     ___wmul@multiplicand:
   619                           	callstack 0
   620   000003                     memcpy@s1:
   621                           	callstack 0
   622                           
   623                           ; 2 bytes @ 0x2
   624   000003                     	ds	1
   625   000004                     ??_fputc:
   626   000004                     ??_strcpy:
   627   000004                     LCD_Write_4Bit@Nibble:
   628                           	callstack 0
   629                           
   630                           ; 1 bytes @ 0x3
   631   000004                     	ds	1
   632   000005                     ??___fpclassifyf:
   633   000005                     ??_labs:
   634   000005                     ??___fltol:
   635   000005                     LCD_CMD@CMD:
   636                           	callstack 0
   637   000005                     LCD_Write_Char@Data:
   638                           	callstack 0
   639   000005                     ___wmul@product:
   640                           	callstack 0
   641   000005                     memcpy@n:
   642                           	callstack 0
   643   000005                     strcpy@d:
   644                           	callstack 0
   645   000005                     ___aldiv@divisor:
   646                           	callstack 0
   647   000005                     ___fleq@ff2:
   648                           	callstack 0
   649   000005                     ___flmul@a:
   650                           	callstack 0
   651                           
   652                           ; 4 bytes @ 0x4
   653   000005                     	ds	1
   654   000006                     ??_LCD_Init:
   655   000006                     LCD_Set_Cursor@COL:
   656                           	callstack 0
   657   000006                     LCD_Write_String@Str:
   658                           	callstack 0
   659                           
   660                           ; 2 bytes @ 0x5
   661   000006                     	ds	1
   662   000007                     ?_read_prec_or_width:
   663                           	callstack 0
   664   000007                     LCD_Init@I2C_Add:
   665                           	callstack 0
   666   000007                     LCD_Set_Cursor@ROW:
   667                           	callstack 0
   668   000007                     read_prec_or_width@fmt:
   669                           	callstack 0
   670   000007                     memcpy@tmp:
   671                           	callstack 0
   672   000007                     ADC_Read@digital:
   673                           	callstack 0
   674                           
   675                           ; 2 bytes @ 0x6
   676   000007                     	ds	1
   677   000008                     read_prec_or_width@ap:
   678                           	callstack 0
   679   000008                     LCD_Write_String@i:
   680                           	callstack 0
   681   000008                     memcpy@d:
   682                           	callstack 0
   683                           
   684                           ; 2 bytes @ 0x7
   685   000008                     	ds	1
   686   000009                     ??___flmul:
   687   000009                     ??___fleq:
   688   000009                     ADC_Read@channel:
   689                           	callstack 0
   690   000009                     ___aldiv@counter:
   691                           	callstack 0
   692   000009                     ___fltol@sign1:
   693                           	callstack 0
   694   000009                     read_prec_or_width@c:
   695                           	callstack 0
   696   000009                     ___fpclassifyf@e:
   697                           	callstack 0
   698   000009                     fputs@s:
   699                           	callstack 0
   700                           
   701                           ; 2 bytes @ 0x8
   702   000009                     	ds	1
   703   00000A                     ___aldiv@sign:
   704                           	callstack 0
   705   00000A                     ___fltol@exp1:
   706                           	callstack 0
   707   00000A                     read_prec_or_width@n:
   708                           	callstack 0
   709   00000A                     memcpy@s:
   710                           	callstack 0
   711                           
   712                           ; 2 bytes @ 0x9
   713   00000A                     	ds	1
   714   00000B                     fputs@fp:
   715                           	callstack 0
   716   00000B                     ___aldiv@quotient:
   717                           	callstack 0
   718   00000B                     ___fpclassifyf@u:
   719                           	callstack 0
   720                           
   721                           ; 4 bytes @ 0xA
   722   00000B                     	ds	1
   723   00000C                     fputs@c:
   724                           	callstack 0
   725                           
   726                           ; 1 bytes @ 0xB
   727   00000C                     	ds	1
   728   00000D                     ___flmul@sign:
   729                           	callstack 0
   730   00000D                     fputs@i:
   731                           	callstack 0
   732                           
   733                           ; 2 bytes @ 0xC
   734   00000D                     	ds	1
   735   00000E                     ___flmul@aexp:
   736                           	callstack 0
   737                           
   738                           ; 1 bytes @ 0xD
   739   00000E                     	ds	1
   740   00000F                     ?___xxtofl:
   741                           	callstack 0
   742   00000F                     pad@fp:
   743                           	callstack 0
   744   00000F                     ___flmul@grs:
   745                           	callstack 0
   746   00000F                     ___xxtofl@val:
   747                           	callstack 0
   748                           
   749                           ; 4 bytes @ 0xE
   750   00000F                     	ds	1
   751   000010                     pad@buf:
   752                           	callstack 0
   753                           
   754                           ; 2 bytes @ 0xF
   755   000010                     	ds	2
   756   000012                     pad@p:
   757                           	callstack 0
   758                           
   759                           ; 2 bytes @ 0x11
   760   000012                     	ds	1
   761   000013                     ??___xxtofl:
   762   000013                     ___flmul@bexp:
   763                           	callstack 0
   764                           
   765                           ; 1 bytes @ 0x12
   766   000013                     	ds	1
   767   000014                     ??_pad:
   768   000014                     ___flmul@prod:
   769                           	callstack 0
   770                           
   771                           ; 4 bytes @ 0x13
   772   000014                     	ds	1
   773   000015                     pad@i:
   774                           	callstack 0
   775                           
   776                           ; 2 bytes @ 0x14
   777   000015                     	ds	2
   778   000017                     ___xxtofl@sign:
   779                           	callstack 0
   780                           
   781                           ; 1 bytes @ 0x16
   782   000017                     	ds	1
   783   000018                     ___xxtofl@exp:
   784                           	callstack 0
   785   000018                     ___flmul@temp:
   786                           	callstack 0
   787                           
   788                           ; 2 bytes @ 0x17
   789   000018                     	ds	1
   790   000019                     ___xxtofl@arg:
   791                           	callstack 0
   792                           
   793                           ; 4 bytes @ 0x18
   794   000019                     	ds	1
   795   00001A                     ?___fladd:
   796                           	callstack 0
   797   00001A                     ___flge@ff1:
   798                           	callstack 0
   799   00001A                     ___fladd@b:
   800                           	callstack 0
   801                           
   802                           ; 4 bytes @ 0x19
   803   00001A                     	ds	4
   804   00001E                     ___flge@ff2:
   805                           	callstack 0
   806   00001E                     ___fladd@a:
   807                           	callstack 0
   808                           
   809                           ; 4 bytes @ 0x1D
   810   00001E                     	ds	4
   811   000022                     ??___fladd:
   812   000022                     ??___flge:
   813                           
   814                           ; 1 bytes @ 0x21
   815   000022                     	ds	4
   816   000026                     ___fladd@signs:
   817                           	callstack 0
   818                           
   819                           ; 1 bytes @ 0x25
   820   000026                     	ds	1
   821   000027                     ___fladd@aexp:
   822                           	callstack 0
   823                           
   824                           ; 1 bytes @ 0x26
   825   000027                     	ds	1
   826   000028                     ___fladd@bexp:
   827                           	callstack 0
   828                           
   829                           ; 1 bytes @ 0x27
   830   000028                     	ds	1
   831   000029                     ___fladd@grs:
   832                           	callstack 0
   833                           
   834                           ; 1 bytes @ 0x28
   835   000029                     	ds	1
   836   00002A                     ?___fldiv:
   837                           	callstack 0
   838   00002A                     ?___flsub:
   839                           	callstack 0
   840   00002A                     ___flsub@b:
   841                           	callstack 0
   842   00002A                     ___fldiv@b:
   843                           	callstack 0
   844                           
   845                           ; 4 bytes @ 0x29
   846   00002A                     	ds	4
   847   00002E                     ___flsub@a:
   848                           	callstack 0
   849   00002E                     ___fldiv@a:
   850                           	callstack 0
   851                           
   852                           ; 4 bytes @ 0x2D
   853   00002E                     	ds	4
   854   000032                     ??___fldiv:
   855   000032                     
   856                           ; 1 bytes @ 0x31
   857   000032                     	ds	4
   858   000036                     ___fldiv@rem:
   859                           	callstack 0
   860                           
   861                           ; 4 bytes @ 0x35
   862   000036                     	ds	4
   863   00003A                     ___fldiv@sign:
   864                           	callstack 0
   865                           
   866                           ; 1 bytes @ 0x39
   867   00003A                     	ds	1
   868   00003B                     ___fldiv@new_exp:
   869                           	callstack 0
   870                           
   871                           ; 2 bytes @ 0x3A
   872   00003B                     	ds	2
   873   00003D                     ___fldiv@grs:
   874                           	callstack 0
   875                           
   876                           ; 4 bytes @ 0x3C
   877   00003D                     	ds	4
   878   000041                     ___fldiv@bexp:
   879                           	callstack 0
   880                           
   881                           ; 1 bytes @ 0x40
   882   000041                     	ds	1
   883   000042                     ___fldiv@aexp:
   884                           	callstack 0
   885                           
   886                           ; 1 bytes @ 0x41
   887   000042                     	ds	1
   888   000043                     ?_logf:
   889                           	callstack 0
   890   000043                     ?_floorf:
   891                           	callstack 0
   892   000043                     logf@x:
   893                           	callstack 0
   894   000043                     floorf@x:
   895                           	callstack 0
   896                           
   897                           ; 4 bytes @ 0x42
   898   000043                     	ds	4
   899   000047                     ??_logf:
   900   000047                     ??_floorf:
   901                           
   902                           ; 1 bytes @ 0x46
   903   000047                     	ds	6
   904   00004D                     ?_termistorin:
   905                           	callstack 0
   906   00004D                     termistorin@AN0RES:
   907                           	callstack 0
   908   00004D                     floorf@m:
   909                           	callstack 0
   910                           
   911                           ; 4 bytes @ 0x4C
   912   00004D                     	ds	4
   913   000051                     floorf@e:
   914                           	callstack 0
   915                           
   916                           ; 2 bytes @ 0x50
   917   000051                     	ds	2
   918   000053                     floorf@u:
   919                           	callstack 0
   920                           
   921                           ; 4 bytes @ 0x52
   922   000053                     	ds	4
   923   000057                     efgtoa@fp:
   924                           	callstack 0
   925                           
   926                           ; 1 bytes @ 0x56
   927   000057                     	ds	1
   928   000058                     efgtoa@f:
   929                           	callstack 0
   930                           
   931                           ; 4 bytes @ 0x57
   932   000058                     	ds	4
   933   00005C                     efgtoa@c:
   934                           	callstack 0
   935                           
   936                           ; 1 bytes @ 0x5B
   937   00005C                     	ds	1
   938   00005D                     ??_efgtoa:
   939                           
   940                           ; 1 bytes @ 0x5C
   941   00005D                     	ds	2
   942   00005F                     ??_vfpfcnvrt:
   943                           
   944                           ; 1 bytes @ 0x5E
   945   00005F                     	ds	1
   946   000060                     
   947                           ; 1 bytes @ 0x5F
   948 ;;
   949 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   950 ;;
   951 ;; *************** function _main *****************
   952 ;; Defined at:
   953 ;;		line 68 in file "newmain1.c"
   954 ;; Parameters:    Size  Location     Type
   955 ;;		None
   956 ;; Auto vars:     Size  Location     Type
   957 ;;		None
   958 ;; Return value:  Size  Location     Type
   959 ;;                  1    wreg      void 
   960 ;; Registers used:
   961 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   962 ;; Tracked objects:
   963 ;;		On entry : 0/0
   964 ;;		On exit  : 0/0
   965 ;;		Unchanged: 0/0
   966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   967 ;;      Params:         0       0       0       0       0       0       0       0       0
   968 ;;      Locals:         0       0       0       0       0       0       0       0       0
   969 ;;      Temps:          0       2       0       0       0       0       0       0       0
   970 ;;      Totals:         0       2       0       0       0       0       0       0       0
   971 ;;Total ram usage:        2 bytes
   972 ;; Hardware stack levels required when called: 9
   973 ;; This function calls:
   974 ;;		_ADC_Init
   975 ;;		_I2C_Master_Init
   976 ;;		_LCD_Clear
   977 ;;		_LCD_Init
   978 ;;		_menu
   979 ;; This function is called by:
   980 ;;		Startup code after reset
   981 ;; This function uses a non-reentrant model
   982 ;;
   983                           
   984                           	psect	text0
   985   00380A                     __ptext0:
   986                           	callstack 0
   987   00380A                     _main:
   988                           	callstack 22
   989   00380A                     
   990                           ;newmain1.c: 69:     _delay((unsigned long)((300)*(4000000/4000.0)));
   991   00380A  0E02               	movlw	2
   992   00380C  0100               	movlb	0	; () banked
   993   00380E  6FBA               	movwf	(??_main+1)& (0+255),b
   994   003810  0E86               	movlw	134
   995   003812  6FB9               	movwf	??_main& (0+255),b
   996   003814  0E99               	movlw	153
   997   003816                     u5687:
   998   003816  2EE8               	decfsz	wreg,f,c
   999   003818  D7FE               	bra	u5687
  1000   00381A  2FB9               	decfsz	??_main& (0+255),f,b
  1001   00381C  D7FC               	bra	u5687
  1002   00381E  2FBA               	decfsz	(??_main+1)& (0+255),f,b
  1003   003820  D7FA               	bra	u5687
  1004   003822                     
  1005                           ;newmain1.c: 70:     ADC_Init();
  1006   003822  ECB5  F01C         	call	_ADC_Init	;wreg free
  1007   003826                     
  1008                           ;newmain1.c: 71:     I2C_Master_Init();
  1009   003826  ECAA  F01C         	call	_I2C_Master_Init	;wreg free
  1010   00382A                     
  1011                           ;newmain1.c: 72:     LCD_Init(0X4E);
  1012   00382A  0E4E               	movlw	78
  1013   00382C  ECBC  F018         	call	_LCD_Init
  1014   003830                     
  1015                           ;newmain1.c: 73:     LCD_Clear();
  1016   003830  ECBF  F01C         	call	_LCD_Clear	;wreg free
  1017   003834                     l4967:
  1018                           
  1019                           ;newmain1.c: 75:         menu();
  1020   003834  EC46  F018         	call	_menu	;wreg free
  1021   003838  EF1A  F01C         	goto	l4967
  1022   00383C  EF00  F000         	goto	start
  1023   003840                     __end_of_main:
  1024                           	callstack 0
  1025                           
  1026 ;; *************** function _menu *****************
  1027 ;; Defined at:
  1028 ;;		line 53 in file "newmain1.c"
  1029 ;; Parameters:    Size  Location     Type
  1030 ;;		None
  1031 ;; Auto vars:     Size  Location     Type
  1032 ;;  tempout         4   85[BANK0 ] void 
  1033 ;;  tempin          4   81[BANK0 ] void 
  1034 ;; Return value:  Size  Location     Type
  1035 ;;                  1    wreg      void 
  1036 ;; Registers used:
  1037 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1038 ;; Tracked objects:
  1039 ;;		On entry : 0/0
  1040 ;;		On exit  : 0/0
  1041 ;;		Unchanged: 0/0
  1042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1043 ;;      Params:         0       0       0       0       0       0       0       0       0
  1044 ;;      Locals:         0       8       0       0       0       0       0       0       0
  1045 ;;      Temps:          0       2       0       0       0       0       0       0       0
  1046 ;;      Totals:         0      10       0       0       0       0       0       0       0
  1047 ;;Total ram usage:       10 bytes
  1048 ;; Hardware stack levels used: 1
  1049 ;; Hardware stack levels required when called: 8
  1050 ;; This function calls:
  1051 ;;		_ADC_Read
  1052 ;;		_LCD_Set_Cursor
  1053 ;;		_LCD_Write_String
  1054 ;;		_sprintf
  1055 ;;		_termistorin
  1056 ;; This function is called by:
  1057 ;;		_main
  1058 ;; This function uses a non-reentrant model
  1059 ;;
  1060                           
  1061                           	psect	text1
  1062   00308C                     __ptext1:
  1063                           	callstack 0
  1064   00308C                     _menu:
  1065                           	callstack 22
  1066   00308C                     
  1067                           ;newmain1.c: 54:     AN0RES = ADC_Read(0);
  1068   00308C  0E00               	movlw	0
  1069   00308E  EC28  F01A         	call	_ADC_Read
  1070   003092  C001  F0CF         	movff	?_ADC_Read,_AN0RES
  1071   003096  C002  F0D0         	movff	?_ADC_Read+1,_AN0RES+1
  1072                           
  1073                           ;newmain1.c: 55:     AN1RES = ADC_Read(1);
  1074   00309A  0E01               	movlw	1
  1075   00309C  EC28  F01A         	call	_ADC_Read
  1076   0030A0  C001  F0CD         	movff	?_ADC_Read,_AN1RES
  1077   0030A4  C002  F0CE         	movff	?_ADC_Read+1,_AN1RES+1
  1078   0030A8                     
  1079                           ;newmain1.c: 56:     double tempin = termistorin(AN0RES);
  1080   0030A8  C0CF  F04D         	movff	_AN0RES,termistorin@AN0RES
  1081   0030AC  C0D0  F04E         	movff	_AN0RES+1,termistorin@AN0RES+1
  1082   0030B0  EC7F  F014         	call	_termistorin	;wreg free
  1083   0030B4  C04D  F0B1         	movff	?_termistorin,menu@tempin
  1084   0030B8  C04E  F0B2         	movff	?_termistorin+1,menu@tempin+1
  1085   0030BC  C04F  F0B3         	movff	?_termistorin+2,menu@tempin+2
  1086   0030C0  C050  F0B4         	movff	?_termistorin+3,menu@tempin+3
  1087   0030C4                     
  1088                           ;newmain1.c: 57:     double tempout = termistorin(AN1RES);
  1089   0030C4  C0CD  F04D         	movff	_AN1RES,termistorin@AN0RES
  1090   0030C8  C0CE  F04E         	movff	_AN1RES+1,termistorin@AN0RES+1
  1091   0030CC  EC7F  F014         	call	_termistorin	;wreg free
  1092   0030D0  C04D  F0B5         	movff	?_termistorin,menu@tempout
  1093   0030D4  C04E  F0B6         	movff	?_termistorin+1,menu@tempout+1
  1094   0030D8  C04F  F0B7         	movff	?_termistorin+2,menu@tempout+2
  1095   0030DC  C050  F0B8         	movff	?_termistorin+3,menu@tempout+3
  1096   0030E0                     
  1097                           ;newmain1.c: 58:     sprintf(TempinSTR, "IN: %.2f%cC  ",tempin,0xdf);
  1098   0030E0  0ED4               	movlw	low _TempinSTR
  1099   0030E2  0100               	movlb	0	; () banked
  1100   0030E4  6F99               	movwf	sprintf@s& (0+255),b
  1101   0030E6  6B9A               	clrf	(sprintf@s+1)& (0+255),b
  1102   0030E8  0E28               	movlw	low STR_1
  1103   0030EA  6F9B               	movwf	sprintf@fmt& (0+255),b
  1104   0030EC  C0B1  F09C         	movff	menu@tempin,?_sprintf+3
  1105   0030F0  C0B2  F09D         	movff	menu@tempin+1,?_sprintf+4
  1106   0030F4  C0B3  F09E         	movff	menu@tempin+2,?_sprintf+5
  1107   0030F8  C0B4  F09F         	movff	menu@tempin+3,?_sprintf+6
  1108   0030FC  0E00               	movlw	0
  1109   0030FE  6FA1               	movwf	(?_sprintf+8)& (0+255),b
  1110   003100  0EDF               	movlw	223
  1111   003102  6FA0               	movwf	(?_sprintf+7)& (0+255),b
  1112   003104  EC6C  F01B         	call	_sprintf	;wreg free
  1113   003108                     
  1114                           ;newmain1.c: 59:     sprintf(TempoutSTR, "OUT: %.2f%cC  ",tempout,0xdf);
  1115   003108  0E50               	movlw	low _TempoutSTR
  1116   00310A  0100               	movlb	0	; () banked
  1117   00310C  6F99               	movwf	sprintf@s& (0+255),b
  1118   00310E  0E01               	movlw	high _TempoutSTR
  1119   003110  6F9A               	movwf	(sprintf@s+1)& (0+255),b
  1120   003112  0E19               	movlw	low STR_2
  1121   003114  6F9B               	movwf	sprintf@fmt& (0+255),b
  1122   003116  C0B5  F09C         	movff	menu@tempout,?_sprintf+3
  1123   00311A  C0B6  F09D         	movff	menu@tempout+1,?_sprintf+4
  1124   00311E  C0B7  F09E         	movff	menu@tempout+2,?_sprintf+5
  1125   003122  C0B8  F09F         	movff	menu@tempout+3,?_sprintf+6
  1126   003126  0E00               	movlw	0
  1127   003128  6FA1               	movwf	(?_sprintf+8)& (0+255),b
  1128   00312A  0EDF               	movlw	223
  1129   00312C  6FA0               	movwf	(?_sprintf+7)& (0+255),b
  1130   00312E  EC6C  F01B         	call	_sprintf	;wreg free
  1131                           
  1132                           ;newmain1.c: 60:     LCD_Set_Cursor(1, 1);
  1133   003132  0E01               	movlw	1
  1134   003134  6E06               	movwf	LCD_Set_Cursor@COL^0,c
  1135   003136  0E01               	movlw	1
  1136   003138  ECD5  F01A         	call	_LCD_Set_Cursor
  1137   00313C                     
  1138                           ;newmain1.c: 61:     LCD_Write_String(TempinSTR);
  1139   00313C  0ED4               	movlw	low _TempinSTR
  1140   00313E  6E06               	movwf	LCD_Write_String@Str^0,c
  1141   003140  6A07               	clrf	(LCD_Write_String@Str+1)^0,c
  1142   003142  ECAC  F01B         	call	_LCD_Write_String	;wreg free
  1143   003146                     
  1144                           ;newmain1.c: 62:     LCD_Set_Cursor(2, 1);
  1145   003146  0E01               	movlw	1
  1146   003148  6E06               	movwf	LCD_Set_Cursor@COL^0,c
  1147   00314A  0E02               	movlw	2
  1148   00314C  ECD5  F01A         	call	_LCD_Set_Cursor
  1149                           
  1150                           ;newmain1.c: 63:     LCD_Write_String(TempoutSTR);
  1151   003150  0E50               	movlw	low _TempoutSTR
  1152   003152  6E06               	movwf	LCD_Write_String@Str^0,c
  1153   003154  0E01               	movlw	high _TempoutSTR
  1154   003156  6E07               	movwf	(LCD_Write_String@Str+1)^0,c
  1155   003158  ECAC  F01B         	call	_LCD_Write_String	;wreg free
  1156   00315C                     
  1157                           ;newmain1.c: 64:     _delay((unsigned long)((500)*(4000000/4000.0)));
  1158   00315C  0E03               	movlw	3
  1159   00315E  0100               	movlb	0	; () banked
  1160   003160  6FB0               	movwf	(??_menu+1)& (0+255),b
  1161   003162  0E8A               	movlw	138
  1162   003164  6FAF               	movwf	??_menu& (0+255),b
  1163   003166  0E55               	movlw	85
  1164   003168                     u5697:
  1165   003168  2EE8               	decfsz	wreg,f,c
  1166   00316A  D7FE               	bra	u5697
  1167   00316C  2FAF               	decfsz	??_menu& (0+255),f,b
  1168   00316E  D7FC               	bra	u5697
  1169   003170  2FB0               	decfsz	(??_menu+1)& (0+255),f,b
  1170   003172  D7FA               	bra	u5697
  1171   003174  D000               	nop2	
  1172   003176  0012               	return		;funcret
  1173   003178                     __end_of_menu:
  1174                           	callstack 0
  1175                           
  1176 ;; *************** function _termistorin *****************
  1177 ;; Defined at:
  1178 ;;		line 37 in file "newmain1.c"
  1179 ;; Parameters:    Size  Location     Type
  1180 ;;  AN0RES          2   76[COMRAM] int 
  1181 ;; Auto vars:     Size  Location     Type
  1182 ;;  tempin          4   70[BANK0 ] int 
  1183 ;; Return value:  Size  Location     Type
  1184 ;;                  4   76[COMRAM] int 
  1185 ;; Registers used:
  1186 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1187 ;; Tracked objects:
  1188 ;;		On entry : 0/0
  1189 ;;		On exit  : 0/0
  1190 ;;		Unchanged: 0/0
  1191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1192 ;;      Params:         4       0       0       0       0       0       0       0       0
  1193 ;;      Locals:         0      16       0       0       0       0       0       0       0
  1194 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1195 ;;      Totals:         4      16       0       0       0       0       0       0       0
  1196 ;;Total ram usage:       20 bytes
  1197 ;; Hardware stack levels used: 1
  1198 ;; Hardware stack levels required when called: 3
  1199 ;; This function calls:
  1200 ;;		___aldiv
  1201 ;;		___fladd
  1202 ;;		___fldiv
  1203 ;;		___flmul
  1204 ;;		___xxtofl
  1205 ;;		_logf
  1206 ;; This function is called by:
  1207 ;;		_menu
  1208 ;; This function uses a non-reentrant model
  1209 ;;
  1210                           
  1211                           	psect	text2
  1212   0028FE                     __ptext2:
  1213                           	callstack 0
  1214   0028FE                     _termistorin:
  1215                           	callstack 26
  1216   0028FE                     
  1217                           ;newmain1.c: 38:     double tempin;;newmain1.c: 39:     tempin = logf(((10240000 / AN0RE
      +                          S) - 10000));
  1218   0028FE  C04D  F005         	movff	termistorin@AN0RES,___aldiv@divisor
  1219   002902  C04E  F006         	movff	termistorin@AN0RES+1,___aldiv@divisor+1
  1220   002906  0E00               	movlw	0
  1221   002908  BE06               	btfsc	(___aldiv@divisor+1)^0,7,c
  1222   00290A  0EFF               	movlw	-1
  1223   00290C  6E07               	movwf	(___aldiv@divisor+2)^0,c
  1224   00290E  6E08               	movwf	(___aldiv@divisor+3)^0,c
  1225   002910  0E00               	movlw	0
  1226   002912  6E01               	movwf	___aldiv@dividend^0,c
  1227   002914  0E40               	movlw	64
  1228   002916  6E02               	movwf	(___aldiv@dividend+1)^0,c
  1229   002918  0E9C               	movlw	156
  1230   00291A  6E03               	movwf	(___aldiv@dividend+2)^0,c
  1231   00291C  0E00               	movlw	0
  1232   00291E  6E04               	movwf	(___aldiv@dividend+3)^0,c
  1233   002920  EC3C  F016         	call	___aldiv	;wreg free
  1234   002924  0EF0               	movlw	240
  1235   002926  2401               	addwf	?___aldiv^0,w,c
  1236   002928  6E0F               	movwf	___xxtofl@val^0,c
  1237   00292A  0ED8               	movlw	216
  1238   00292C  2002               	addwfc	(?___aldiv+1)^0,w,c
  1239   00292E  6E10               	movwf	(___xxtofl@val+1)^0,c
  1240   002930  0EFF               	movlw	255
  1241   002932  2003               	addwfc	(?___aldiv+2)^0,w,c
  1242   002934  6E11               	movwf	(___xxtofl@val+2)^0,c
  1243   002936  0EFF               	movlw	255
  1244   002938  2004               	addwfc	(?___aldiv+3)^0,w,c
  1245   00293A  6E12               	movwf	(___xxtofl@val+3)^0,c
  1246   00293C  0E01               	movlw	1
  1247   00293E  EC62  F015         	call	___xxtofl
  1248   002942  C00F  F09A         	movff	?___xxtofl,_termistorin$1209
  1249   002946  C010  F09B         	movff	?___xxtofl+1,_termistorin$1209+1
  1250   00294A  C011  F09C         	movff	?___xxtofl+2,_termistorin$1209+2
  1251   00294E  C012  F09D         	movff	?___xxtofl+3,_termistorin$1209+3
  1252   002952                     
  1253                           ;newmain1.c: 38:     double tempin;;newmain1.c: 39:     tempin = logf(((10240000 / AN0RE
      +                          S) - 10000));
  1254   002952  C09A  F043         	movff	_termistorin$1209,logf@x
  1255   002956  C09B  F044         	movff	_termistorin$1209+1,logf@x+1
  1256   00295A  C09C  F045         	movff	_termistorin$1209+2,logf@x+2
  1257   00295E  C09D  F046         	movff	_termistorin$1209+3,logf@x+3
  1258   002962  EC14  F009         	call	_logf	;wreg free
  1259   002966  C043  F0A6         	movff	?_logf,termistorin@tempin
  1260   00296A  C044  F0A7         	movff	?_logf+1,termistorin@tempin+1
  1261   00296E  C045  F0A8         	movff	?_logf+2,termistorin@tempin+2
  1262   002972  C046  F0A9         	movff	?_logf+3,termistorin@tempin+3
  1263   002976                     
  1264                           ;newmain1.c: 40:     tempin = 1 / (0.001129148 + (0.000234125 + (0.0000000876741 * tempi
      +                          n * tempin)) * tempin);
  1265   002976  0E59               	movlw	89
  1266   002978  6E05               	movwf	___flmul@a^0,c
  1267   00297A  0E47               	movlw	71
  1268   00297C  6E06               	movwf	(___flmul@a+1)^0,c
  1269   00297E  0EBC               	movlw	188
  1270   002980  6E07               	movwf	(___flmul@a+2)^0,c
  1271   002982  0E33               	movlw	51
  1272   002984  6E08               	movwf	(___flmul@a+3)^0,c
  1273   002986  C0A6  F001         	movff	termistorin@tempin,___flmul@b
  1274   00298A  C0A7  F002         	movff	termistorin@tempin+1,___flmul@b+1
  1275   00298E  C0A8  F003         	movff	termistorin@tempin+2,___flmul@b+2
  1276   002992  C0A9  F004         	movff	termistorin@tempin+3,___flmul@b+3
  1277   002996  EC82  F00E         	call	___flmul	;wreg free
  1278   00299A  C001  F09E         	movff	?___flmul,_termistorin$1210
  1279   00299E  C002  F09F         	movff	?___flmul+1,_termistorin$1210+1
  1280   0029A2  C003  F0A0         	movff	?___flmul+2,_termistorin$1210+2
  1281   0029A6  C004  F0A1         	movff	?___flmul+3,_termistorin$1210+3
  1282   0029AA                     
  1283                           ;newmain1.c: 40:     tempin = 1 / (0.001129148 + (0.000234125 + (0.0000000876741 * tempi
      +                          n * tempin)) * tempin);
  1284   0029AA  0E73               	movlw	115
  1285   0029AC  6E1E               	movwf	___fladd@a^0,c
  1286   0029AE  0E7F               	movlw	127
  1287   0029B0  6E1F               	movwf	(___fladd@a+1)^0,c
  1288   0029B2  0E75               	movlw	117
  1289   0029B4  6E20               	movwf	(___fladd@a+2)^0,c
  1290   0029B6  0E39               	movlw	57
  1291   0029B8  6E21               	movwf	(___fladd@a+3)^0,c
  1292   0029BA  C0A6  F005         	movff	termistorin@tempin,___flmul@a
  1293   0029BE  C0A7  F006         	movff	termistorin@tempin+1,___flmul@a+1
  1294   0029C2  C0A8  F007         	movff	termistorin@tempin+2,___flmul@a+2
  1295   0029C6  C0A9  F008         	movff	termistorin@tempin+3,___flmul@a+3
  1296   0029CA  C09E  F001         	movff	_termistorin$1210,___flmul@b
  1297   0029CE  C09F  F002         	movff	_termistorin$1210+1,___flmul@b+1
  1298   0029D2  C0A0  F003         	movff	_termistorin$1210+2,___flmul@b+2
  1299   0029D6  C0A1  F004         	movff	_termistorin$1210+3,___flmul@b+3
  1300   0029DA  EC82  F00E         	call	___flmul	;wreg free
  1301   0029DE  C001  F01A         	movff	?___flmul,___fladd@b
  1302   0029E2  C002  F01B         	movff	?___flmul+1,___fladd@b+1
  1303   0029E6  C003  F01C         	movff	?___flmul+2,___fladd@b+2
  1304   0029EA  C004  F01D         	movff	?___flmul+3,___fladd@b+3
  1305   0029EE  EC22  F00C         	call	___fladd	;wreg free
  1306   0029F2  C01A  F0A2         	movff	?___fladd,_termistorin$1211
  1307   0029F6  C01B  F0A3         	movff	?___fladd+1,_termistorin$1211+1
  1308   0029FA  C01C  F0A4         	movff	?___fladd+2,_termistorin$1211+2
  1309   0029FE  C01D  F0A5         	movff	?___fladd+3,_termistorin$1211+3
  1310   002A02                     
  1311                           ;newmain1.c: 40:     tempin = 1 / (0.001129148 + (0.000234125 + (0.0000000876741 * tempi
      +                          n * tempin)) * tempin);
  1312   002A02  0E00               	movlw	0
  1313   002A04  6E2A               	movwf	___fldiv@b^0,c
  1314   002A06  0E00               	movlw	0
  1315   002A08  6E2B               	movwf	(___fldiv@b+1)^0,c
  1316   002A0A  0E80               	movlw	128
  1317   002A0C  6E2C               	movwf	(___fldiv@b+2)^0,c
  1318   002A0E  0E3F               	movlw	63
  1319   002A10  6E2D               	movwf	(___fldiv@b+3)^0,c
  1320   002A12  0EEB               	movlw	235
  1321   002A14  6E1E               	movwf	___fladd@a^0,c
  1322   002A16  0EFF               	movlw	255
  1323   002A18  6E1F               	movwf	(___fladd@a+1)^0,c
  1324   002A1A  0E93               	movlw	147
  1325   002A1C  6E20               	movwf	(___fladd@a+2)^0,c
  1326   002A1E  0E3A               	movlw	58
  1327   002A20  6E21               	movwf	(___fladd@a+3)^0,c
  1328   002A22  C0A6  F005         	movff	termistorin@tempin,___flmul@a
  1329   002A26  C0A7  F006         	movff	termistorin@tempin+1,___flmul@a+1
  1330   002A2A  C0A8  F007         	movff	termistorin@tempin+2,___flmul@a+2
  1331   002A2E  C0A9  F008         	movff	termistorin@tempin+3,___flmul@a+3
  1332   002A32  C0A2  F001         	movff	_termistorin$1211,___flmul@b
  1333   002A36  C0A3  F002         	movff	_termistorin$1211+1,___flmul@b+1
  1334   002A3A  C0A4  F003         	movff	_termistorin$1211+2,___flmul@b+2
  1335   002A3E  C0A5  F004         	movff	_termistorin$1211+3,___flmul@b+3
  1336   002A42  EC82  F00E         	call	___flmul	;wreg free
  1337   002A46  C001  F01A         	movff	?___flmul,___fladd@b
  1338   002A4A  C002  F01B         	movff	?___flmul+1,___fladd@b+1
  1339   002A4E  C003  F01C         	movff	?___flmul+2,___fladd@b+2
  1340   002A52  C004  F01D         	movff	?___flmul+3,___fladd@b+3
  1341   002A56  EC22  F00C         	call	___fladd	;wreg free
  1342   002A5A  C01A  F02E         	movff	?___fladd,___fldiv@a
  1343   002A5E  C01B  F02F         	movff	?___fladd+1,___fldiv@a+1
  1344   002A62  C01C  F030         	movff	?___fladd+2,___fldiv@a+2
  1345   002A66  C01D  F031         	movff	?___fladd+3,___fldiv@a+3
  1346   002A6A  EC97  F010         	call	___fldiv	;wreg free
  1347   002A6E  C02A  F0A6         	movff	?___fldiv,termistorin@tempin
  1348   002A72  C02B  F0A7         	movff	?___fldiv+1,termistorin@tempin+1
  1349   002A76  C02C  F0A8         	movff	?___fldiv+2,termistorin@tempin+2
  1350   002A7A  C02D  F0A9         	movff	?___fldiv+3,termistorin@tempin+3
  1351                           
  1352                           ;newmain1.c: 41:     tempin = tempin - 273.15;
  1353   002A7E  C0A6  F01A         	movff	termistorin@tempin,___fladd@b
  1354   002A82  C0A7  F01B         	movff	termistorin@tempin+1,___fladd@b+1
  1355   002A86  C0A8  F01C         	movff	termistorin@tempin+2,___fladd@b+2
  1356   002A8A  C0A9  F01D         	movff	termistorin@tempin+3,___fladd@b+3
  1357   002A8E  0E33               	movlw	51
  1358   002A90  6E1E               	movwf	___fladd@a^0,c
  1359   002A92  0E93               	movlw	147
  1360   002A94  6E1F               	movwf	(___fladd@a+1)^0,c
  1361   002A96  0E88               	movlw	136
  1362   002A98  6E20               	movwf	(___fladd@a+2)^0,c
  1363   002A9A  0EC3               	movlw	195
  1364   002A9C  6E21               	movwf	(___fladd@a+3)^0,c
  1365   002A9E  EC22  F00C         	call	___fladd	;wreg free
  1366   002AA2  C01A  F0A6         	movff	?___fladd,termistorin@tempin
  1367   002AA6  C01B  F0A7         	movff	?___fladd+1,termistorin@tempin+1
  1368   002AAA  C01C  F0A8         	movff	?___fladd+2,termistorin@tempin+2
  1369   002AAE  C01D  F0A9         	movff	?___fladd+3,termistorin@tempin+3
  1370   002AB2                     
  1371                           ;newmain1.c: 42:     return tempin;
  1372   002AB2  C0A6  F04D         	movff	termistorin@tempin,?_termistorin
  1373   002AB6  C0A7  F04E         	movff	termistorin@tempin+1,?_termistorin+1
  1374   002ABA  C0A8  F04F         	movff	termistorin@tempin+2,?_termistorin+2
  1375   002ABE  C0A9  F050         	movff	termistorin@tempin+3,?_termistorin+3
  1376   002AC2  0012               	return		;funcret
  1377   002AC4                     __end_of_termistorin:
  1378                           	callstack 0
  1379                           
  1380 ;; *************** function _logf *****************
  1381 ;; Defined at:
  1382 ;;		line 29 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\logf.c"
  1383 ;; Parameters:    Size  Location     Type
  1384 ;;  x               4   66[COMRAM] float 
  1385 ;; Auto vars:     Size  Location     Type
  1386 ;;  ux              4   54[BANK0 ] struct .
  1387 ;;  w               4   46[BANK0 ] float 
  1388 ;;  z               4   42[BANK0 ] float 
  1389 ;;  s               4   38[BANK0 ] float 
  1390 ;;  dk              4   34[BANK0 ] float 
  1391 ;;  hfsq            4   30[BANK0 ] float 
  1392 ;;  t2              4    8[BANK0 ] float 
  1393 ;;  t1              4    4[BANK0 ] float 
  1394 ;;  R               4    0[BANK0 ] float 
  1395 ;;  k               2   28[BANK0 ] int 
  1396 ;; Return value:  Size  Location     Type
  1397 ;;                  4   66[COMRAM] float 
  1398 ;; Registers used:
  1399 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  1400 ;; Tracked objects:
  1401 ;;		On entry : 0/0
  1402 ;;		On exit  : 0/0
  1403 ;;		Unchanged: 0/0
  1404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1405 ;;      Params:         4       0       0       0       0       0       0       0       0
  1406 ;;      Locals:         0      58       0       0       0       0       0       0       0
  1407 ;;      Temps:          6       0       0       0       0       0       0       0       0
  1408 ;;      Totals:        10      58       0       0       0       0       0       0       0
  1409 ;;Total ram usage:       68 bytes
  1410 ;; Hardware stack levels used: 1
  1411 ;; Hardware stack levels required when called: 2
  1412 ;; This function calls:
  1413 ;;		___fladd
  1414 ;;		___fldiv
  1415 ;;		___flmul
  1416 ;;		___flsub
  1417 ;;		___xxtofl
  1418 ;; This function is called by:
  1419 ;;		_termistorin
  1420 ;;		_termistorout
  1421 ;; This function uses a non-reentrant model
  1422 ;;
  1423                           
  1424                           	psect	text3
  1425   001228                     __ptext3:
  1426                           	callstack 0
  1427   001228                     _logf:
  1428                           	callstack 26
  1429   001228  C0C3  F096         	movff	logf@F472,logf@ux
  1430   00122C  C0C4  F097         	movff	logf@F472+1,logf@ux+1
  1431   001230  C0C5  F098         	movff	logf@F472+2,logf@ux+2
  1432   001234  C0C6  F099         	movff	logf@F472+3,logf@ux+3
  1433   001238  C043  F096         	movff	logf@x,logf@ux
  1434   00123C  C044  F097         	movff	logf@x+1,logf@ux+1
  1435   001240  C045  F098         	movff	logf@x+2,logf@ux+2
  1436   001244  C046  F099         	movff	logf@x+3,logf@ux+3
  1437   001248  0E00               	movlw	0
  1438   00124A  0100               	movlb	0	; () banked
  1439   00124C  6F7D               	movwf	(logf@k+1)& (0+255),b
  1440   00124E  0E00               	movlw	0
  1441   001250  6F7C               	movwf	logf@k& (0+255),b
  1442   001252                     
  1443                           ; BSR set to: 0
  1444   001252  5199               	movf	(logf@ux+3)& (0+255),w,b
  1445   001254  E109               	bnz	u5590
  1446   001256  0E80               	movlw	128
  1447   001258  5D98               	subwf	(logf@ux+2)& (0+255),w,b
  1448   00125A  A0D8               	btfss	status,0,c
  1449   00125C  EF32  F009         	goto	u5591
  1450   001260  EF34  F009         	goto	u5590
  1451   001264                     u5591:
  1452   001264  EF3B  F009         	goto	l4817
  1453   001268                     u5590:
  1454   001268                     
  1455                           ; BSR set to: 0
  1456   001268  AF99               	btfss	(logf@ux+3)& (0+255),7,b
  1457   00126A  EF39  F009         	goto	u5601
  1458   00126E  EF3B  F009         	goto	u5600
  1459   001272                     u5601:
  1460   001272  EF96  F009         	goto	l4835
  1461   001276                     u5600:
  1462   001276                     l4817:
  1463                           
  1464                           ; BSR set to: 0
  1465   001276  90D8               	bcf	status,0,c
  1466   001278  3596               	rlcf	logf@ux& (0+255),w,b
  1467   00127A  6E47               	movwf	??_logf^0,c
  1468   00127C  3597               	rlcf	(logf@ux+1)& (0+255),w,b
  1469   00127E  6E48               	movwf	(??_logf+1)^0,c
  1470   001280  3598               	rlcf	(logf@ux+2)& (0+255),w,b
  1471   001282  6E49               	movwf	(??_logf+2)^0,c
  1472   001284  3599               	rlcf	(logf@ux+3)& (0+255),w,b
  1473   001286  6E4A               	movwf	(??_logf+3)^0,c
  1474   001288  5047               	movf	??_logf^0,w,c
  1475   00128A  1048               	iorwf	(??_logf+1)^0,w,c
  1476   00128C  1049               	iorwf	(??_logf+2)^0,w,c
  1477   00128E  104A               	iorwf	(??_logf+3)^0,w,c
  1478   001290  A4D8               	btfss	status,2,c
  1479   001292  EF4D  F009         	goto	u5611
  1480   001296  EF4F  F009         	goto	u5610
  1481   00129A                     u5611:
  1482   00129A  EF61  F009         	goto	l885
  1483   00129E                     u5610:
  1484   00129E                     
  1485                           ; BSR set to: 0
  1486   00129E  0E00               	movlw	0
  1487   0012A0  6F96               	movwf	logf@ux& (0+255),b
  1488   0012A2  0E00               	movlw	0
  1489   0012A4  6F97               	movwf	(logf@ux+1)& (0+255),b
  1490   0012A6  0E80               	movlw	128
  1491   0012A8  6F98               	movwf	(logf@ux+2)& (0+255),b
  1492   0012AA  0EFF               	movlw	255
  1493   0012AC  6F99               	movwf	(logf@ux+3)& (0+255),b
  1494   0012AE                     l4821:
  1495                           
  1496                           ; BSR set to: 0
  1497   0012AE  C096  F043         	movff	logf@ux,?_logf
  1498   0012B2  C097  F044         	movff	logf@ux+1,?_logf+1
  1499   0012B6  C098  F045         	movff	logf@ux+2,?_logf+2
  1500   0012BA  C099  F046         	movff	logf@ux+3,?_logf+3
  1501   0012BE  EF21  F00C         	goto	l886
  1502   0012C2                     l885:
  1503                           
  1504                           ; BSR set to: 0
  1505   0012C2  AF99               	btfss	(logf@ux+3)& (0+255),7,b
  1506   0012C4  EF66  F009         	goto	u5621
  1507   0012C8  EF68  F009         	goto	u5620
  1508   0012CC                     u5621:
  1509   0012CC  EF76  F009         	goto	l4831
  1510   0012D0                     u5620:
  1511   0012D0                     
  1512                           ; BSR set to: 0
  1513   0012D0  0E00               	movlw	0
  1514   0012D2  6FCC               	movwf	(_errno+1)& (0+255),b
  1515   0012D4  0E21               	movlw	33
  1516   0012D6  6FCB               	movwf	_errno& (0+255),b
  1517   0012D8  0EFF               	movlw	255
  1518   0012DA  6F96               	movwf	logf@ux& (0+255),b
  1519   0012DC  0EFF               	movlw	255
  1520   0012DE  6F97               	movwf	(logf@ux+1)& (0+255),b
  1521   0012E0  0EFF               	movlw	255
  1522   0012E2  6F98               	movwf	(logf@ux+2)& (0+255),b
  1523   0012E4  0E7F               	movlw	127
  1524   0012E6  6F99               	movwf	(logf@ux+3)& (0+255),b
  1525   0012E8  EF57  F009         	goto	l4821
  1526   0012EC                     l4831:
  1527                           
  1528                           ; BSR set to: 0
  1529   0012EC  0EE7               	movlw	231
  1530   0012EE  277C               	addwf	logf@k& (0+255),f,b
  1531   0012F0  0EFF               	movlw	255
  1532   0012F2  237D               	addwfc	(logf@k+1)& (0+255),f,b
  1533   0012F4                     
  1534                           ; BSR set to: 0
  1535   0012F4  C096  F001         	movff	logf@ux,___flmul@b
  1536   0012F8  C097  F002         	movff	logf@ux+1,___flmul@b+1
  1537   0012FC  C098  F003         	movff	logf@ux+2,___flmul@b+2
  1538   001300  C099  F004         	movff	logf@ux+3,___flmul@b+3
  1539   001304  0E00               	movlw	0
  1540   001306  6E05               	movwf	___flmul@a^0,c
  1541   001308  0E00               	movlw	0
  1542   00130A  6E06               	movwf	(___flmul@a+1)^0,c
  1543   00130C  0E00               	movlw	0
  1544   00130E  6E07               	movwf	(___flmul@a+2)^0,c
  1545   001310  0E4C               	movlw	76
  1546   001312  6E08               	movwf	(___flmul@a+3)^0,c
  1547   001314  EC82  F00E         	call	___flmul	;wreg free
  1548   001318  C001  F096         	movff	?___flmul,logf@ux
  1549   00131C  C002  F097         	movff	?___flmul+1,logf@ux+1
  1550   001320  C003  F098         	movff	?___flmul+2,logf@ux+2
  1551   001324  C004  F099         	movff	?___flmul+3,logf@ux+3
  1552   001328  EFC3  F009         	goto	l4847
  1553   00132C                     l4835:
  1554                           
  1555                           ; BSR set to: 0
  1556   00132C  0E80               	movlw	128
  1557   00132E  5D98               	subwf	(logf@ux+2)& (0+255),w,b
  1558   001330  0E7F               	movlw	127
  1559   001332  5999               	subwfb	(logf@ux+3)& (0+255),w,b
  1560   001334  A0D8               	btfss	status,0,c
  1561   001336  EF9F  F009         	goto	u5631
  1562   00133A  EFA1  F009         	goto	u5630
  1563   00133E                     u5631:
  1564   00133E  EFAB  F009         	goto	l4841
  1565   001342                     u5630:
  1566   001342                     
  1567                           ; BSR set to: 0
  1568   001342  C043  F043         	movff	logf@x,?_logf
  1569   001346  C044  F044         	movff	logf@x+1,?_logf+1
  1570   00134A  C045  F045         	movff	logf@x+2,?_logf+2
  1571   00134E  C046  F046         	movff	logf@x+3,?_logf+3
  1572   001352  EF21  F00C         	goto	l886
  1573   001356                     l4841:
  1574                           
  1575                           ; BSR set to: 0
  1576   001356  0E80               	movlw	128
  1577   001358  1998               	xorwf	(logf@ux+2)& (0+255),w,b
  1578   00135A  E109               	bnz	u5641
  1579   00135C  0E3F               	movlw	63
  1580   00135E  1999               	xorwf	(logf@ux+3)& (0+255),w,b
  1581   001360  1196               	iorwf	logf@ux& (0+255),w,b
  1582   001362  1197               	iorwf	(logf@ux+1)& (0+255),w,b
  1583   001364  A4D8               	btfss	status,2,c
  1584   001366  EFB7  F009         	goto	u5641
  1585   00136A  EFB9  F009         	goto	u5640
  1586   00136E                     u5641:
  1587   00136E  EFC3  F009         	goto	l4847
  1588   001372                     u5640:
  1589   001372                     
  1590                           ; BSR set to: 0
  1591   001372  0E00               	movlw	0
  1592   001374  6E43               	movwf	?_logf^0,c
  1593   001376  0E00               	movlw	0
  1594   001378  6E44               	movwf	(?_logf+1)^0,c
  1595   00137A  0E00               	movlw	0
  1596   00137C  6E45               	movwf	(?_logf+2)^0,c
  1597   00137E  0E00               	movlw	0
  1598   001380  6E46               	movwf	(?_logf+3)^0,c
  1599   001382  EF21  F00C         	goto	l886
  1600   001386                     l4847:
  1601   001386  0E0D               	movlw	13
  1602   001388  0100               	movlb	0	; () banked
  1603   00138A  2796               	addwf	logf@ux& (0+255),f,b
  1604   00138C  0EFB               	movlw	251
  1605   00138E  2397               	addwfc	(logf@ux+1)& (0+255),f,b
  1606   001390  0E4A               	movlw	74
  1607   001392  2398               	addwfc	(logf@ux+2)& (0+255),f,b
  1608   001394  0E00               	movlw	0
  1609   001396  2399               	addwfc	(logf@ux+3)& (0+255),f,b
  1610   001398  C096  F047         	movff	logf@ux,??_logf
  1611   00139C  C097  F048         	movff	logf@ux+1,??_logf+1
  1612   0013A0  C098  F049         	movff	logf@ux+2,??_logf+2
  1613   0013A4  C099  F04A         	movff	logf@ux+3,??_logf+3
  1614   0013A8  0E18               	movlw	24
  1615   0013AA  EFDC  F009         	goto	u5650
  1616   0013AE                     u5655:
  1617   0013AE  90D8               	bcf	status,0,c
  1618   0013B0  324A               	rrcf	(??_logf+3)^0,f,c
  1619   0013B2  3249               	rrcf	(??_logf+2)^0,f,c
  1620   0013B4  3248               	rrcf	(??_logf+1)^0,f,c
  1621   0013B6  3247               	rrcf	??_logf^0,f,c
  1622   0013B8                     u5650:
  1623   0013B8  2EE8               	decfsz	wreg,f,c
  1624   0013BA  EFD7  F009         	goto	u5655
  1625   0013BE  0E81               	movlw	129
  1626   0013C0  2447               	addwf	??_logf^0,w,c
  1627   0013C2  6E4B               	movwf	(??_logf+4)^0,c
  1628   0013C4  0EFF               	movlw	255
  1629   0013C6  2048               	addwfc	(??_logf+1)^0,w,c
  1630   0013C8  6E4C               	movwf	(??_logf+5)^0,c
  1631   0013CA  504B               	movf	(??_logf+4)^0,w,c
  1632   0013CC  277C               	addwf	logf@k& (0+255),f,b
  1633   0013CE  504C               	movf	(??_logf+5)^0,w,c
  1634   0013D0  237D               	addwfc	(logf@k+1)& (0+255),f,b
  1635   0013D2  0EFF               	movlw	255
  1636   0013D4  1596               	andwf	logf@ux& (0+255),w,b
  1637   0013D6  6E47               	movwf	??_logf^0,c
  1638   0013D8  0EFF               	movlw	255
  1639   0013DA  1597               	andwf	(logf@ux+1)& (0+255),w,b
  1640   0013DC  6E48               	movwf	(??_logf+1)^0,c
  1641   0013DE  0E7F               	movlw	127
  1642   0013E0  1598               	andwf	(logf@ux+2)& (0+255),w,b
  1643   0013E2  6E49               	movwf	(??_logf+2)^0,c
  1644   0013E4  0E00               	movlw	0
  1645   0013E6  1599               	andwf	(logf@ux+3)& (0+255),w,b
  1646   0013E8  6E4A               	movwf	(??_logf+3)^0,c
  1647   0013EA  0EF3               	movlw	243
  1648   0013EC  2447               	addwf	??_logf^0,w,c
  1649   0013EE  6F96               	movwf	logf@ux& (0+255),b
  1650   0013F0  0E04               	movlw	4
  1651   0013F2  2048               	addwfc	(??_logf+1)^0,w,c
  1652   0013F4  6F97               	movwf	(logf@ux+1)& (0+255),b
  1653   0013F6  0E35               	movlw	53
  1654   0013F8  2049               	addwfc	(??_logf+2)^0,w,c
  1655   0013FA  6F98               	movwf	(logf@ux+2)& (0+255),b
  1656   0013FC  0E3F               	movlw	63
  1657   0013FE  204A               	addwfc	(??_logf+3)^0,w,c
  1658   001400  6F99               	movwf	(logf@ux+3)& (0+255),b
  1659   001402                     
  1660                           ; BSR set to: 0
  1661   001402  C096  F02A         	movff	logf@ux,___flsub@b
  1662   001406  C097  F02B         	movff	logf@ux+1,___flsub@b+1
  1663   00140A  C098  F02C         	movff	logf@ux+2,___flsub@b+2
  1664   00140E  C099  F02D         	movff	logf@ux+3,___flsub@b+3
  1665   001412  0E00               	movlw	0
  1666   001414  6E2E               	movwf	___flsub@a^0,c
  1667   001416  0E00               	movlw	0
  1668   001418  6E2F               	movwf	(___flsub@a+1)^0,c
  1669   00141A  0E80               	movlw	128
  1670   00141C  6E30               	movwf	(___flsub@a+2)^0,c
  1671   00141E  0E3F               	movlw	63
  1672   001420  6E31               	movwf	(___flsub@a+3)^0,c
  1673   001422  EC28  F01B         	call	___flsub	;wreg free
  1674   001426  C02A  F096         	movff	?___flsub,logf@ux
  1675   00142A  C02B  F097         	movff	?___flsub+1,logf@ux+1
  1676   00142E  C02C  F098         	movff	?___flsub+2,logf@ux+2
  1677   001432  C02D  F099         	movff	?___flsub+3,logf@ux+3
  1678   001436  C096  F02A         	movff	logf@ux,___fldiv@b
  1679   00143A  C097  F02B         	movff	logf@ux+1,___fldiv@b+1
  1680   00143E  C098  F02C         	movff	logf@ux+2,___fldiv@b+2
  1681   001442  C099  F02D         	movff	logf@ux+3,___fldiv@b+3
  1682   001446  0E00               	movlw	0
  1683   001448  6E1E               	movwf	___fladd@a^0,c
  1684   00144A  0E00               	movlw	0
  1685   00144C  6E1F               	movwf	(___fladd@a+1)^0,c
  1686   00144E  0E00               	movlw	0
  1687   001450  6E20               	movwf	(___fladd@a+2)^0,c
  1688   001452  0E40               	movlw	64
  1689   001454  6E21               	movwf	(___fladd@a+3)^0,c
  1690   001456  C096  F01A         	movff	logf@ux,___fladd@b
  1691   00145A  C097  F01B         	movff	logf@ux+1,___fladd@b+1
  1692   00145E  C098  F01C         	movff	logf@ux+2,___fladd@b+2
  1693   001462  C099  F01D         	movff	logf@ux+3,___fladd@b+3
  1694   001466  EC22  F00C         	call	___fladd	;wreg free
  1695   00146A  C01A  F02E         	movff	?___fladd,___fldiv@a
  1696   00146E  C01B  F02F         	movff	?___fladd+1,___fldiv@a+1
  1697   001472  C01C  F030         	movff	?___fladd+2,___fldiv@a+2
  1698   001476  C01D  F031         	movff	?___fladd+3,___fldiv@a+3
  1699   00147A  EC97  F010         	call	___fldiv	;wreg free
  1700   00147E  C02A  F086         	movff	?___fldiv,logf@s
  1701   001482  C02B  F087         	movff	?___fldiv+1,logf@s+1
  1702   001486  C02C  F088         	movff	?___fldiv+2,logf@s+2
  1703   00148A  C02D  F089         	movff	?___fldiv+3,logf@s+3
  1704   00148E  C086  F001         	movff	logf@s,___flmul@b
  1705   001492  C087  F002         	movff	logf@s+1,___flmul@b+1
  1706   001496  C088  F003         	movff	logf@s+2,___flmul@b+2
  1707   00149A  C089  F004         	movff	logf@s+3,___flmul@b+3
  1708   00149E  C086  F005         	movff	logf@s,___flmul@a
  1709   0014A2  C087  F006         	movff	logf@s+1,___flmul@a+1
  1710   0014A6  C088  F007         	movff	logf@s+2,___flmul@a+2
  1711   0014AA  C089  F008         	movff	logf@s+3,___flmul@a+3
  1712   0014AE  EC82  F00E         	call	___flmul	;wreg free
  1713   0014B2  C001  F08A         	movff	?___flmul,logf@z
  1714   0014B6  C002  F08B         	movff	?___flmul+1,logf@z+1
  1715   0014BA  C003  F08C         	movff	?___flmul+2,logf@z+2
  1716   0014BE  C004  F08D         	movff	?___flmul+3,logf@z+3
  1717   0014C2  C08A  F001         	movff	logf@z,___flmul@b
  1718   0014C6  C08B  F002         	movff	logf@z+1,___flmul@b+1
  1719   0014CA  C08C  F003         	movff	logf@z+2,___flmul@b+2
  1720   0014CE  C08D  F004         	movff	logf@z+3,___flmul@b+3
  1721   0014D2  C08A  F005         	movff	logf@z,___flmul@a
  1722   0014D6  C08B  F006         	movff	logf@z+1,___flmul@a+1
  1723   0014DA  C08C  F007         	movff	logf@z+2,___flmul@a+2
  1724   0014DE  C08D  F008         	movff	logf@z+3,___flmul@a+3
  1725   0014E2  EC82  F00E         	call	___flmul	;wreg free
  1726   0014E6  C001  F08E         	movff	?___flmul,logf@w
  1727   0014EA  C002  F08F         	movff	?___flmul+1,logf@w+1
  1728   0014EE  C003  F090         	movff	?___flmul+2,logf@w+2
  1729   0014F2  C004  F091         	movff	?___flmul+3,logf@w+3
  1730   0014F6  0E13               	movlw	19
  1731   0014F8  6E1E               	movwf	___fladd@a^0,c
  1732   0014FA  0ECE               	movlw	206
  1733   0014FC  6E1F               	movwf	(___fladd@a+1)^0,c
  1734   0014FE  0ECC               	movlw	204
  1735   001500  6E20               	movwf	(___fladd@a+2)^0,c
  1736   001502  0E3E               	movlw	62
  1737   001504  6E21               	movwf	(___fladd@a+3)^0,c
  1738   001506  0E26               	movlw	38
  1739   001508  6E05               	movwf	___flmul@a^0,c
  1740   00150A  0E9E               	movlw	158
  1741   00150C  6E06               	movwf	(___flmul@a+1)^0,c
  1742   00150E  0E78               	movlw	120
  1743   001510  6E07               	movwf	(___flmul@a+2)^0,c
  1744   001512  0E3E               	movlw	62
  1745   001514  6E08               	movwf	(___flmul@a+3)^0,c
  1746   001516  C08E  F001         	movff	logf@w,___flmul@b
  1747   00151A  C08F  F002         	movff	logf@w+1,___flmul@b+1
  1748   00151E  C090  F003         	movff	logf@w+2,___flmul@b+2
  1749   001522  C091  F004         	movff	logf@w+3,___flmul@b+3
  1750   001526  EC82  F00E         	call	___flmul	;wreg free
  1751   00152A  C001  F01A         	movff	?___flmul,___fladd@b
  1752   00152E  C002  F01B         	movff	?___flmul+1,___fladd@b+1
  1753   001532  C003  F01C         	movff	?___flmul+2,___fladd@b+2
  1754   001536  C004  F01D         	movff	?___flmul+3,___fladd@b+3
  1755   00153A  EC22  F00C         	call	___fladd	;wreg free
  1756   00153E  C01A  F092         	movff	?___fladd,_logf$1215
  1757   001542  C01B  F093         	movff	?___fladd+1,_logf$1215+1
  1758   001546  C01C  F094         	movff	?___fladd+2,_logf$1215+2
  1759   00154A  C01D  F095         	movff	?___fladd+3,_logf$1215+3
  1760   00154E  C092  F001         	movff	_logf$1215,___flmul@b
  1761   001552  C093  F002         	movff	_logf$1215+1,___flmul@b+1
  1762   001556  C094  F003         	movff	_logf$1215+2,___flmul@b+2
  1763   00155A  C095  F004         	movff	_logf$1215+3,___flmul@b+3
  1764   00155E  C08E  F005         	movff	logf@w,___flmul@a
  1765   001562  C08F  F006         	movff	logf@w+1,___flmul@a+1
  1766   001566  C090  F007         	movff	logf@w+2,___flmul@a+2
  1767   00156A  C091  F008         	movff	logf@w+3,___flmul@a+3
  1768   00156E  EC82  F00E         	call	___flmul	;wreg free
  1769   001572  C001  F064         	movff	?___flmul,logf@t1
  1770   001576  C002  F065         	movff	?___flmul+1,logf@t1+1
  1771   00157A  C003  F066         	movff	?___flmul+2,logf@t1+2
  1772   00157E  C004  F067         	movff	?___flmul+3,logf@t1+3
  1773   001582  0EAA               	movlw	170
  1774   001584  6E1E               	movwf	___fladd@a^0,c
  1775   001586  0EAA               	movlw	170
  1776   001588  6E1F               	movwf	(___fladd@a+1)^0,c
  1777   00158A  0E2A               	movlw	42
  1778   00158C  6E20               	movwf	(___fladd@a+2)^0,c
  1779   00158E  0E3F               	movlw	63
  1780   001590  6E21               	movwf	(___fladd@a+3)^0,c
  1781   001592  0EEE               	movlw	238
  1782   001594  6E05               	movwf	___flmul@a^0,c
  1783   001596  0EE9               	movlw	233
  1784   001598  6E06               	movwf	(___flmul@a+1)^0,c
  1785   00159A  0E91               	movlw	145
  1786   00159C  6E07               	movwf	(___flmul@a+2)^0,c
  1787   00159E  0E3E               	movlw	62
  1788   0015A0  6E08               	movwf	(___flmul@a+3)^0,c
  1789   0015A2  C08E  F001         	movff	logf@w,___flmul@b
  1790   0015A6  C08F  F002         	movff	logf@w+1,___flmul@b+1
  1791   0015AA  C090  F003         	movff	logf@w+2,___flmul@b+2
  1792   0015AE  C091  F004         	movff	logf@w+3,___flmul@b+3
  1793   0015B2  EC82  F00E         	call	___flmul	;wreg free
  1794   0015B6  C001  F01A         	movff	?___flmul,___fladd@b
  1795   0015BA  C002  F01B         	movff	?___flmul+1,___fladd@b+1
  1796   0015BE  C003  F01C         	movff	?___flmul+2,___fladd@b+2
  1797   0015C2  C004  F01D         	movff	?___flmul+3,___fladd@b+3
  1798   0015C6  EC22  F00C         	call	___fladd	;wreg free
  1799   0015CA  C01A  F092         	movff	?___fladd,_logf$1215
  1800   0015CE  C01B  F093         	movff	?___fladd+1,_logf$1215+1
  1801   0015D2  C01C  F094         	movff	?___fladd+2,_logf$1215+2
  1802   0015D6  C01D  F095         	movff	?___fladd+3,_logf$1215+3
  1803   0015DA  C092  F001         	movff	_logf$1215,___flmul@b
  1804   0015DE  C093  F002         	movff	_logf$1215+1,___flmul@b+1
  1805   0015E2  C094  F003         	movff	_logf$1215+2,___flmul@b+2
  1806   0015E6  C095  F004         	movff	_logf$1215+3,___flmul@b+3
  1807   0015EA  C08A  F005         	movff	logf@z,___flmul@a
  1808   0015EE  C08B  F006         	movff	logf@z+1,___flmul@a+1
  1809   0015F2  C08C  F007         	movff	logf@z+2,___flmul@a+2
  1810   0015F6  C08D  F008         	movff	logf@z+3,___flmul@a+3
  1811   0015FA  EC82  F00E         	call	___flmul	;wreg free
  1812   0015FE  C001  F068         	movff	?___flmul,logf@t2
  1813   001602  C002  F069         	movff	?___flmul+1,logf@t2+1
  1814   001606  C003  F06A         	movff	?___flmul+2,logf@t2+2
  1815   00160A  C004  F06B         	movff	?___flmul+3,logf@t2+3
  1816   00160E  C068  F01A         	movff	logf@t2,___fladd@b
  1817   001612  C069  F01B         	movff	logf@t2+1,___fladd@b+1
  1818   001616  C06A  F01C         	movff	logf@t2+2,___fladd@b+2
  1819   00161A  C06B  F01D         	movff	logf@t2+3,___fladd@b+3
  1820   00161E  C064  F01E         	movff	logf@t1,___fladd@a
  1821   001622  C065  F01F         	movff	logf@t1+1,___fladd@a+1
  1822   001626  C066  F020         	movff	logf@t1+2,___fladd@a+2
  1823   00162A  C067  F021         	movff	logf@t1+3,___fladd@a+3
  1824   00162E  EC22  F00C         	call	___fladd	;wreg free
  1825   001632  C01A  F060         	movff	?___fladd,logf@R
  1826   001636  C01B  F061         	movff	?___fladd+1,logf@R+1
  1827   00163A  C01C  F062         	movff	?___fladd+2,logf@R+2
  1828   00163E  C01D  F063         	movff	?___fladd+3,logf@R+3
  1829   001642  0E00               	movlw	0
  1830   001644  6E05               	movwf	___flmul@a^0,c
  1831   001646  0E00               	movlw	0
  1832   001648  6E06               	movwf	(___flmul@a+1)^0,c
  1833   00164A  0E00               	movlw	0
  1834   00164C  6E07               	movwf	(___flmul@a+2)^0,c
  1835   00164E  0E3F               	movlw	63
  1836   001650  6E08               	movwf	(___flmul@a+3)^0,c
  1837   001652  C096  F001         	movff	logf@ux,___flmul@b
  1838   001656  C097  F002         	movff	logf@ux+1,___flmul@b+1
  1839   00165A  C098  F003         	movff	logf@ux+2,___flmul@b+2
  1840   00165E  C099  F004         	movff	logf@ux+3,___flmul@b+3
  1841   001662  EC82  F00E         	call	___flmul	;wreg free
  1842   001666  C001  F092         	movff	?___flmul,_logf$1215
  1843   00166A  C002  F093         	movff	?___flmul+1,_logf$1215+1
  1844   00166E  C003  F094         	movff	?___flmul+2,_logf$1215+2
  1845   001672  C004  F095         	movff	?___flmul+3,_logf$1215+3
  1846   001676  C092  F001         	movff	_logf$1215,___flmul@b
  1847   00167A  C093  F002         	movff	_logf$1215+1,___flmul@b+1
  1848   00167E  C094  F003         	movff	_logf$1215+2,___flmul@b+2
  1849   001682  C095  F004         	movff	_logf$1215+3,___flmul@b+3
  1850   001686  C096  F005         	movff	logf@ux,___flmul@a
  1851   00168A  C097  F006         	movff	logf@ux+1,___flmul@a+1
  1852   00168E  C098  F007         	movff	logf@ux+2,___flmul@a+2
  1853   001692  C099  F008         	movff	logf@ux+3,___flmul@a+3
  1854   001696  EC82  F00E         	call	___flmul	;wreg free
  1855   00169A  C001  F07E         	movff	?___flmul,logf@hfsq
  1856   00169E  C002  F07F         	movff	?___flmul+1,logf@hfsq+1
  1857   0016A2  C003  F080         	movff	?___flmul+2,logf@hfsq+2
  1858   0016A6  C004  F081         	movff	?___flmul+3,logf@hfsq+3
  1859   0016AA  C07C  F00F         	movff	logf@k,___xxtofl@val
  1860   0016AE  C07D  F010         	movff	logf@k+1,___xxtofl@val+1
  1861   0016B2  0E00               	movlw	0
  1862   0016B4  BE10               	btfsc	(___xxtofl@val+1)^0,7,c
  1863   0016B6  0EFF               	movlw	-1
  1864   0016B8  6E11               	movwf	(___xxtofl@val+2)^0,c
  1865   0016BA  6E12               	movwf	(___xxtofl@val+3)^0,c
  1866   0016BC  0E01               	movlw	1
  1867   0016BE  EC62  F015         	call	___xxtofl
  1868   0016C2  C00F  F082         	movff	?___xxtofl,logf@dk
  1869   0016C6  C010  F083         	movff	?___xxtofl+1,logf@dk+1
  1870   0016CA  C011  F084         	movff	?___xxtofl+2,logf@dk+2
  1871   0016CE  C012  F085         	movff	?___xxtofl+3,logf@dk+3
  1872   0016D2  C086  F005         	movff	logf@s,___flmul@a
  1873   0016D6  C087  F006         	movff	logf@s+1,___flmul@a+1
  1874   0016DA  C088  F007         	movff	logf@s+2,___flmul@a+2
  1875   0016DE  C089  F008         	movff	logf@s+3,___flmul@a+3
  1876   0016E2  C060  F01E         	movff	logf@R,___fladd@a
  1877   0016E6  C061  F01F         	movff	logf@R+1,___fladd@a+1
  1878   0016EA  C062  F020         	movff	logf@R+2,___fladd@a+2
  1879   0016EE  C063  F021         	movff	logf@R+3,___fladd@a+3
  1880   0016F2  C07E  F01A         	movff	logf@hfsq,___fladd@b
  1881   0016F6  C07F  F01B         	movff	logf@hfsq+1,___fladd@b+1
  1882   0016FA  C080  F01C         	movff	logf@hfsq+2,___fladd@b+2
  1883   0016FE  C081  F01D         	movff	logf@hfsq+3,___fladd@b+3
  1884   001702  EC22  F00C         	call	___fladd	;wreg free
  1885   001706  C01A  F001         	movff	?___fladd,___flmul@b
  1886   00170A  C01B  F002         	movff	?___fladd+1,___flmul@b+1
  1887   00170E  C01C  F003         	movff	?___fladd+2,___flmul@b+2
  1888   001712  C01D  F004         	movff	?___fladd+3,___flmul@b+3
  1889   001716  EC82  F00E         	call	___flmul	;wreg free
  1890   00171A  C001  F06C         	movff	?___flmul,_logf$1216
  1891   00171E  C002  F06D         	movff	?___flmul+1,_logf$1216+1
  1892   001722  C003  F06E         	movff	?___flmul+2,_logf$1216+2
  1893   001726  C004  F06F         	movff	?___flmul+3,_logf$1216+3
  1894   00172A  0ED1               	movlw	209
  1895   00172C  6E05               	movwf	___flmul@a^0,c
  1896   00172E  0EF7               	movlw	247
  1897   001730  6E06               	movwf	(___flmul@a+1)^0,c
  1898   001732  0E17               	movlw	23
  1899   001734  6E07               	movwf	(___flmul@a+2)^0,c
  1900   001736  0E37               	movlw	55
  1901   001738  6E08               	movwf	(___flmul@a+3)^0,c
  1902   00173A  C082  F001         	movff	logf@dk,___flmul@b
  1903   00173E  C083  F002         	movff	logf@dk+1,___flmul@b+1
  1904   001742  C084  F003         	movff	logf@dk+2,___flmul@b+2
  1905   001746  C085  F004         	movff	logf@dk+3,___flmul@b+3
  1906   00174A  EC82  F00E         	call	___flmul	;wreg free
  1907   00174E  C001  F01E         	movff	?___flmul,___fladd@a
  1908   001752  C002  F01F         	movff	?___flmul+1,___fladd@a+1
  1909   001756  C003  F020         	movff	?___flmul+2,___fladd@a+2
  1910   00175A  C004  F021         	movff	?___flmul+3,___fladd@a+3
  1911   00175E  C06C  F01A         	movff	_logf$1216,___fladd@b
  1912   001762  C06D  F01B         	movff	_logf$1216+1,___fladd@b+1
  1913   001766  C06E  F01C         	movff	_logf$1216+2,___fladd@b+2
  1914   00176A  C06F  F01D         	movff	_logf$1216+3,___fladd@b+3
  1915   00176E  EC22  F00C         	call	___fladd	;wreg free
  1916   001772  C01A  F070         	movff	?___fladd,_logf$1217
  1917   001776  C01B  F071         	movff	?___fladd+1,_logf$1217+1
  1918   00177A  C01C  F072         	movff	?___fladd+2,_logf$1217+2
  1919   00177E  C01D  F073         	movff	?___fladd+3,_logf$1217+3
  1920   001782  C07E  F02E         	movff	logf@hfsq,___flsub@a
  1921   001786  C07F  F02F         	movff	logf@hfsq+1,___flsub@a+1
  1922   00178A  C080  F030         	movff	logf@hfsq+2,___flsub@a+2
  1923   00178E  C081  F031         	movff	logf@hfsq+3,___flsub@a+3
  1924   001792  C070  F02A         	movff	_logf$1217,___flsub@b
  1925   001796  C071  F02B         	movff	_logf$1217+1,___flsub@b+1
  1926   00179A  C072  F02C         	movff	_logf$1217+2,___flsub@b+2
  1927   00179E  C073  F02D         	movff	_logf$1217+3,___flsub@b+3
  1928   0017A2  EC28  F01B         	call	___flsub	;wreg free
  1929   0017A6  C02A  F074         	movff	?___flsub,_logf$1218
  1930   0017AA  C02B  F075         	movff	?___flsub+1,_logf$1218+1
  1931   0017AE  C02C  F076         	movff	?___flsub+2,_logf$1218+2
  1932   0017B2  C02D  F077         	movff	?___flsub+3,_logf$1218+3
  1933   0017B6  C096  F01E         	movff	logf@ux,___fladd@a
  1934   0017BA  C097  F01F         	movff	logf@ux+1,___fladd@a+1
  1935   0017BE  C098  F020         	movff	logf@ux+2,___fladd@a+2
  1936   0017C2  C099  F021         	movff	logf@ux+3,___fladd@a+3
  1937   0017C6  C074  F01A         	movff	_logf$1218,___fladd@b
  1938   0017CA  C075  F01B         	movff	_logf$1218+1,___fladd@b+1
  1939   0017CE  C076  F01C         	movff	_logf$1218+2,___fladd@b+2
  1940   0017D2  C077  F01D         	movff	_logf$1218+3,___fladd@b+3
  1941   0017D6  EC22  F00C         	call	___fladd	;wreg free
  1942   0017DA  C01A  F078         	movff	?___fladd,_logf$1219
  1943   0017DE  C01B  F079         	movff	?___fladd+1,_logf$1219+1
  1944   0017E2  C01C  F07A         	movff	?___fladd+2,_logf$1219+2
  1945   0017E6  C01D  F07B         	movff	?___fladd+3,_logf$1219+3
  1946   0017EA  C078  F01A         	movff	_logf$1219,___fladd@b
  1947   0017EE  C079  F01B         	movff	_logf$1219+1,___fladd@b+1
  1948   0017F2  C07A  F01C         	movff	_logf$1219+2,___fladd@b+2
  1949   0017F6  C07B  F01D         	movff	_logf$1219+3,___fladd@b+3
  1950   0017FA  0E80               	movlw	128
  1951   0017FC  6E05               	movwf	___flmul@a^0,c
  1952   0017FE  0E71               	movlw	113
  1953   001800  6E06               	movwf	(___flmul@a+1)^0,c
  1954   001802  0E31               	movlw	49
  1955   001804  6E07               	movwf	(___flmul@a+2)^0,c
  1956   001806  0E3F               	movlw	63
  1957   001808  6E08               	movwf	(___flmul@a+3)^0,c
  1958   00180A  C082  F001         	movff	logf@dk,___flmul@b
  1959   00180E  C083  F002         	movff	logf@dk+1,___flmul@b+1
  1960   001812  C084  F003         	movff	logf@dk+2,___flmul@b+2
  1961   001816  C085  F004         	movff	logf@dk+3,___flmul@b+3
  1962   00181A  EC82  F00E         	call	___flmul	;wreg free
  1963   00181E  C001  F01E         	movff	?___flmul,___fladd@a
  1964   001822  C002  F01F         	movff	?___flmul+1,___fladd@a+1
  1965   001826  C003  F020         	movff	?___flmul+2,___fladd@a+2
  1966   00182A  C004  F021         	movff	?___flmul+3,___fladd@a+3
  1967   00182E  EC22  F00C         	call	___fladd	;wreg free
  1968   001832  C01A  F043         	movff	?___fladd,?_logf
  1969   001836  C01B  F044         	movff	?___fladd+1,?_logf+1
  1970   00183A  C01C  F045         	movff	?___fladd+2,?_logf+2
  1971   00183E  C01D  F046         	movff	?___fladd+3,?_logf+3
  1972   001842                     l886:
  1973   001842  0012               	return		;funcret
  1974   001844                     __end_of_logf:
  1975                           	callstack 0
  1976                           
  1977 ;; *************** function ___xxtofl *****************
  1978 ;; Defined at:
  1979 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\xxtofl.c"
  1980 ;; Parameters:    Size  Location     Type
  1981 ;;  sign            1    wreg     unsigned char 
  1982 ;;  val             4   14[COMRAM] long 
  1983 ;; Auto vars:     Size  Location     Type
  1984 ;;  sign            1   22[COMRAM] unsigned char 
  1985 ;;  arg             4   24[COMRAM] unsigned long 
  1986 ;;  exp             1   23[COMRAM] unsigned char 
  1987 ;; Return value:  Size  Location     Type
  1988 ;;                  4   14[COMRAM] unsigned char 
  1989 ;; Registers used:
  1990 ;;		wreg, status,2, status,0
  1991 ;; Tracked objects:
  1992 ;;		On entry : 0/0
  1993 ;;		On exit  : 0/0
  1994 ;;		Unchanged: 0/0
  1995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1996 ;;      Params:         4       0       0       0       0       0       0       0       0
  1997 ;;      Locals:         6       0       0       0       0       0       0       0       0
  1998 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1999 ;;      Totals:        14       0       0       0       0       0       0       0       0
  2000 ;;Total ram usage:       14 bytes
  2001 ;; Hardware stack levels used: 1
  2002 ;; This function calls:
  2003 ;;		Nothing
  2004 ;; This function is called by:
  2005 ;;		_termistorin
  2006 ;;		_logf
  2007 ;;		_termistorout
  2008 ;; This function uses a non-reentrant model
  2009 ;;
  2010                           
  2011                           	psect	text4
  2012   002AC4                     __ptext4:
  2013                           	callstack 0
  2014   002AC4                     ___xxtofl:
  2015                           	callstack 27
  2016                           
  2017                           ;incstack = 0
  2018                           ;___xxtofl@sign stored from wreg
  2019   002AC4  6E17               	movwf	___xxtofl@sign^0,c
  2020   002AC6  5017               	movf	___xxtofl@sign^0,w,c
  2021   002AC8  B4D8               	btfsc	status,2,c
  2022   002ACA  EF69  F015         	goto	u3601
  2023   002ACE  EF6B  F015         	goto	u3600
  2024   002AD2                     u3601:
  2025   002AD2  EF8D  F015         	goto	l847
  2026   002AD6                     u3600:
  2027   002AD6  BE12               	btfsc	(___xxtofl@val+3)^0,7,c
  2028   002AD8  EF72  F015         	goto	u3610
  2029   002ADC  EF70  F015         	goto	u3611
  2030   002AE0                     u3611:
  2031   002AE0  EF8D  F015         	goto	l847
  2032   002AE4                     u3610:
  2033   002AE4  C00F  F013         	movff	___xxtofl@val,??___xxtofl
  2034   002AE8  C010  F014         	movff	___xxtofl@val+1,??___xxtofl+1
  2035   002AEC  C011  F015         	movff	___xxtofl@val+2,??___xxtofl+2
  2036   002AF0  C012  F016         	movff	___xxtofl@val+3,??___xxtofl+3
  2037   002AF4  1E13               	comf	??___xxtofl^0,f,c
  2038   002AF6  1E14               	comf	(??___xxtofl+1)^0,f,c
  2039   002AF8  1E15               	comf	(??___xxtofl+2)^0,f,c
  2040   002AFA  1E16               	comf	(??___xxtofl+3)^0,f,c
  2041   002AFC  2A13               	incf	??___xxtofl^0,f,c
  2042   002AFE  0E00               	movlw	0
  2043   002B00  2214               	addwfc	(??___xxtofl+1)^0,f,c
  2044   002B02  2215               	addwfc	(??___xxtofl+2)^0,f,c
  2045   002B04  2216               	addwfc	(??___xxtofl+3)^0,f,c
  2046   002B06  C013  F019         	movff	??___xxtofl,___xxtofl@arg
  2047   002B0A  C014  F01A         	movff	??___xxtofl+1,___xxtofl@arg+1
  2048   002B0E  C015  F01B         	movff	??___xxtofl+2,___xxtofl@arg+2
  2049   002B12  C016  F01C         	movff	??___xxtofl+3,___xxtofl@arg+3
  2050   002B16  EF95  F015         	goto	l3409
  2051   002B1A                     l847:
  2052   002B1A  C00F  F019         	movff	___xxtofl@val,___xxtofl@arg
  2053   002B1E  C010  F01A         	movff	___xxtofl@val+1,___xxtofl@arg+1
  2054   002B22  C011  F01B         	movff	___xxtofl@val+2,___xxtofl@arg+2
  2055   002B26  C012  F01C         	movff	___xxtofl@val+3,___xxtofl@arg+3
  2056   002B2A                     l3409:
  2057   002B2A  500F               	movf	___xxtofl@val^0,w,c
  2058   002B2C  1010               	iorwf	(___xxtofl@val+1)^0,w,c
  2059   002B2E  1011               	iorwf	(___xxtofl@val+2)^0,w,c
  2060   002B30  1012               	iorwf	(___xxtofl@val+3)^0,w,c
  2061   002B32  A4D8               	btfss	status,2,c
  2062   002B34  EF9E  F015         	goto	u3621
  2063   002B38  EFA0  F015         	goto	u3620
  2064   002B3C                     u3621:
  2065   002B3C  EFAA  F015         	goto	l3415
  2066   002B40                     u3620:
  2067   002B40  0E00               	movlw	0
  2068   002B42  6E0F               	movwf	?___xxtofl^0,c
  2069   002B44  0E00               	movlw	0
  2070   002B46  6E10               	movwf	(?___xxtofl+1)^0,c
  2071   002B48  0E00               	movlw	0
  2072   002B4A  6E11               	movwf	(?___xxtofl+2)^0,c
  2073   002B4C  0E00               	movlw	0
  2074   002B4E  6E12               	movwf	(?___xxtofl+3)^0,c
  2075   002B50  EF3B  F016         	goto	l850
  2076   002B54                     l3415:
  2077   002B54  0E96               	movlw	150
  2078   002B56  6E18               	movwf	___xxtofl@exp^0,c
  2079   002B58  EFB4  F015         	goto	l3419
  2080   002B5C                     l3417:
  2081   002B5C  2A18               	incf	___xxtofl@exp^0,f,c
  2082   002B5E  90D8               	bcf	status,0,c
  2083   002B60  321C               	rrcf	(___xxtofl@arg+3)^0,f,c
  2084   002B62  321B               	rrcf	(___xxtofl@arg+2)^0,f,c
  2085   002B64  321A               	rrcf	(___xxtofl@arg+1)^0,f,c
  2086   002B66  3219               	rrcf	___xxtofl@arg^0,f,c
  2087   002B68                     l3419:
  2088   002B68  0E00               	movlw	0
  2089   002B6A  1419               	andwf	___xxtofl@arg^0,w,c
  2090   002B6C  6E13               	movwf	??___xxtofl^0,c
  2091   002B6E  0E00               	movlw	0
  2092   002B70  141A               	andwf	(___xxtofl@arg+1)^0,w,c
  2093   002B72  6E14               	movwf	(??___xxtofl+1)^0,c
  2094   002B74  0E00               	movlw	0
  2095   002B76  141B               	andwf	(___xxtofl@arg+2)^0,w,c
  2096   002B78  6E15               	movwf	(??___xxtofl+2)^0,c
  2097   002B7A  0EFE               	movlw	254
  2098   002B7C  141C               	andwf	(___xxtofl@arg+3)^0,w,c
  2099   002B7E  6E16               	movwf	(??___xxtofl+3)^0,c
  2100   002B80  5013               	movf	??___xxtofl^0,w,c
  2101   002B82  1014               	iorwf	(??___xxtofl+1)^0,w,c
  2102   002B84  1015               	iorwf	(??___xxtofl+2)^0,w,c
  2103   002B86  1016               	iorwf	(??___xxtofl+3)^0,w,c
  2104   002B88  A4D8               	btfss	status,2,c
  2105   002B8A  EFC9  F015         	goto	u3631
  2106   002B8E  EFCB  F015         	goto	u3630
  2107   002B92                     u3631:
  2108   002B92  EFAE  F015         	goto	l3417
  2109   002B96                     u3630:
  2110   002B96  EFD9  F015         	goto	l854
  2111   002B9A                     l3421:
  2112   002B9A  2A18               	incf	___xxtofl@exp^0,f,c
  2113   002B9C  0E01               	movlw	1
  2114   002B9E  2619               	addwf	___xxtofl@arg^0,f,c
  2115   002BA0  0E00               	movlw	0
  2116   002BA2  221A               	addwfc	(___xxtofl@arg+1)^0,f,c
  2117   002BA4  221B               	addwfc	(___xxtofl@arg+2)^0,f,c
  2118   002BA6  221C               	addwfc	(___xxtofl@arg+3)^0,f,c
  2119   002BA8  90D8               	bcf	status,0,c
  2120   002BAA  321C               	rrcf	(___xxtofl@arg+3)^0,f,c
  2121   002BAC  321B               	rrcf	(___xxtofl@arg+2)^0,f,c
  2122   002BAE  321A               	rrcf	(___xxtofl@arg+1)^0,f,c
  2123   002BB0  3219               	rrcf	___xxtofl@arg^0,f,c
  2124   002BB2                     l854:
  2125   002BB2  0E00               	movlw	0
  2126   002BB4  1419               	andwf	___xxtofl@arg^0,w,c
  2127   002BB6  6E13               	movwf	??___xxtofl^0,c
  2128   002BB8  0E00               	movlw	0
  2129   002BBA  141A               	andwf	(___xxtofl@arg+1)^0,w,c
  2130   002BBC  6E14               	movwf	(??___xxtofl+1)^0,c
  2131   002BBE  0E00               	movlw	0
  2132   002BC0  141B               	andwf	(___xxtofl@arg+2)^0,w,c
  2133   002BC2  6E15               	movwf	(??___xxtofl+2)^0,c
  2134   002BC4  0EFF               	movlw	255
  2135   002BC6  141C               	andwf	(___xxtofl@arg+3)^0,w,c
  2136   002BC8  6E16               	movwf	(??___xxtofl+3)^0,c
  2137   002BCA  5013               	movf	??___xxtofl^0,w,c
  2138   002BCC  1014               	iorwf	(??___xxtofl+1)^0,w,c
  2139   002BCE  1015               	iorwf	(??___xxtofl+2)^0,w,c
  2140   002BD0  1016               	iorwf	(??___xxtofl+3)^0,w,c
  2141   002BD2  A4D8               	btfss	status,2,c
  2142   002BD4  EFEE  F015         	goto	u3641
  2143   002BD8  EFF0  F015         	goto	u3640
  2144   002BDC                     u3641:
  2145   002BDC  EFCD  F015         	goto	l3421
  2146   002BE0                     u3640:
  2147   002BE0  EFF8  F015         	goto	l3429
  2148   002BE4                     l3427:
  2149   002BE4  0618               	decf	___xxtofl@exp^0,f,c
  2150   002BE6  90D8               	bcf	status,0,c
  2151   002BE8  3619               	rlcf	___xxtofl@arg^0,f,c
  2152   002BEA  361A               	rlcf	(___xxtofl@arg+1)^0,f,c
  2153   002BEC  361B               	rlcf	(___xxtofl@arg+2)^0,f,c
  2154   002BEE  361C               	rlcf	(___xxtofl@arg+3)^0,f,c
  2155   002BF0                     l3429:
  2156   002BF0  BE1B               	btfsc	(___xxtofl@arg+2)^0,7,c
  2157   002BF2  EFFD  F015         	goto	u3651
  2158   002BF6  EFFF  F015         	goto	u3650
  2159   002BFA                     u3651:
  2160   002BFA  EF07  F016         	goto	l861
  2161   002BFE                     u3650:
  2162   002BFE  0E02               	movlw	2
  2163   002C00  6018               	cpfslt	___xxtofl@exp^0,c
  2164   002C02  EF05  F016         	goto	u3661
  2165   002C06  EF07  F016         	goto	u3660
  2166   002C0A                     u3661:
  2167   002C0A  EFF2  F015         	goto	l3427
  2168   002C0E                     u3660:
  2169   002C0E                     l861:
  2170   002C0E  B018               	btfsc	___xxtofl@exp^0,0,c
  2171   002C10  EF0C  F016         	goto	u3671
  2172   002C14  EF0E  F016         	goto	u3670
  2173   002C18                     u3671:
  2174   002C18  EF0F  F016         	goto	l3435
  2175   002C1C                     u3670:
  2176   002C1C  9E1B               	bcf	(___xxtofl@arg+2)^0,7,c
  2177   002C1E                     l3435:
  2178   002C1E  90D8               	bcf	status,0,c
  2179   002C20  3218               	rrcf	___xxtofl@exp^0,f,c
  2180   002C22  C018  F013         	movff	___xxtofl@exp,??___xxtofl
  2181   002C26  6A14               	clrf	(??___xxtofl+1)^0,c
  2182   002C28  6A15               	clrf	(??___xxtofl+2)^0,c
  2183   002C2A  6A16               	clrf	(??___xxtofl+3)^0,c
  2184   002C2C  C013  F016         	movff	??___xxtofl,??___xxtofl+3
  2185   002C30  6A15               	clrf	(??___xxtofl+2)^0,c
  2186   002C32  6A14               	clrf	(??___xxtofl+1)^0,c
  2187   002C34  6A13               	clrf	??___xxtofl^0,c
  2188   002C36  5013               	movf	??___xxtofl^0,w,c
  2189   002C38  1219               	iorwf	___xxtofl@arg^0,f,c
  2190   002C3A  5014               	movf	(??___xxtofl+1)^0,w,c
  2191   002C3C  121A               	iorwf	(___xxtofl@arg+1)^0,f,c
  2192   002C3E  5015               	movf	(??___xxtofl+2)^0,w,c
  2193   002C40  121B               	iorwf	(___xxtofl@arg+2)^0,f,c
  2194   002C42  5016               	movf	(??___xxtofl+3)^0,w,c
  2195   002C44  121C               	iorwf	(___xxtofl@arg+3)^0,f,c
  2196   002C46  5017               	movf	___xxtofl@sign^0,w,c
  2197   002C48  B4D8               	btfsc	status,2,c
  2198   002C4A  EF29  F016         	goto	u3681
  2199   002C4E  EF2B  F016         	goto	u3680
  2200   002C52                     u3681:
  2201   002C52  EF33  F016         	goto	l3445
  2202   002C56                     u3680:
  2203   002C56  BE12               	btfsc	(___xxtofl@val+3)^0,7,c
  2204   002C58  EF32  F016         	goto	u3690
  2205   002C5C  EF30  F016         	goto	u3691
  2206   002C60                     u3691:
  2207   002C60  EF33  F016         	goto	l3445
  2208   002C64                     u3690:
  2209   002C64  8E1C               	bsf	(___xxtofl@arg+3)^0,7,c
  2210   002C66                     l3445:
  2211   002C66  C019  F00F         	movff	___xxtofl@arg,?___xxtofl
  2212   002C6A  C01A  F010         	movff	___xxtofl@arg+1,?___xxtofl+1
  2213   002C6E  C01B  F011         	movff	___xxtofl@arg+2,?___xxtofl+2
  2214   002C72  C01C  F012         	movff	___xxtofl@arg+3,?___xxtofl+3
  2215   002C76                     l850:
  2216   002C76  0012               	return		;funcret
  2217   002C78                     __end_of___xxtofl:
  2218                           	callstack 0
  2219                           
  2220 ;; *************** function ___aldiv *****************
  2221 ;; Defined at:
  2222 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\aldiv.c"
  2223 ;; Parameters:    Size  Location     Type
  2224 ;;  dividend        4    0[COMRAM] long 
  2225 ;;  divisor         4    4[COMRAM] long 
  2226 ;; Auto vars:     Size  Location     Type
  2227 ;;  quotient        4   10[COMRAM] long 
  2228 ;;  sign            1    9[COMRAM] unsigned char 
  2229 ;;  counter         1    8[COMRAM] unsigned char 
  2230 ;; Return value:  Size  Location     Type
  2231 ;;                  4    0[COMRAM] long 
  2232 ;; Registers used:
  2233 ;;		wreg, status,2, status,0
  2234 ;; Tracked objects:
  2235 ;;		On entry : 0/0
  2236 ;;		On exit  : 0/0
  2237 ;;		Unchanged: 0/0
  2238 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2239 ;;      Params:         8       0       0       0       0       0       0       0       0
  2240 ;;      Locals:         6       0       0       0       0       0       0       0       0
  2241 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2242 ;;      Totals:        14       0       0       0       0       0       0       0       0
  2243 ;;Total ram usage:       14 bytes
  2244 ;; Hardware stack levels used: 1
  2245 ;; This function calls:
  2246 ;;		Nothing
  2247 ;; This function is called by:
  2248 ;;		_termistorin
  2249 ;;		_termistorout
  2250 ;; This function uses a non-reentrant model
  2251 ;;
  2252                           
  2253                           	psect	text5
  2254   002C78                     __ptext5:
  2255                           	callstack 0
  2256   002C78                     ___aldiv:
  2257                           	callstack 28
  2258   002C78  0E00               	movlw	0
  2259   002C7A  6E0A               	movwf	___aldiv@sign^0,c
  2260   002C7C  BE08               	btfsc	(___aldiv@divisor+3)^0,7,c
  2261   002C7E  EF45  F016         	goto	u3810
  2262   002C82  EF43  F016         	goto	u3811
  2263   002C86                     u3811:
  2264   002C86  EF4F  F016         	goto	l3613
  2265   002C8A                     u3810:
  2266   002C8A  1E08               	comf	(___aldiv@divisor+3)^0,f,c
  2267   002C8C  1E07               	comf	(___aldiv@divisor+2)^0,f,c
  2268   002C8E  1E06               	comf	(___aldiv@divisor+1)^0,f,c
  2269   002C90  6C05               	negf	___aldiv@divisor^0,c
  2270   002C92  0E00               	movlw	0
  2271   002C94  2206               	addwfc	(___aldiv@divisor+1)^0,f,c
  2272   002C96  2207               	addwfc	(___aldiv@divisor+2)^0,f,c
  2273   002C98  2208               	addwfc	(___aldiv@divisor+3)^0,f,c
  2274   002C9A  0E01               	movlw	1
  2275   002C9C  6E0A               	movwf	___aldiv@sign^0,c
  2276   002C9E                     l3613:
  2277   002C9E  BE04               	btfsc	(___aldiv@dividend+3)^0,7,c
  2278   002CA0  EF56  F016         	goto	u3820
  2279   002CA4  EF54  F016         	goto	u3821
  2280   002CA8                     u3821:
  2281   002CA8  EF60  F016         	goto	l3619
  2282   002CAC                     u3820:
  2283   002CAC  1E04               	comf	(___aldiv@dividend+3)^0,f,c
  2284   002CAE  1E03               	comf	(___aldiv@dividend+2)^0,f,c
  2285   002CB0  1E02               	comf	(___aldiv@dividend+1)^0,f,c
  2286   002CB2  6C01               	negf	___aldiv@dividend^0,c
  2287   002CB4  0E00               	movlw	0
  2288   002CB6  2202               	addwfc	(___aldiv@dividend+1)^0,f,c
  2289   002CB8  2203               	addwfc	(___aldiv@dividend+2)^0,f,c
  2290   002CBA  2204               	addwfc	(___aldiv@dividend+3)^0,f,c
  2291   002CBC  0E01               	movlw	1
  2292   002CBE  1A0A               	xorwf	___aldiv@sign^0,f,c
  2293   002CC0                     l3619:
  2294   002CC0  0E00               	movlw	0
  2295   002CC2  6E0B               	movwf	___aldiv@quotient^0,c
  2296   002CC4  0E00               	movlw	0
  2297   002CC6  6E0C               	movwf	(___aldiv@quotient+1)^0,c
  2298   002CC8  0E00               	movlw	0
  2299   002CCA  6E0D               	movwf	(___aldiv@quotient+2)^0,c
  2300   002CCC  0E00               	movlw	0
  2301   002CCE  6E0E               	movwf	(___aldiv@quotient+3)^0,c
  2302   002CD0  5005               	movf	___aldiv@divisor^0,w,c
  2303   002CD2  1006               	iorwf	(___aldiv@divisor+1)^0,w,c
  2304   002CD4  1007               	iorwf	(___aldiv@divisor+2)^0,w,c
  2305   002CD6  1008               	iorwf	(___aldiv@divisor+3)^0,w,c
  2306   002CD8  B4D8               	btfsc	status,2,c
  2307   002CDA  EF71  F016         	goto	u3831
  2308   002CDE  EF73  F016         	goto	u3830
  2309   002CE2                     u3831:
  2310   002CE2  EFA9  F016         	goto	l3641
  2311   002CE6                     u3830:
  2312   002CE6  0E01               	movlw	1
  2313   002CE8  6E09               	movwf	___aldiv@counter^0,c
  2314   002CEA  EF7D  F016         	goto	l3627
  2315   002CEE                     l3625:
  2316   002CEE  90D8               	bcf	status,0,c
  2317   002CF0  3605               	rlcf	___aldiv@divisor^0,f,c
  2318   002CF2  3606               	rlcf	(___aldiv@divisor+1)^0,f,c
  2319   002CF4  3607               	rlcf	(___aldiv@divisor+2)^0,f,c
  2320   002CF6  3608               	rlcf	(___aldiv@divisor+3)^0,f,c
  2321   002CF8  2A09               	incf	___aldiv@counter^0,f,c
  2322   002CFA                     l3627:
  2323   002CFA  AE08               	btfss	(___aldiv@divisor+3)^0,7,c
  2324   002CFC  EF82  F016         	goto	u3841
  2325   002D00  EF84  F016         	goto	u3840
  2326   002D04                     u3841:
  2327   002D04  EF77  F016         	goto	l3625
  2328   002D08                     u3840:
  2329   002D08                     l3629:
  2330   002D08  90D8               	bcf	status,0,c
  2331   002D0A  360B               	rlcf	___aldiv@quotient^0,f,c
  2332   002D0C  360C               	rlcf	(___aldiv@quotient+1)^0,f,c
  2333   002D0E  360D               	rlcf	(___aldiv@quotient+2)^0,f,c
  2334   002D10  360E               	rlcf	(___aldiv@quotient+3)^0,f,c
  2335   002D12  5005               	movf	___aldiv@divisor^0,w,c
  2336   002D14  5C01               	subwf	___aldiv@dividend^0,w,c
  2337   002D16  5006               	movf	(___aldiv@divisor+1)^0,w,c
  2338   002D18  5802               	subwfb	(___aldiv@dividend+1)^0,w,c
  2339   002D1A  5007               	movf	(___aldiv@divisor+2)^0,w,c
  2340   002D1C  5803               	subwfb	(___aldiv@dividend+2)^0,w,c
  2341   002D1E  5008               	movf	(___aldiv@divisor+3)^0,w,c
  2342   002D20  5804               	subwfb	(___aldiv@dividend+3)^0,w,c
  2343   002D22  A0D8               	btfss	status,0,c
  2344   002D24  EF96  F016         	goto	u3851
  2345   002D28  EF98  F016         	goto	u3850
  2346   002D2C                     u3851:
  2347   002D2C  EFA1  F016         	goto	l3637
  2348   002D30                     u3850:
  2349   002D30  5005               	movf	___aldiv@divisor^0,w,c
  2350   002D32  5E01               	subwf	___aldiv@dividend^0,f,c
  2351   002D34  5006               	movf	(___aldiv@divisor+1)^0,w,c
  2352   002D36  5A02               	subwfb	(___aldiv@dividend+1)^0,f,c
  2353   002D38  5007               	movf	(___aldiv@divisor+2)^0,w,c
  2354   002D3A  5A03               	subwfb	(___aldiv@dividend+2)^0,f,c
  2355   002D3C  5008               	movf	(___aldiv@divisor+3)^0,w,c
  2356   002D3E  5A04               	subwfb	(___aldiv@dividend+3)^0,f,c
  2357   002D40  800B               	bsf	___aldiv@quotient^0,0,c
  2358   002D42                     l3637:
  2359   002D42  90D8               	bcf	status,0,c
  2360   002D44  3208               	rrcf	(___aldiv@divisor+3)^0,f,c
  2361   002D46  3207               	rrcf	(___aldiv@divisor+2)^0,f,c
  2362   002D48  3206               	rrcf	(___aldiv@divisor+1)^0,f,c
  2363   002D4A  3205               	rrcf	___aldiv@divisor^0,f,c
  2364   002D4C  2E09               	decfsz	___aldiv@counter^0,f,c
  2365   002D4E  EF84  F016         	goto	l3629
  2366   002D52                     l3641:
  2367   002D52  500A               	movf	___aldiv@sign^0,w,c
  2368   002D54  B4D8               	btfsc	status,2,c
  2369   002D56  EFAF  F016         	goto	u3861
  2370   002D5A  EFB1  F016         	goto	u3860
  2371   002D5E                     u3861:
  2372   002D5E  EFB9  F016         	goto	l3645
  2373   002D62                     u3860:
  2374   002D62  1E0E               	comf	(___aldiv@quotient+3)^0,f,c
  2375   002D64  1E0D               	comf	(___aldiv@quotient+2)^0,f,c
  2376   002D66  1E0C               	comf	(___aldiv@quotient+1)^0,f,c
  2377   002D68  6C0B               	negf	___aldiv@quotient^0,c
  2378   002D6A  0E00               	movlw	0
  2379   002D6C  220C               	addwfc	(___aldiv@quotient+1)^0,f,c
  2380   002D6E  220D               	addwfc	(___aldiv@quotient+2)^0,f,c
  2381   002D70  220E               	addwfc	(___aldiv@quotient+3)^0,f,c
  2382   002D72                     l3645:
  2383   002D72  C00B  F001         	movff	___aldiv@quotient,?___aldiv
  2384   002D76  C00C  F002         	movff	___aldiv@quotient+1,?___aldiv+1
  2385   002D7A  C00D  F003         	movff	___aldiv@quotient+2,?___aldiv+2
  2386   002D7E  C00E  F004         	movff	___aldiv@quotient+3,?___aldiv+3
  2387   002D82  0012               	return		;funcret
  2388   002D84                     __end_of___aldiv:
  2389                           	callstack 0
  2390                           
  2391 ;; *************** function _sprintf *****************
  2392 ;; Defined at:
  2393 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_sprintf.c"
  2394 ;; Parameters:    Size  Location     Type
  2395 ;;  s               2   57[BANK0 ] PTR unsigned char 
  2396 ;;		 -> TempoutSTR(32), TempinSTR(32), 
  2397 ;;  fmt             1   59[BANK0 ] PTR const unsigned char 
  2398 ;;		 -> STR_2(15), STR_1(14), 
  2399 ;; Auto vars:     Size  Location     Type
  2400 ;;  f              12   67[BANK0 ] struct _IO_FILE
  2401 ;;  ret             2    0        int 
  2402 ;;  ap              1   66[BANK0 ] PTR void [1]
  2403 ;;		 -> ?_sprintf(2), 
  2404 ;; Return value:  Size  Location     Type
  2405 ;;                  2   57[BANK0 ] int 
  2406 ;; Registers used:
  2407 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2408 ;; Tracked objects:
  2409 ;;		On entry : 0/0
  2410 ;;		On exit  : 0/0
  2411 ;;		Unchanged: 0/0
  2412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2413 ;;      Params:         0       9       0       0       0       0       0       0       0
  2414 ;;      Locals:         0      13       0       0       0       0       0       0       0
  2415 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2416 ;;      Totals:         0      22       0       0       0       0       0       0       0
  2417 ;;Total ram usage:       22 bytes
  2418 ;; Hardware stack levels used: 1
  2419 ;; Hardware stack levels required when called: 7
  2420 ;; This function calls:
  2421 ;;		_vfprintf
  2422 ;; This function is called by:
  2423 ;;		_menu
  2424 ;; This function uses a non-reentrant model
  2425 ;;
  2426                           
  2427                           	psect	text6
  2428   0036D8                     __ptext6:
  2429                           	callstack 0
  2430   0036D8                     _sprintf:
  2431                           	callstack 22
  2432   0036D8  0E9C               	movlw	low (?_sprintf+3)
  2433   0036DA  0100               	movlb	0	; () banked
  2434   0036DC  6FA2               	movwf	sprintf@ap& (0+255),b
  2435   0036DE  C099  F0A3         	movff	sprintf@s,sprintf@f
  2436   0036E2  C09A  F0A4         	movff	sprintf@s+1,sprintf@f+1
  2437   0036E6                     
  2438                           ; BSR set to: 0
  2439   0036E6  0E00               	movlw	0
  2440   0036E8  6FA7               	movwf	(sprintf@f+4)& (0+255),b
  2441   0036EA  0E00               	movlw	0
  2442   0036EC  6FA6               	movwf	(sprintf@f+3)& (0+255),b
  2443   0036EE                     
  2444                           ; BSR set to: 0
  2445   0036EE  0E00               	movlw	0
  2446   0036F0  6FAE               	movwf	(sprintf@f+11)& (0+255),b
  2447   0036F2  0E00               	movlw	0
  2448   0036F4  6FAD               	movwf	(sprintf@f+10)& (0+255),b
  2449   0036F6                     
  2450                           ; BSR set to: 0
  2451   0036F6  0EA3               	movlw	low sprintf@f
  2452   0036F8  6F95               	movwf	vfprintf@fp& (0+255),b
  2453   0036FA  C09B  F096         	movff	sprintf@fmt,vfprintf@fmt
  2454   0036FE  0EA2               	movlw	low sprintf@ap
  2455   003700  6F97               	movwf	vfprintf@ap& (0+255),b
  2456   003702  EC4B  F01B         	call	_vfprintf	;wreg free
  2457   003706  0100               	movlb	0	; () banked
  2458   003708  51A6               	movf	(sprintf@f+3)& (0+255),w,b
  2459   00370A  2599               	addwf	sprintf@s& (0+255),w,b
  2460   00370C  6ED9               	movwf	fsr2l,c
  2461   00370E  51A7               	movf	(sprintf@f+4)& (0+255),w,b
  2462   003710  219A               	addwfc	(sprintf@s+1)& (0+255),w,b
  2463   003712  6EDA               	movwf	fsr2h,c
  2464   003714  6ADF               	clrf	indf2,c
  2465   003716                     
  2466                           ; BSR set to: 0
  2467   003716  0012               	return		;funcret
  2468   003718                     __end_of_sprintf:
  2469                           	callstack 0
  2470                           
  2471 ;; *************** function _vfprintf *****************
  2472 ;; Defined at:
  2473 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  2474 ;; Parameters:    Size  Location     Type
  2475 ;;  fp              1   53[BANK0 ] PTR struct _IO_FILE
  2476 ;;		 -> sprintf@f(12), 
  2477 ;;  fmt             1   54[BANK0 ] PTR const unsigned char 
  2478 ;;		 -> STR_2(15), STR_1(14), 
  2479 ;;  ap              1   55[BANK0 ] PTR PTR void 
  2480 ;;		 -> sprintf@ap(1), 
  2481 ;; Auto vars:     Size  Location     Type
  2482 ;;  cfmt            1   56[BANK0 ] PTR unsigned char 
  2483 ;;		 -> STR_2(15), STR_1(14), 
  2484 ;; Return value:  Size  Location     Type
  2485 ;;                  2   53[BANK0 ] int 
  2486 ;; Registers used:
  2487 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2488 ;; Tracked objects:
  2489 ;;		On entry : 0/0
  2490 ;;		On exit  : 0/0
  2491 ;;		Unchanged: 0/0
  2492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2493 ;;      Params:         0       3       0       0       0       0       0       0       0
  2494 ;;      Locals:         0       1       0       0       0       0       0       0       0
  2495 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2496 ;;      Totals:         0       4       0       0       0       0       0       0       0
  2497 ;;Total ram usage:        4 bytes
  2498 ;; Hardware stack levels used: 1
  2499 ;; Hardware stack levels required when called: 6
  2500 ;; This function calls:
  2501 ;;		_vfpfcnvrt
  2502 ;; This function is called by:
  2503 ;;		_sprintf
  2504 ;; This function uses a non-reentrant model
  2505 ;;
  2506                           
  2507                           	psect	text7
  2508   003696                     __ptext7:
  2509                           	callstack 0
  2510   003696                     _vfprintf:
  2511                           	callstack 22
  2512   003696                     
  2513                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  2514   003696  C096  F098         	movff	vfprintf@fmt,vfprintf@cfmt
  2515                           
  2516                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  2517   00369A  EF58  F01B         	goto	l4889
  2518   00369E                     l4887:
  2519                           
  2520                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  2521   00369E  C095  F08C         	movff	vfprintf@fp,vfpfcnvrt@fp
  2522   0036A2  0E98               	movlw	low vfprintf@cfmt
  2523   0036A4  0100               	movlb	0	; () banked
  2524   0036A6  6F8D               	movwf	vfpfcnvrt@fmt& (0+255),b
  2525   0036A8  C097  F08E         	movff	vfprintf@ap,vfpfcnvrt@ap
  2526   0036AC  EC64  F012         	call	_vfpfcnvrt	;wreg free
  2527   0036B0                     l4889:
  2528                           
  2529                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  2530   0036B0  C098  FFF6         	movff	vfprintf@cfmt,tblptrl
  2531   0036B4                     	if	1	;There is more than 1 active tblptr byte
  2532   0036B4  0E08               	movlw	high __smallconst
  2533   0036B6  6EF7               	movwf	tblptrh,c
  2534   0036B8                     	endif
  2535   0036B8                     	if	0	;tblptru may be non-zero
  2536   0036B8                     	endif
  2537   0036B8                     	if	0	;tblptru may be non-zero
  2538   0036B8                     	endif
  2539   0036B8  0008               	tblrd		*
  2540   0036BA  50F5               	movf	tablat,w,c
  2541   0036BC  0900               	iorlw	0
  2542   0036BE  A4D8               	btfss	status,2,c
  2543   0036C0  EF64  F01B         	goto	u5661
  2544   0036C4  EF66  F01B         	goto	u5660
  2545   0036C8                     u5661:
  2546   0036C8  EF4F  F01B         	goto	l4887
  2547   0036CC                     u5660:
  2548   0036CC                     
  2549                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  2550   0036CC  0E00               	movlw	0
  2551   0036CE  0100               	movlb	0	; () banked
  2552   0036D0  6F96               	movwf	(?_vfprintf+1)& (0+255),b
  2553   0036D2  0E00               	movlw	0
  2554   0036D4  6F95               	movwf	?_vfprintf& (0+255),b
  2555   0036D6                     
  2556                           ; BSR set to: 0
  2557   0036D6  0012               	return		;funcret
  2558   0036D8                     __end_of_vfprintf:
  2559                           	callstack 0
  2560                           
  2561 ;; *************** function _vfpfcnvrt *****************
  2562 ;; Defined at:
  2563 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  2564 ;; Parameters:    Size  Location     Type
  2565 ;;  fp              1   44[BANK0 ] PTR struct _IO_FILE
  2566 ;;		 -> sprintf@f(12), 
  2567 ;;  fmt             1   45[BANK0 ] PTR PTR unsigned char 
  2568 ;;		 -> vfprintf@cfmt(1), 
  2569 ;;  ap              1   46[BANK0 ] PTR PTR void 
  2570 ;;		 -> sprintf@ap(1), 
  2571 ;; Auto vars:     Size  Location     Type
  2572 ;;  convarg         4   47[BANK0 ] struct .
  2573 ;;  cp              1   52[BANK0 ] PTR unsigned char 
  2574 ;;		 -> STR_2(15), STR_1(14), 
  2575 ;;  c               1   51[BANK0 ] unsigned char 
  2576 ;;  done            1    0        _Bool 
  2577 ;; Return value:  Size  Location     Type
  2578 ;;                  1    wreg      void 
  2579 ;; Registers used:
  2580 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2581 ;; Tracked objects:
  2582 ;;		On entry : 0/0
  2583 ;;		On exit  : 0/0
  2584 ;;		Unchanged: 0/0
  2585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2586 ;;      Params:         0       3       0       0       0       0       0       0       0
  2587 ;;      Locals:         0       6       0       0       0       0       0       0       0
  2588 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2589 ;;      Totals:         1       9       0       0       0       0       0       0       0
  2590 ;;Total ram usage:       10 bytes
  2591 ;; Hardware stack levels used: 1
  2592 ;; Hardware stack levels required when called: 5
  2593 ;; This function calls:
  2594 ;;		_efgtoa
  2595 ;;		_fputc
  2596 ;;		_read_prec_or_width
  2597 ;; This function is called by:
  2598 ;;		_vfprintf
  2599 ;; This function uses a non-reentrant model
  2600 ;;
  2601                           
  2602                           	psect	text8
  2603   0024C8                     __ptext8:
  2604                           	callstack 0
  2605   0024C8                     _vfpfcnvrt:
  2606                           	callstack 22
  2607   0024C8                     
  2608                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  2609   0024C8  0100               	movlb	0	; () banked
  2610   0024CA  518D               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2611   0024CC  6ED9               	movwf	fsr2l,c
  2612   0024CE  6ADA               	clrf	fsr2h,c
  2613   0024D0  CFDF FFF6          	movff	indf2,tblptrl
  2614   0024D4                     	if	1	;There is more than 1 active tblptr byte
  2615   0024D4  0E08               	movlw	high __smallconst
  2616   0024D6  6EF7               	movwf	tblptrh,c
  2617   0024D8                     	endif
  2618   0024D8                     	if	0	;tblptru may be non-zero
  2619   0024D8                     	endif
  2620   0024D8                     	if	0	;tblptru may be non-zero
  2621   0024D8                     	endif
  2622   0024D8  0008               	tblrd		*
  2623   0024DA  50F5               	movf	tablat,w,c
  2624   0024DC  0A25               	xorlw	37
  2625   0024DE  A4D8               	btfss	status,2,c
  2626   0024E0  EF74  F012         	goto	u5551
  2627   0024E4  EF76  F012         	goto	u5550
  2628   0024E8                     u5551:
  2629   0024E8  EF64  F013         	goto	l4803
  2630   0024EC                     u5550:
  2631   0024EC                     
  2632                           ; BSR set to: 0
  2633                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  2634   0024EC  518D               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2635   0024EE  6ED9               	movwf	fsr2l,c
  2636   0024F0  6ADA               	clrf	fsr2h,c
  2637   0024F2  2ADF               	incf	indf2,f,c
  2638   0024F4                     
  2639                           ; BSR set to: 0
  2640                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  2641   0024F4  0E00               	movlw	0
  2642   0024F6  6FC8               	movwf	(_width+1)& (0+255),b
  2643   0024F8  0E00               	movlw	0
  2644   0024FA  6FC7               	movwf	_width& (0+255),b
  2645   0024FC  C0C7  F0D1         	movff	_width,_flags
  2646   002500                     
  2647                           ; BSR set to: 0
  2648                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  2649   002500  69C9               	setf	_prec& (0+255),b
  2650   002502  69CA               	setf	(_prec+1)& (0+255),b
  2651   002504                     
  2652                           ; BSR set to: 0
  2653                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1265:         if 
      +                          ((*fmt)[0] == '.') {
  2654   002504  518D               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2655   002506  6ED9               	movwf	fsr2l,c
  2656   002508  6ADA               	clrf	fsr2h,c
  2657   00250A  CFDF FFF6          	movff	indf2,tblptrl
  2658   00250E                     	if	1	;There is more than 1 active tblptr byte
  2659   00250E  0E08               	movlw	high __smallconst
  2660   002510  6EF7               	movwf	tblptrh,c
  2661   002512                     	endif
  2662   002512                     	if	0	;tblptru may be non-zero
  2663   002512                     	endif
  2664   002512                     	if	0	;tblptru may be non-zero
  2665   002512                     	endif
  2666   002512  0008               	tblrd		*
  2667   002514  50F5               	movf	tablat,w,c
  2668   002516  0A2E               	xorlw	46
  2669   002518  A4D8               	btfss	status,2,c
  2670   00251A  EF91  F012         	goto	u5561
  2671   00251E  EF93  F012         	goto	u5560
  2672   002522                     u5561:
  2673   002522  EFA1  F012         	goto	l4755
  2674   002526                     u5560:
  2675   002526                     
  2676                           ; BSR set to: 0
  2677                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1266:            
      +                           ++*fmt;
  2678   002526  518D               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2679   002528  6ED9               	movwf	fsr2l,c
  2680   00252A  6ADA               	clrf	fsr2h,c
  2681   00252C  2ADF               	incf	indf2,f,c
  2682   00252E                     
  2683                           ; BSR set to: 0
  2684                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1267:    prec = r
      +                          ead_prec_or_width(fmt, ap);
  2685   00252E  C08D  F007         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  2686   002532  C08E  F008         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  2687   002536  ECD5  F019         	call	_read_prec_or_width	;wreg free
  2688   00253A  C007  F0C9         	movff	?_read_prec_or_width,_prec
  2689   00253E  C008  F0CA         	movff	?_read_prec_or_width+1,_prec+1
  2690   002542                     l4755:
  2691                           
  2692                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1273:         if 
      +                          ((*fmt)[0] == 'c') {
  2693   002542  0100               	movlb	0	; () banked
  2694   002544  518D               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2695   002546  6ED9               	movwf	fsr2l,c
  2696   002548  6ADA               	clrf	fsr2h,c
  2697   00254A  CFDF FFF6          	movff	indf2,tblptrl
  2698   00254E                     	if	1	;There is more than 1 active tblptr byte
  2699   00254E  0E08               	movlw	high __smallconst
  2700   002550  6EF7               	movwf	tblptrh,c
  2701   002552                     	endif
  2702   002552                     	if	0	;tblptru may be non-zero
  2703   002552                     	endif
  2704   002552                     	if	0	;tblptru may be non-zero
  2705   002552                     	endif
  2706   002552  0008               	tblrd		*
  2707   002554  50F5               	movf	tablat,w,c
  2708   002556  0A63               	xorlw	99
  2709   002558  A4D8               	btfss	status,2,c
  2710   00255A  EFB1  F012         	goto	u5571
  2711   00255E  EFB3  F012         	goto	u5570
  2712   002562                     u5571:
  2713   002562  EFCA  F012         	goto	l4765
  2714   002566                     u5570:
  2715   002566                     
  2716                           ; BSR set to: 0
  2717                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1274:            
      +                           ++*fmt;
  2718   002566  518D               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2719   002568  6ED9               	movwf	fsr2l,c
  2720   00256A  6ADA               	clrf	fsr2h,c
  2721   00256C  2ADF               	incf	indf2,f,c
  2722   00256E                     
  2723                           ; BSR set to: 0
  2724                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1275:            
      +                           c = (unsigned char)(*(int *)__va_arg(*(int **)ap, (int)0));
  2725   00256E  518E               	movf	vfpfcnvrt@ap& (0+255),w,b
  2726   002570  6ED9               	movwf	fsr2l,c
  2727   002572  6ADA               	clrf	fsr2h,c
  2728   002574  50DF               	movf	indf2,w,c
  2729   002576  2ADF               	incf	indf2,f,c
  2730   002578  2ADF               	incf	indf2,f,c
  2731   00257A  6ED9               	movwf	fsr2l,c
  2732   00257C  6ADA               	clrf	fsr2h,c
  2733   00257E  50DF               	movf	indf2,w,c
  2734   002580  6F93               	movwf	vfpfcnvrt@c& (0+255),b
  2735   002582                     
  2736                           ; BSR set to: 0
  2737                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1277:    fputc(c,
      +                           fp);
  2738   002582  C093  F001         	movff	vfpfcnvrt@c,fputc@c
  2739   002586  6A02               	clrf	(fputc@c+1)^0,c
  2740   002588  C08C  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2741   00258C  EC23  F019         	call	_fputc	;wreg free
  2742   002590  EF75  F013         	goto	l997
  2743   002594                     l4765:
  2744                           
  2745                           ; BSR set to: 0
  2746                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1689:   cp = *fmt
      +                          ;
  2747   002594  518D               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2748   002596  6ED9               	movwf	fsr2l,c
  2749   002598  6ADA               	clrf	fsr2h,c
  2750   00259A  50DF               	movf	indf2,w,c
  2751   00259C  6F94               	movwf	vfpfcnvrt@cp& (0+255),b
  2752   00259E                     
  2753                           ; BSR set to: 0
  2754                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1690:   c = *cp;
  2755   00259E  C094  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2756   0025A2                     	if	1	;There is more than 1 active tblptr byte
  2757   0025A2  0E08               	movlw	high __smallconst
  2758   0025A4  6EF7               	movwf	tblptrh,c
  2759   0025A6                     	endif
  2760   0025A6                     	if	0	;tblptru may be non-zero
  2761   0025A6                     	endif
  2762   0025A6                     	if	0	;tblptru may be non-zero
  2763   0025A6                     	endif
  2764   0025A6  0008               	tblrd		*
  2765   0025A8  CFF5 F093          	movff	tablat,vfpfcnvrt@c
  2766                           
  2767                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1691:   switch(c)
      +                           {
  2768   0025AC  EFE3  F012         	goto	l4777
  2769   0025B0                     l4769:
  2770                           
  2771                           ; BSR set to: 0
  2772                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1695:     cp++;
  2773   0025B0  2B94               	incf	vfpfcnvrt@cp& (0+255),f,b
  2774                           
  2775                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1696:     break;
  2776   0025B2  EFF2  F012         	goto	l4779
  2777   0025B6                     l4771:
  2778                           
  2779                           ; BSR set to: 0
  2780                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1721:     c = 'l'
      +                          ;
  2781   0025B6  0E6C               	movlw	108
  2782   0025B8  6F93               	movwf	vfpfcnvrt@c& (0+255),b
  2783                           
  2784                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1722:     break;
  2785   0025BA  EFF2  F012         	goto	l4779
  2786   0025BE                     l4773:
  2787                           
  2788                           ; BSR set to: 0
  2789                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1724:     c = 0;
  2790   0025BE  0E00               	movlw	0
  2791   0025C0  6F93               	movwf	vfpfcnvrt@c& (0+255),b
  2792                           
  2793                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1725:     break;
  2794   0025C2  EFF2  F012         	goto	l4779
  2795   0025C6                     l4777:
  2796                           
  2797                           ; BSR set to: 0
  2798   0025C6  5193               	movf	vfpfcnvrt@c& (0+255),w,b
  2799                           
  2800                           ; Switch size 1, requested type "simple"
  2801                           ; Number of cases is 3, Range of values is 76 to 108
  2802                           ; switch strategies available:
  2803                           ; Name         Instructions Cycles
  2804                           ; simple_byte           10     6 (average)
  2805                           ;	Chosen strategy is simple_byte
  2806   0025C8  0A4C               	xorlw	76	; case 76
  2807   0025CA  B4D8               	btfsc	status,2,c
  2808   0025CC  EFD8  F012         	goto	l4769
  2809   0025D0  0A2A               	xorlw	42	; case 102
  2810   0025D2  B4D8               	btfsc	status,2,c
  2811   0025D4  EFDB  F012         	goto	l4771
  2812   0025D8  0A0A               	xorlw	10	; case 108
  2813   0025DA  B4D8               	btfsc	status,2,c
  2814   0025DC  EFD8  F012         	goto	l4769
  2815   0025E0  EFDF  F012         	goto	l4773
  2816   0025E4                     l4779:
  2817                           
  2818                           ; BSR set to: 0
  2819   0025E4  C094  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2820   0025E8                     	if	1	;There is more than 1 active tblptr byte
  2821   0025E8  0E08               	movlw	high __smallconst
  2822   0025EA  6EF7               	movwf	tblptrh,c
  2823   0025EC                     	endif
  2824   0025EC                     	if	0	;tblptru may be non-zero
  2825   0025EC                     	endif
  2826   0025EC                     	if	0	;tblptru may be non-zero
  2827   0025EC                     	endif
  2828   0025EC  0008               	tblrd		*
  2829   0025EE  50F5               	movf	tablat,w,c
  2830   0025F0  0A66               	xorlw	102
  2831   0025F2  A4D8               	btfss	status,2,c
  2832   0025F4  EFFE  F012         	goto	u5581
  2833   0025F8  EF00  F013         	goto	u5580
  2834   0025FC                     u5581:
  2835   0025FC  EF5D  F013         	goto	l4799
  2836   002600                     u5580:
  2837   002600  EF2A  F013         	goto	l4787
  2838   002604                     l4781:
  2839                           
  2840                           ; BSR set to: 0
  2841                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1756:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2842   002604  518E               	movf	vfpfcnvrt@ap& (0+255),w,b
  2843   002606  6ED9               	movwf	fsr2l,c
  2844   002608  6ADA               	clrf	fsr2h,c
  2845   00260A  CFDF F05F          	movff	indf2,??_vfpfcnvrt
  2846   00260E  0E04               	movlw	4
  2847   002610  26DF               	addwf	indf2,f,c
  2848   002612  505F               	movf	??_vfpfcnvrt^0,w,c
  2849   002614  6ED9               	movwf	fsr2l,c
  2850   002616  6ADA               	clrf	fsr2h,c
  2851   002618  CFDE F08F          	movff	postinc2,vfpfcnvrt@convarg
  2852   00261C  CFDE F090          	movff	postinc2,vfpfcnvrt@convarg+1
  2853   002620  CFDE F091          	movff	postinc2,vfpfcnvrt@convarg+2
  2854   002624  CFDE F092          	movff	postinc2,vfpfcnvrt@convarg+3
  2855                           
  2856                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1757:      break;
  2857   002628  EF35  F013         	goto	l4789
  2858   00262C                     l4783:
  2859                           
  2860                           ; BSR set to: 0
  2861                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1759:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  2862   00262C  518E               	movf	vfpfcnvrt@ap& (0+255),w,b
  2863   00262E  6ED9               	movwf	fsr2l,c
  2864   002630  6ADA               	clrf	fsr2h,c
  2865   002632  CFDF F05F          	movff	indf2,??_vfpfcnvrt
  2866   002636  0E04               	movlw	4
  2867   002638  26DF               	addwf	indf2,f,c
  2868   00263A  505F               	movf	??_vfpfcnvrt^0,w,c
  2869   00263C  6ED9               	movwf	fsr2l,c
  2870   00263E  6ADA               	clrf	fsr2h,c
  2871   002640  CFDE F08F          	movff	postinc2,vfpfcnvrt@convarg
  2872   002644  CFDE F090          	movff	postinc2,vfpfcnvrt@convarg+1
  2873   002648  CFDE F091          	movff	postinc2,vfpfcnvrt@convarg+2
  2874   00264C  CFDE F092          	movff	postinc2,vfpfcnvrt@convarg+3
  2875                           
  2876                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1760:      break;
  2877   002650  EF35  F013         	goto	l4789
  2878   002654                     l4787:
  2879                           
  2880                           ; BSR set to: 0
  2881   002654  5193               	movf	vfpfcnvrt@c& (0+255),w,b
  2882                           
  2883                           ; Switch size 1, requested type "simple"
  2884                           ; Number of cases is 2, Range of values is 76 to 108
  2885                           ; switch strategies available:
  2886                           ; Name         Instructions Cycles
  2887                           ; simple_byte            7     4 (average)
  2888                           ;	Chosen strategy is simple_byte
  2889   002656  0A4C               	xorlw	76	; case 76
  2890   002658  B4D8               	btfsc	status,2,c
  2891   00265A  EF16  F013         	goto	l4783
  2892   00265E  0A20               	xorlw	32	; case 108
  2893   002660  B4D8               	btfsc	status,2,c
  2894   002662  EF02  F013         	goto	l4781
  2895   002666  EF35  F013         	goto	l4789
  2896   00266A                     l4789:
  2897                           
  2898                           ; BSR set to: 0
  2899                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1762:    *fmt = c
      +                          p+1;
  2900   00266A  518D               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2901   00266C  6ED9               	movwf	fsr2l,c
  2902   00266E  6ADA               	clrf	fsr2h,c
  2903   002670  2994               	incf	vfpfcnvrt@cp& (0+255),w,b
  2904   002672  6EDF               	movwf	indf2,c
  2905                           
  2906                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1763:    switch (
      +                          *cp) {
  2907   002674  EF51  F013         	goto	l4797
  2908   002678                     l4791:
  2909                           
  2910                           ; BSR set to: 0
  2911                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1790:      return
      +                           (void) efgtoa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
  2912   002678  C08C  F057         	movff	vfpfcnvrt@fp,efgtoa@fp
  2913   00267C  C08F  F058         	movff	vfpfcnvrt@convarg,efgtoa@f
  2914   002680  C090  F059         	movff	vfpfcnvrt@convarg+1,efgtoa@f+1
  2915   002684  C091  F05A         	movff	vfpfcnvrt@convarg+2,efgtoa@f+2
  2916   002688  C092  F05B         	movff	vfpfcnvrt@convarg+3,efgtoa@f+3
  2917   00268C  C094  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2918   002690                     	if	1	;There is more than 1 active tblptr byte
  2919   002690  0E08               	movlw	high __smallconst
  2920   002692  6EF7               	movwf	tblptrh,c
  2921   002694                     	endif
  2922   002694                     	if	0	;tblptru may be non-zero
  2923   002694                     	endif
  2924   002694                     	if	0	;tblptru may be non-zero
  2925   002694                     	endif
  2926   002694  0008               	tblrd		*
  2927   002696  CFF5 F05C          	movff	tablat,efgtoa@c
  2928   00269A  EC20  F004         	call	_efgtoa	;wreg free
  2929   00269E  EF75  F013         	goto	l997
  2930   0026A2                     l4797:
  2931                           
  2932                           ; BSR set to: 0
  2933   0026A2  C094  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  2934   0026A6                     	if	1	;There is more than 1 active tblptr byte
  2935   0026A6  0E08               	movlw	high __smallconst
  2936   0026A8  6EF7               	movwf	tblptrh,c
  2937   0026AA                     	endif
  2938   0026AA                     	if	0	;tblptru may be non-zero
  2939   0026AA                     	endif
  2940   0026AA                     	if	0	;tblptru may be non-zero
  2941   0026AA                     	endif
  2942   0026AA  0008               	tblrd		*
  2943   0026AC  50F5               	movf	tablat,w,c
  2944                           
  2945                           ; Switch size 1, requested type "simple"
  2946                           ; Number of cases is 1, Range of values is 102 to 102
  2947                           ; switch strategies available:
  2948                           ; Name         Instructions Cycles
  2949                           ; simple_byte            4     3 (average)
  2950                           ;	Chosen strategy is simple_byte
  2951   0026AE  0A66               	xorlw	102	; case 102
  2952   0026B0  B4D8               	btfsc	status,2,c
  2953   0026B2  EF3C  F013         	goto	l4791
  2954   0026B6  EF5D  F013         	goto	l4799
  2955   0026BA                     l4799:
  2956                           
  2957                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  2958   0026BA  0100               	movlb	0	; () banked
  2959   0026BC  518D               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2960   0026BE  6ED9               	movwf	fsr2l,c
  2961   0026C0  6ADA               	clrf	fsr2h,c
  2962   0026C2  2ADF               	incf	indf2,f,c
  2963   0026C4  EF75  F013         	goto	l997
  2964   0026C8                     l4803:
  2965                           
  2966                           ; BSR set to: 0
  2967                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  2968   0026C8  518D               	movf	vfpfcnvrt@fmt& (0+255),w,b
  2969   0026CA  6ED9               	movwf	fsr2l,c
  2970   0026CC  6ADA               	clrf	fsr2h,c
  2971   0026CE  CFDF FFF6          	movff	indf2,tblptrl
  2972   0026D2                     	if	1	;There is more than 1 active tblptr byte
  2973   0026D2  0E08               	movlw	high __smallconst
  2974   0026D4  6EF7               	movwf	tblptrh,c
  2975   0026D6                     	endif
  2976   0026D6                     	if	0	;tblptru may be non-zero
  2977   0026D6                     	endif
  2978   0026D6                     	if	0	;tblptru may be non-zero
  2979   0026D6                     	endif
  2980   0026D6  0008               	tblrd		*
  2981   0026D8  50F5               	movf	tablat,w,c
  2982   0026DA  6E01               	movwf	fputc@c^0,c
  2983   0026DC  6A02               	clrf	(fputc@c+1)^0,c
  2984   0026DE  C08C  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2985   0026E2  EC23  F019         	call	_fputc	;wreg free
  2986   0026E6  EF5D  F013         	goto	l4799
  2987   0026EA                     l997:
  2988   0026EA  0012               	return		;funcret
  2989   0026EC                     __end_of_vfpfcnvrt:
  2990                           	callstack 0
  2991                           
  2992 ;; *************** function _read_prec_or_width *****************
  2993 ;; Defined at:
  2994 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  2995 ;; Parameters:    Size  Location     Type
  2996 ;;  fmt             1    6[COMRAM] PTR PTR const unsigned c
  2997 ;;		 -> vfprintf@cfmt(1), 
  2998 ;;  ap              1    7[COMRAM] PTR PTR void [1]
  2999 ;;		 -> sprintf@ap(1), 
  3000 ;; Auto vars:     Size  Location     Type
  3001 ;;  c               1    8[COMRAM] unsigned char 
  3002 ;;  n               2    9[COMRAM] int 
  3003 ;; Return value:  Size  Location     Type
  3004 ;;                  2    6[COMRAM] int 
  3005 ;; Registers used:
  3006 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3007 ;; Tracked objects:
  3008 ;;		On entry : 0/0
  3009 ;;		On exit  : 0/0
  3010 ;;		Unchanged: 0/0
  3011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3012 ;;      Params:         2       0       0       0       0       0       0       0       0
  3013 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3014 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3015 ;;      Totals:         5       0       0       0       0       0       0       0       0
  3016 ;;Total ram usage:        5 bytes
  3017 ;; Hardware stack levels used: 1
  3018 ;; Hardware stack levels required when called: 1
  3019 ;; This function calls:
  3020 ;;		___wmul
  3021 ;; This function is called by:
  3022 ;;		_vfpfcnvrt
  3023 ;; This function uses a non-reentrant model
  3024 ;;
  3025                           
  3026                           	psect	text9
  3027   0033AA                     __ptext9:
  3028                           	callstack 0
  3029   0033AA                     _read_prec_or_width:
  3030                           	callstack 25
  3031   0033AA                     
  3032                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1159:     int n =
      +                           0;
  3033   0033AA  0E00               	movlw	0
  3034   0033AC  6E0B               	movwf	(read_prec_or_width@n+1)^0,c
  3035   0033AE  0E00               	movlw	0
  3036   0033B0  6E0A               	movwf	read_prec_or_width@n^0,c
  3037   0033B2                     
  3038                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1160:     if ((*f
      +                          mt)[0] == '*') {
  3039   0033B2  5007               	movf	read_prec_or_width@fmt^0,w,c
  3040   0033B4  6ED9               	movwf	fsr2l,c
  3041   0033B6  6ADA               	clrf	fsr2h,c
  3042   0033B8  CFDF FFF6          	movff	indf2,tblptrl
  3043   0033BC                     	if	1	;There is more than 1 active tblptr byte
  3044   0033BC  0E08               	movlw	high __smallconst
  3045   0033BE  6EF7               	movwf	tblptrh,c
  3046   0033C0                     	endif
  3047   0033C0                     	if	0	;tblptru may be non-zero
  3048   0033C0                     	endif
  3049   0033C0                     	if	0	;tblptru may be non-zero
  3050   0033C0                     	endif
  3051   0033C0  0008               	tblrd		*
  3052   0033C2  50F5               	movf	tablat,w,c
  3053   0033C4  0A2A               	xorlw	42
  3054   0033C6  A4D8               	btfss	status,2,c
  3055   0033C8  EFE8  F019         	goto	u5531
  3056   0033CC  EFEA  F019         	goto	u5530
  3057   0033D0                     u5531:
  3058   0033D0  EF10  F01A         	goto	l4739
  3059   0033D4                     u5530:
  3060   0033D4                     
  3061                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1161:         ++*
      +                          fmt;
  3062   0033D4  5007               	movf	read_prec_or_width@fmt^0,w,c
  3063   0033D6  6ED9               	movwf	fsr2l,c
  3064   0033D8  6ADA               	clrf	fsr2h,c
  3065   0033DA  2ADF               	incf	indf2,f,c
  3066   0033DC                     
  3067                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1162:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
  3068   0033DC  5008               	movf	read_prec_or_width@ap^0,w,c
  3069   0033DE  6ED9               	movwf	fsr2l,c
  3070   0033E0  6ADA               	clrf	fsr2h,c
  3071   0033E2  0E02               	movlw	2
  3072   0033E4  26DF               	addwf	indf2,f,c
  3073   0033E6  5CDF               	subwf	indf2,w,c
  3074   0033E8  6ED9               	movwf	fsr2l,c
  3075   0033EA  6ADA               	clrf	fsr2h,c
  3076   0033EC  CFDE F00A          	movff	postinc2,read_prec_or_width@n
  3077   0033F0  CFDE F00B          	movff	postinc2,read_prec_or_width@n+1
  3078                           
  3079                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1163:     } else 
      +                          {
  3080   0033F4  EF23  F01A         	goto	l987
  3081   0033F8                     l4735:
  3082                           
  3083                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1166:            
      +                           n = n * 10 + c;
  3084   0033F8  C00A  F001         	movff	read_prec_or_width@n,___wmul@multiplier
  3085   0033FC  C00B  F002         	movff	read_prec_or_width@n+1,___wmul@multiplier+1
  3086   003400  0E00               	movlw	0
  3087   003402  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  3088   003404  0E0A               	movlw	10
  3089   003406  6E03               	movwf	___wmul@multiplicand^0,c
  3090   003408  EC3A  F01C         	call	___wmul	;wreg free
  3091   00340C  5009               	movf	read_prec_or_width@c^0,w,c
  3092   00340E  2401               	addwf	?___wmul^0,w,c
  3093   003410  6E0A               	movwf	read_prec_or_width@n^0,c
  3094   003412  0E00               	movlw	0
  3095   003414  2002               	addwfc	(?___wmul+1)^0,w,c
  3096   003416  6E0B               	movwf	(read_prec_or_width@n+1)^0,c
  3097   003418                     
  3098                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1167:            
      +                           ++*fmt;
  3099   003418  5007               	movf	read_prec_or_width@fmt^0,w,c
  3100   00341A  6ED9               	movwf	fsr2l,c
  3101   00341C  6ADA               	clrf	fsr2h,c
  3102   00341E  2ADF               	incf	indf2,f,c
  3103   003420                     l4739:
  3104                           
  3105                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1165:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  3106   003420  5007               	movf	read_prec_or_width@fmt^0,w,c
  3107   003422  6ED9               	movwf	fsr2l,c
  3108   003424  6ADA               	clrf	fsr2h,c
  3109   003426  CFDF FFF6          	movff	indf2,tblptrl
  3110   00342A                     	if	1	;There is more than 1 active tblptr byte
  3111   00342A  0E08               	movlw	high __smallconst
  3112   00342C  6EF7               	movwf	tblptrh,c
  3113   00342E                     	endif
  3114   00342E                     	if	0	;tblptru may be non-zero
  3115   00342E                     	endif
  3116   00342E                     	if	0	;tblptru may be non-zero
  3117   00342E                     	endif
  3118   00342E  0008               	tblrd		*
  3119   003430  50F5               	movf	tablat,w,c
  3120   003432  0FD0               	addlw	208
  3121   003434  6E09               	movwf	read_prec_or_width@c^0,c
  3122   003436  0E09               	movlw	9
  3123   003438  6409               	cpfsgt	read_prec_or_width@c^0,c
  3124   00343A  EF21  F01A         	goto	u5541
  3125   00343E  EF23  F01A         	goto	u5540
  3126   003442                     u5541:
  3127   003442  EFFC  F019         	goto	l4735
  3128   003446                     u5540:
  3129   003446                     l987:
  3130                           
  3131                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 1170:     return 
      +                          n;
  3132   003446  C00A  F007         	movff	read_prec_or_width@n,?_read_prec_or_width
  3133   00344A  C00B  F008         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
  3134   00344E  0012               	return		;funcret
  3135   003450                     __end_of_read_prec_or_width:
  3136                           	callstack 0
  3137                           
  3138 ;; *************** function ___wmul *****************
  3139 ;; Defined at:
  3140 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\Umul16.c"
  3141 ;; Parameters:    Size  Location     Type
  3142 ;;  multiplier      2    0[COMRAM] unsigned int 
  3143 ;;  multiplicand    2    2[COMRAM] unsigned int 
  3144 ;; Auto vars:     Size  Location     Type
  3145 ;;  product         2    4[COMRAM] unsigned int 
  3146 ;; Return value:  Size  Location     Type
  3147 ;;                  2    0[COMRAM] unsigned int 
  3148 ;; Registers used:
  3149 ;;		wreg, status,2, status,0, prodl, prodh
  3150 ;; Tracked objects:
  3151 ;;		On entry : 0/0
  3152 ;;		On exit  : 0/0
  3153 ;;		Unchanged: 0/0
  3154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3155 ;;      Params:         4       0       0       0       0       0       0       0       0
  3156 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3157 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3158 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3159 ;;Total ram usage:        6 bytes
  3160 ;; Hardware stack levels used: 1
  3161 ;; This function calls:
  3162 ;;		Nothing
  3163 ;; This function is called by:
  3164 ;;		_read_prec_or_width
  3165 ;; This function uses a non-reentrant model
  3166 ;;
  3167                           
  3168                           	psect	text10
  3169   003874                     __ptext10:
  3170                           	callstack 0
  3171   003874                     ___wmul:
  3172                           	callstack 25
  3173   003874  5001               	movf	___wmul@multiplier^0,w,c
  3174   003876  0203               	mulwf	___wmul@multiplicand^0,c
  3175   003878  CFF3 F005          	movff	prodl,___wmul@product
  3176   00387C  CFF4 F006          	movff	prodh,___wmul@product+1
  3177   003880  5001               	movf	___wmul@multiplier^0,w,c
  3178   003882  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  3179   003884  50F3               	movf	243,w,c
  3180   003886  2606               	addwf	(___wmul@product+1)^0,f,c
  3181   003888  5002               	movf	(___wmul@multiplier+1)^0,w,c
  3182   00388A  0203               	mulwf	___wmul@multiplicand^0,c
  3183   00388C  50F3               	movf	243,w,c
  3184   00388E  2606               	addwf	(___wmul@product+1)^0,f,c
  3185   003890  C005  F001         	movff	___wmul@product,?___wmul
  3186   003894  C006  F002         	movff	___wmul@product+1,?___wmul+1
  3187   003898  0012               	return		;funcret
  3188   00389A                     __end_of___wmul:
  3189                           	callstack 0
  3190                           
  3191 ;; *************** function _efgtoa *****************
  3192 ;; Defined at:
  3193 ;;		line 587 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  3194 ;; Parameters:    Size  Location     Type
  3195 ;;  fp              1   86[COMRAM] PTR struct _IO_FILE
  3196 ;;		 -> sprintf@f(12), 
  3197 ;;  f               4   87[COMRAM] PTR struct _IO_FILE
  3198 ;;  c               1   91[COMRAM] unsigned char 
  3199 ;; Auto vars:     Size  Location     Type
  3200 ;;  u               4   40[BANK0 ] struct flui
  3201 ;;  g               4   34[BANK0 ] struct flui
  3202 ;;  l               4   29[BANK0 ] struct flui
  3203 ;;  h               4   25[BANK0 ] struct flui
  3204 ;;  ou              4   19[BANK0 ] struct flui
  3205 ;;  n               2   38[BANK0 ] int 
  3206 ;;  i               2   23[BANK0 ] int 
  3207 ;;  w               2   17[BANK0 ] int 
  3208 ;;  e               2   15[BANK0 ] int 
  3209 ;;  m               2   13[BANK0 ] int 
  3210 ;;  d               2   11[BANK0 ] int 
  3211 ;;  t               2    4[BANK0 ] int 
  3212 ;;  p               2    2[BANK0 ] int 
  3213 ;;  ne              2    0[BANK0 ] int 
  3214 ;;  sign            1   33[BANK0 ] unsigned char 
  3215 ;;  nmode           1   10[BANK0 ] unsigned char 
  3216 ;;  mode            1    9[BANK0 ] unsigned char 
  3217 ;;  pp              1    8[BANK0 ] unsigned char 
  3218 ;;  esign           1    0        unsigned char 
  3219 ;; Return value:  Size  Location     Type
  3220 ;;                  1    wreg      void 
  3221 ;; Registers used:
  3222 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3223 ;; Tracked objects:
  3224 ;;		On entry : 0/0
  3225 ;;		On exit  : 0/0
  3226 ;;		Unchanged: 0/0
  3227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3228 ;;      Params:         6       0       0       0       0       0       0       0       0
  3229 ;;      Locals:         0      44       0       0       0       0       0       0       0
  3230 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3231 ;;      Totals:         8      44       0       0       0       0       0       0       0
  3232 ;;Total ram usage:       52 bytes
  3233 ;; Hardware stack levels used: 1
  3234 ;; Hardware stack levels required when called: 4
  3235 ;; This function calls:
  3236 ;;		___fladd
  3237 ;;		___fldiv
  3238 ;;		___fleq
  3239 ;;		___flge
  3240 ;;		___flmul
  3241 ;;		___flneg
  3242 ;;		___flsub
  3243 ;;		___fltol
  3244 ;;		___fpclassifyf
  3245 ;;		_floorf
  3246 ;;		_labs
  3247 ;;		_memcpy
  3248 ;;		_pad
  3249 ;;		_strcpy
  3250 ;; This function is called by:
  3251 ;;		_vfpfcnvrt
  3252 ;; This function uses a non-reentrant model
  3253 ;;
  3254                           
  3255                           	psect	text11
  3256   000840                     __ptext11:
  3257                           	callstack 0
  3258   000840                     _efgtoa:
  3259                           	callstack 22
  3260   000840                     
  3261                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 587: static void 
      +                          efgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.46\pic\sources
      +                          \c99\common\doprnt.c: 588: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common
      +                          \doprnt.c: 589:     char mode, nmode, pp, sign, esign;;C:\Program Files\Microchip\xc8\v2
      +                          .46\pic\sources\c99\common\doprnt.c: 590:     int d, e, i, m, n, ne, p, t, w;;C:\Program
      +                           Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 591:     long double h, l;
  3262   000840  0E00               	movlw	0
  3263   000842  0100               	movlb	0	; () banked
  3264   000844  6F81               	movwf	efgtoa@sign& (0+255),b
  3265   000846                     
  3266                           ; BSR set to: 0
  3267                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 596:     g.f = f;
  3268   000846  C058  F082         	movff	efgtoa@f,efgtoa@g
  3269   00084A  C059  F083         	movff	efgtoa@f+1,efgtoa@g+1
  3270   00084E  C05A  F084         	movff	efgtoa@f+2,efgtoa@g+2
  3271   000852  C05B  F085         	movff	efgtoa@f+3,efgtoa@g+3
  3272   000856                     
  3273                           ; BSR set to: 0
  3274                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 597:     if (g.f 
      +                          < 0.0) {
  3275   000856  BF85               	btfsc	(efgtoa@g+3)& (0+255),7,b
  3276   000858  EF32  F004         	goto	u5210
  3277   00085C  EF30  F004         	goto	u5211
  3278   000860                     u5211:
  3279   000860  EF46  F004         	goto	l4515
  3280   000864                     u5210:
  3281   000864                     
  3282                           ; BSR set to: 0
  3283                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 598:         sign
      +                           = 1;
  3284   000864  0E01               	movlw	1
  3285   000866  6F81               	movwf	efgtoa@sign& (0+255),b
  3286   000868                     
  3287                           ; BSR set to: 0
  3288                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 599:         g.f 
      +                          = -g.f;
  3289   000868  C082  F001         	movff	efgtoa@g,___flneg@f1
  3290   00086C  C083  F002         	movff	efgtoa@g+1,___flneg@f1+1
  3291   000870  C084  F003         	movff	efgtoa@g+2,___flneg@f1+2
  3292   000874  C085  F004         	movff	efgtoa@g+3,___flneg@f1+3
  3293   000878  ECE9  F01B         	call	___flneg	;wreg free
  3294   00087C  C001  F082         	movff	?___flneg,efgtoa@g
  3295   000880  C002  F083         	movff	?___flneg+1,efgtoa@g+1
  3296   000884  C003  F084         	movff	?___flneg+2,efgtoa@g+2
  3297   000888  C004  F085         	movff	?___flneg+3,efgtoa@g+3
  3298   00088C                     l4515:
  3299                           
  3300                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 603:     n = 0;
  3301   00088C  0E00               	movlw	0
  3302   00088E  0100               	movlb	0	; () banked
  3303   000890  6F87               	movwf	(efgtoa@n+1)& (0+255),b
  3304   000892  0E00               	movlw	0
  3305   000894  6F86               	movwf	efgtoa@n& (0+255),b
  3306   000896                     
  3307                           ; BSR set to: 0
  3308                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 604:     w = widt
      +                          h;
  3309   000896  C0C7  F071         	movff	_width,efgtoa@w
  3310   00089A  C0C8  F072         	movff	_width+1,efgtoa@w+1
  3311   00089E                     
  3312                           ; BSR set to: 0
  3313                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 605:     if (sign
  3314   00089E  5181               	movf	efgtoa@sign& (0+255),w,b
  3315   0008A0  B4D8               	btfsc	status,2,c
  3316   0008A2  EF55  F004         	goto	u5221
  3317   0008A6  EF57  F004         	goto	u5220
  3318   0008AA                     u5221:
  3319   0008AA  EF6B  F004         	goto	l4529
  3320   0008AE                     u5220:
  3321   0008AE                     
  3322                           ; BSR set to: 0
  3323                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 609:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 610:   sign = sign ? '-
      +                          ' : '+';
  3324   0008AE  5181               	movf	efgtoa@sign& (0+255),w,b
  3325   0008B0  A4D8               	btfss	status,2,c
  3326   0008B2  EF5D  F004         	goto	u5231
  3327   0008B6  EF5F  F004         	goto	u5230
  3328   0008BA                     u5231:
  3329   0008BA  EF65  F004         	goto	l4525
  3330   0008BE                     u5230:
  3331   0008BE                     
  3332                           ; BSR set to: 0
  3333   0008BE  0E00               	movlw	0
  3334   0008C0  6F67               	movwf	(_efgtoa$861+1)& (0+255),b
  3335   0008C2  0E2B               	movlw	43
  3336   0008C4  6F66               	movwf	_efgtoa$861& (0+255),b
  3337   0008C6  EF69  F004         	goto	l4527
  3338   0008CA                     l4525:
  3339                           
  3340                           ; BSR set to: 0
  3341   0008CA  0E00               	movlw	0
  3342   0008CC  6F67               	movwf	(_efgtoa$861+1)& (0+255),b
  3343   0008CE  0E2D               	movlw	45
  3344   0008D0  6F66               	movwf	_efgtoa$861& (0+255),b
  3345   0008D2                     l4527:
  3346                           
  3347                           ; BSR set to: 0
  3348   0008D2  C066  F081         	movff	_efgtoa$861,efgtoa@sign
  3349   0008D6                     l4529:
  3350                           
  3351                           ; BSR set to: 0
  3352                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 619:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
  3353   0008D6  C082  F001         	movff	efgtoa@g,___fpclassifyf@x
  3354   0008DA  C083  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3355   0008DE  C084  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3356   0008E2  C085  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3357   0008E6  ECC7  F017         	call	___fpclassifyf	;wreg free
  3358   0008EA  0401               	decf	?___fpclassifyf^0,w,c
  3359   0008EC  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  3360   0008EE  A4D8               	btfss	status,2,c
  3361   0008F0  EF7C  F004         	goto	u5241
  3362   0008F4  EF7E  F004         	goto	u5240
  3363   0008F8                     u5241:
  3364   0008F8  EFAD  F004         	goto	l4547
  3365   0008FC                     u5240:
  3366   0008FC                     
  3367                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 620:   if (sign) 
      +                          {
  3368   0008FC  0100               	movlb	0	; () banked
  3369   0008FE  5181               	movf	efgtoa@sign& (0+255),w,b
  3370   000900  B4D8               	btfsc	status,2,c
  3371   000902  EF85  F004         	goto	u5251
  3372   000906  EF87  F004         	goto	u5250
  3373   00090A                     u5251:
  3374   00090A  EF90  F004         	goto	l4539
  3375   00090E                     u5250:
  3376   00090E                     
  3377                           ; BSR set to: 0
  3378                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 621:    dbuf[0] =
      +                           sign;
  3379   00090E  C081  F100         	movff	efgtoa@sign,_dbuf
  3380   000912                     
  3381                           ; BSR set to: 0
  3382                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 622:    w--;
  3383   000912  0771               	decf	efgtoa@w& (0+255),f,b
  3384   000914  A0D8               	btfss	status,0,c
  3385   000916  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  3386   000918                     
  3387                           ; BSR set to: 0
  3388                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 623:    n = 1;
  3389   000918  0E00               	movlw	0
  3390   00091A  6F87               	movwf	(efgtoa@n+1)& (0+255),b
  3391   00091C  0E01               	movlw	1
  3392   00091E  6F86               	movwf	efgtoa@n& (0+255),b
  3393   000920                     l4539:
  3394                           
  3395                           ; BSR set to: 0
  3396                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 631:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 632:             strcpy(&d
      +                          buf[n], "inf");
  3397   000920  0E00               	movlw	low _dbuf
  3398   000922  2586               	addwf	efgtoa@n& (0+255),w,b
  3399   000924  6E01               	movwf	strcpy@dest^0,c
  3400   000926  0E01               	movlw	high _dbuf
  3401   000928  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3402   00092A  6E02               	movwf	(strcpy@dest+1)^0,c
  3403   00092C  0E36               	movlw	low STR_3
  3404   00092E  6E03               	movwf	strcpy@src^0,c
  3405   000930  ECCC  F01B         	call	_strcpy	;wreg free
  3406   000934                     l4541:
  3407                           
  3408                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 633:         };C:
      +                          \Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 634:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
  3409   000934  0100               	movlb	0	; () banked
  3410   000936  0EFD               	movlw	253
  3411   000938  2771               	addwf	efgtoa@w& (0+255),f,b
  3412   00093A  0EFF               	movlw	255
  3413   00093C  2372               	addwfc	(efgtoa@w+1)& (0+255),f,b
  3414   00093E                     
  3415                           ; BSR set to: 0
  3416                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 635:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
  3417   00093E  C057  F00F         	movff	efgtoa@fp,pad@fp
  3418   000942  0E00               	movlw	low _dbuf
  3419   000944  6E10               	movwf	pad@buf^0,c
  3420   000946  0E01               	movlw	high _dbuf
  3421   000948  6E11               	movwf	(pad@buf+1)^0,c
  3422   00094A  C071  F012         	movff	efgtoa@w,pad@p
  3423   00094E  C072  F013         	movff	efgtoa@w+1,pad@p+1
  3424   000952  EC77  F01A         	call	_pad	;wreg free
  3425   000956  EF13  F009         	goto	l942
  3426   00095A                     l4547:
  3427                           
  3428                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 637:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
  3429   00095A  C082  F001         	movff	efgtoa@g,___fpclassifyf@x
  3430   00095E  C083  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3431   000962  C084  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3432   000966  C085  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3433   00096A  ECC7  F017         	call	___fpclassifyf	;wreg free
  3434   00096E  5001               	movf	?___fpclassifyf^0,w,c
  3435   000970  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  3436   000972  A4D8               	btfss	status,2,c
  3437   000974  EFBE  F004         	goto	u5261
  3438   000978  EFC0  F004         	goto	u5260
  3439   00097C                     u5261:
  3440   00097C  EFDE  F004         	goto	l4565
  3441   000980                     u5260:
  3442   000980                     
  3443                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 638:   if (sign) 
      +                          {
  3444   000980  0100               	movlb	0	; () banked
  3445   000982  5181               	movf	efgtoa@sign& (0+255),w,b
  3446   000984  B4D8               	btfsc	status,2,c
  3447   000986  EFC7  F004         	goto	u5271
  3448   00098A  EFC9  F004         	goto	u5270
  3449   00098E                     u5271:
  3450   00098E  EFD2  F004         	goto	l4557
  3451   000992                     u5270:
  3452   000992                     
  3453                           ; BSR set to: 0
  3454                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 639:    dbuf[0] =
      +                           sign;
  3455   000992  C081  F100         	movff	efgtoa@sign,_dbuf
  3456   000996                     
  3457                           ; BSR set to: 0
  3458                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 640:    w--;
  3459   000996  0771               	decf	efgtoa@w& (0+255),f,b
  3460   000998  A0D8               	btfss	status,0,c
  3461   00099A  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  3462   00099C                     
  3463                           ; BSR set to: 0
  3464                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 641:    n = 1;
  3465   00099C  0E00               	movlw	0
  3466   00099E  6F87               	movwf	(efgtoa@n+1)& (0+255),b
  3467   0009A0  0E01               	movlw	1
  3468   0009A2  6F86               	movwf	efgtoa@n& (0+255),b
  3469   0009A4                     l4557:
  3470                           
  3471                           ; BSR set to: 0
  3472                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 649:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 650:             strcpy(&d
      +                          buf[n], "nan");
  3473   0009A4  0E00               	movlw	low _dbuf
  3474   0009A6  2586               	addwf	efgtoa@n& (0+255),w,b
  3475   0009A8  6E01               	movwf	strcpy@dest^0,c
  3476   0009AA  0E01               	movlw	high _dbuf
  3477   0009AC  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3478   0009AE  6E02               	movwf	(strcpy@dest+1)^0,c
  3479   0009B0  0E3A               	movlw	low STR_6
  3480   0009B2  6E03               	movwf	strcpy@src^0,c
  3481   0009B4  ECCC  F01B         	call	_strcpy	;wreg free
  3482   0009B8  EF9A  F004         	goto	l4541
  3483   0009BC                     l4565:
  3484                           
  3485                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 657:     u.f = 1.
      +                          0;
  3486   0009BC  0E00               	movlw	0
  3487   0009BE  0100               	movlb	0	; () banked
  3488   0009C0  6F88               	movwf	efgtoa@u& (0+255),b
  3489   0009C2  0E00               	movlw	0
  3490   0009C4  6F89               	movwf	(efgtoa@u+1)& (0+255),b
  3491   0009C6  0E80               	movlw	128
  3492   0009C8  6F8A               	movwf	(efgtoa@u+2)& (0+255),b
  3493   0009CA  0E3F               	movlw	63
  3494   0009CC  6F8B               	movwf	(efgtoa@u+3)& (0+255),b
  3495                           
  3496                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 658:     e = 0;
  3497   0009CE  0E00               	movlw	0
  3498   0009D0  6F70               	movwf	(efgtoa@e+1)& (0+255),b
  3499   0009D2  0E00               	movlw	0
  3500   0009D4  6F6F               	movwf	efgtoa@e& (0+255),b
  3501   0009D6                     
  3502                           ; BSR set to: 0
  3503                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 659:  if (!(g.f =
      +                          = 0.0)) {
  3504   0009D6  C082  F001         	movff	efgtoa@g,___fleq@ff1
  3505   0009DA  C083  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  3506   0009DE  C084  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  3507   0009E2  C085  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  3508   0009E6  0E00               	movlw	0
  3509   0009E8  6E05               	movwf	___fleq@ff2^0,c
  3510   0009EA  0E00               	movlw	0
  3511   0009EC  6E06               	movwf	(___fleq@ff2+1)^0,c
  3512   0009EE  0E00               	movlw	0
  3513   0009F0  6E07               	movwf	(___fleq@ff2+2)^0,c
  3514   0009F2  0E00               	movlw	0
  3515   0009F4  6E08               	movwf	(___fleq@ff2+3)^0,c
  3516   0009F6  EC80  F019         	call	___fleq	;wreg free
  3517   0009FA  B0D8               	btfsc	status,0,c
  3518   0009FC  EF02  F005         	goto	u5281
  3519   000A00  EF04  F005         	goto	u5280
  3520   000A04                     u5281:
  3521   000A04  EFE3  F005         	goto	l945
  3522   000A08                     u5280:
  3523   000A08  EF11  F005         	goto	l4573
  3524   000A0C                     l947:
  3525                           
  3526                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 661:    u = ou;
  3527   000A0C  C073  F088         	movff	efgtoa@ou,efgtoa@u
  3528   000A10  C074  F089         	movff	efgtoa@ou+1,efgtoa@u+1
  3529   000A14  C075  F08A         	movff	efgtoa@ou+2,efgtoa@u+2
  3530   000A18  C076  F08B         	movff	efgtoa@ou+3,efgtoa@u+3
  3531   000A1C                     
  3532                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 662:    ++e;
  3533   000A1C  0100               	movlb	0	; () banked
  3534   000A1E  4B6F               	infsnz	efgtoa@e& (0+255),f,b
  3535   000A20  2B70               	incf	(efgtoa@e+1)& (0+255),f,b
  3536   000A22                     l4573:
  3537                           
  3538                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 660:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
  3539   000A22  C088  F001         	movff	efgtoa@u,___flmul@b
  3540   000A26  C089  F002         	movff	efgtoa@u+1,___flmul@b+1
  3541   000A2A  C08A  F003         	movff	efgtoa@u+2,___flmul@b+2
  3542   000A2E  C08B  F004         	movff	efgtoa@u+3,___flmul@b+3
  3543   000A32  0E00               	movlw	0
  3544   000A34  6E05               	movwf	___flmul@a^0,c
  3545   000A36  0E00               	movlw	0
  3546   000A38  6E06               	movwf	(___flmul@a+1)^0,c
  3547   000A3A  0E20               	movlw	32
  3548   000A3C  6E07               	movwf	(___flmul@a+2)^0,c
  3549   000A3E  0E41               	movlw	65
  3550   000A40  6E08               	movwf	(___flmul@a+3)^0,c
  3551   000A42  EC82  F00E         	call	___flmul	;wreg free
  3552   000A46  C001  F073         	movff	?___flmul,efgtoa@ou
  3553   000A4A  C002  F074         	movff	?___flmul+1,efgtoa@ou+1
  3554   000A4E  C003  F075         	movff	?___flmul+2,efgtoa@ou+2
  3555   000A52  C004  F076         	movff	?___flmul+3,efgtoa@ou+3
  3556   000A56  0100               	movlb	0	; () banked
  3557   000A58  5173               	movf	efgtoa@ou& (0+255),w,b
  3558   000A5A  5D82               	subwf	efgtoa@g& (0+255),w,b
  3559   000A5C  6E01               	movwf	labs@a^0,c
  3560   000A5E  5174               	movf	(efgtoa@ou+1)& (0+255),w,b
  3561   000A60  5983               	subwfb	(efgtoa@g+1)& (0+255),w,b
  3562   000A62  6E02               	movwf	(labs@a+1)^0,c
  3563   000A64  5175               	movf	(efgtoa@ou+2)& (0+255),w,b
  3564   000A66  5984               	subwfb	(efgtoa@g+2)& (0+255),w,b
  3565   000A68  6E03               	movwf	(labs@a+2)^0,c
  3566   000A6A  5176               	movf	(efgtoa@ou+3)& (0+255),w,b
  3567   000A6C  5985               	subwfb	(efgtoa@g+3)& (0+255),w,b
  3568   000A6E  6E04               	movwf	(labs@a+3)^0,c
  3569   000A70  ECAA  F01A         	call	_labs	;wreg free
  3570   000A74  BE04               	btfsc	(?_labs+3)^0,7,c
  3571   000A76  EF48  F005         	goto	u5291
  3572   000A7A  5004               	movf	(?_labs+3)^0,w,c
  3573   000A7C  1003               	iorwf	(?_labs+2)^0,w,c
  3574   000A7E  1002               	iorwf	(?_labs+1)^0,w,c
  3575   000A80  E109               	bnz	u5290
  3576   000A82  0E02               	movlw	2
  3577   000A84  5C01               	subwf	?_labs^0,w,c
  3578   000A86  A0D8               	btfss	status,0,c
  3579   000A88  EF48  F005         	goto	u5291
  3580   000A8C  EF4A  F005         	goto	u5290
  3581   000A90                     u5291:
  3582   000A90  EF06  F005         	goto	l947
  3583   000A94                     u5290:
  3584   000A94  C073  F01A         	movff	efgtoa@ou,___flge@ff1
  3585   000A98  C074  F01B         	movff	efgtoa@ou+1,___flge@ff1+1
  3586   000A9C  C075  F01C         	movff	efgtoa@ou+2,___flge@ff1+2
  3587   000AA0  C076  F01D         	movff	efgtoa@ou+3,___flge@ff1+3
  3588   000AA4  C082  F01E         	movff	efgtoa@g,___flge@ff2
  3589   000AA8  C083  F01F         	movff	efgtoa@g+1,___flge@ff2+1
  3590   000AAC  C084  F020         	movff	efgtoa@g+2,___flge@ff2+2
  3591   000AB0  C085  F021         	movff	efgtoa@g+3,___flge@ff2+3
  3592   000AB4  EC45  F017         	call	___flge	;wreg free
  3593   000AB8  A0D8               	btfss	status,0,c
  3594   000ABA  EF61  F005         	goto	u5301
  3595   000ABE  EF63  F005         	goto	u5300
  3596   000AC2                     u5301:
  3597   000AC2  EF06  F005         	goto	l947
  3598   000AC6                     u5300:
  3599   000AC6                     
  3600                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 664:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
  3601   000AC6  0100               	movlb	0	; () banked
  3602   000AC8  5188               	movf	efgtoa@u& (0+255),w,b
  3603   000ACA  5D82               	subwf	efgtoa@g& (0+255),w,b
  3604   000ACC  6E01               	movwf	labs@a^0,c
  3605   000ACE  5189               	movf	(efgtoa@u+1)& (0+255),w,b
  3606   000AD0  5983               	subwfb	(efgtoa@g+1)& (0+255),w,b
  3607   000AD2  6E02               	movwf	(labs@a+1)^0,c
  3608   000AD4  518A               	movf	(efgtoa@u+2)& (0+255),w,b
  3609   000AD6  5984               	subwfb	(efgtoa@g+2)& (0+255),w,b
  3610   000AD8  6E03               	movwf	(labs@a+2)^0,c
  3611   000ADA  518B               	movf	(efgtoa@u+3)& (0+255),w,b
  3612   000ADC  5985               	subwfb	(efgtoa@g+3)& (0+255),w,b
  3613   000ADE  6E04               	movwf	(labs@a+3)^0,c
  3614   000AE0  ECAA  F01A         	call	_labs	;wreg free
  3615   000AE4  BE04               	btfsc	(?_labs+3)^0,7,c
  3616   000AE6  EF82  F005         	goto	u5310
  3617   000AEA  5004               	movf	(?_labs+3)^0,w,c
  3618   000AEC  1003               	iorwf	(?_labs+2)^0,w,c
  3619   000AEE  1002               	iorwf	(?_labs+1)^0,w,c
  3620   000AF0  E107               	bnz	u5311
  3621   000AF2  0E02               	movlw	2
  3622   000AF4  5C01               	subwf	?_labs^0,w,c
  3623   000AF6  B0D8               	btfsc	status,0,c
  3624   000AF8  EF80  F005         	goto	u5311
  3625   000AFC  EF82  F005         	goto	u5310
  3626   000B00                     u5311:
  3627   000B00  EFCA  F005         	goto	l4591
  3628   000B04                     u5310:
  3629   000B04                     l4581:
  3630                           
  3631                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 665:    g = u;
  3632   000B04  C088  F082         	movff	efgtoa@u,efgtoa@g
  3633   000B08  C089  F083         	movff	efgtoa@u+1,efgtoa@g+1
  3634   000B0C  C08A  F084         	movff	efgtoa@u+2,efgtoa@g+2
  3635   000B10  C08B  F085         	movff	efgtoa@u+3,efgtoa@g+3
  3636                           
  3637                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 666:   }
  3638   000B14  EFE3  F005         	goto	l945
  3639   000B18                     l4583:
  3640                           
  3641                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 669:     u.f = u.
      +                          f/10.0;
  3642   000B18  C088  F02A         	movff	efgtoa@u,___fldiv@b
  3643   000B1C  C089  F02B         	movff	efgtoa@u+1,___fldiv@b+1
  3644   000B20  C08A  F02C         	movff	efgtoa@u+2,___fldiv@b+2
  3645   000B24  C08B  F02D         	movff	efgtoa@u+3,___fldiv@b+3
  3646   000B28  0E00               	movlw	0
  3647   000B2A  6E2E               	movwf	___fldiv@a^0,c
  3648   000B2C  0E00               	movlw	0
  3649   000B2E  6E2F               	movwf	(___fldiv@a+1)^0,c
  3650   000B30  0E20               	movlw	32
  3651   000B32  6E30               	movwf	(___fldiv@a+2)^0,c
  3652   000B34  0E41               	movlw	65
  3653   000B36  6E31               	movwf	(___fldiv@a+3)^0,c
  3654   000B38  EC97  F010         	call	___fldiv	;wreg free
  3655   000B3C  C02A  F088         	movff	?___fldiv,efgtoa@u
  3656   000B40  C02B  F089         	movff	?___fldiv+1,efgtoa@u+1
  3657   000B44  C02C  F08A         	movff	?___fldiv+2,efgtoa@u+2
  3658   000B48  C02D  F08B         	movff	?___fldiv+3,efgtoa@u+3
  3659   000B4C                     
  3660                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 670:     --e;
  3661   000B4C  0100               	movlb	0	; () banked
  3662   000B4E  076F               	decf	efgtoa@e& (0+255),f,b
  3663   000B50  A0D8               	btfss	status,0,c
  3664   000B52  0770               	decf	(efgtoa@e+1)& (0+255),f,b
  3665   000B54                     
  3666                           ; BSR set to: 0
  3667                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 671:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
  3668   000B54  5188               	movf	efgtoa@u& (0+255),w,b
  3669   000B56  5D82               	subwf	efgtoa@g& (0+255),w,b
  3670   000B58  6E01               	movwf	labs@a^0,c
  3671   000B5A  5189               	movf	(efgtoa@u+1)& (0+255),w,b
  3672   000B5C  5983               	subwfb	(efgtoa@g+1)& (0+255),w,b
  3673   000B5E  6E02               	movwf	(labs@a+1)^0,c
  3674   000B60  518A               	movf	(efgtoa@u+2)& (0+255),w,b
  3675   000B62  5984               	subwfb	(efgtoa@g+2)& (0+255),w,b
  3676   000B64  6E03               	movwf	(labs@a+2)^0,c
  3677   000B66  518B               	movf	(efgtoa@u+3)& (0+255),w,b
  3678   000B68  5985               	subwfb	(efgtoa@g+3)& (0+255),w,b
  3679   000B6A  6E04               	movwf	(labs@a+3)^0,c
  3680   000B6C  ECAA  F01A         	call	_labs	;wreg free
  3681   000B70  BE04               	btfsc	(?_labs+3)^0,7,c
  3682   000B72  EFC8  F005         	goto	u5320
  3683   000B76  5004               	movf	(?_labs+3)^0,w,c
  3684   000B78  1003               	iorwf	(?_labs+2)^0,w,c
  3685   000B7A  1002               	iorwf	(?_labs+1)^0,w,c
  3686   000B7C  E107               	bnz	u5321
  3687   000B7E  0E02               	movlw	2
  3688   000B80  5C01               	subwf	?_labs^0,w,c
  3689   000B82  B0D8               	btfsc	status,0,c
  3690   000B84  EFC6  F005         	goto	u5321
  3691   000B88  EFC8  F005         	goto	u5320
  3692   000B8C                     u5321:
  3693   000B8C  EFCA  F005         	goto	l4591
  3694   000B90                     u5320:
  3695   000B90  EF82  F005         	goto	l4581
  3696   000B94                     l4591:
  3697                           
  3698                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 668:    while (g.
      +                          f < u.f) {
  3699   000B94  C082  F01A         	movff	efgtoa@g,___flge@ff1
  3700   000B98  C083  F01B         	movff	efgtoa@g+1,___flge@ff1+1
  3701   000B9C  C084  F01C         	movff	efgtoa@g+2,___flge@ff1+2
  3702   000BA0  C085  F01D         	movff	efgtoa@g+3,___flge@ff1+3
  3703   000BA4  C088  F01E         	movff	efgtoa@u,___flge@ff2
  3704   000BA8  C089  F01F         	movff	efgtoa@u+1,___flge@ff2+1
  3705   000BAC  C08A  F020         	movff	efgtoa@u+2,___flge@ff2+2
  3706   000BB0  C08B  F021         	movff	efgtoa@u+3,___flge@ff2+3
  3707   000BB4  EC45  F017         	call	___flge	;wreg free
  3708   000BB8  A0D8               	btfss	status,0,c
  3709   000BBA  EFE1  F005         	goto	u5331
  3710   000BBE  EFE3  F005         	goto	u5330
  3711   000BC2                     u5331:
  3712   000BC2  EF8C  F005         	goto	l4583
  3713   000BC6                     u5330:
  3714   000BC6                     l945:
  3715                           
  3716                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 683:  mode = c;
  3717   000BC6  C05C  F069         	movff	efgtoa@c,efgtoa@mode
  3718                           
  3719                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 685:     nmode = 
      +                          mode;
  3720   000BCA  C069  F06A         	movff	efgtoa@mode,efgtoa@nmode
  3721   000BCE                     
  3722                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 695:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 696:         p = (prec < 0)
      +                           ? 6 : prec;
  3723   000BCE  0100               	movlb	0	; () banked
  3724   000BD0  BFCA               	btfsc	(_prec+1)& (0+255),7,b
  3725   000BD2  EFED  F005         	goto	u5341
  3726   000BD6  EFEF  F005         	goto	u5340
  3727   000BDA                     u5341:
  3728   000BDA  EFF5  F005         	goto	l4597
  3729   000BDE                     u5340:
  3730   000BDE                     
  3731                           ; BSR set to: 0
  3732   000BDE  C0C9  F062         	movff	_prec,efgtoa@p
  3733   000BE2  C0CA  F063         	movff	_prec+1,efgtoa@p+1
  3734   000BE6  EFF9  F005         	goto	l4599
  3735   000BEA                     l4597:
  3736                           
  3737                           ; BSR set to: 0
  3738   000BEA  0E00               	movlw	0
  3739   000BEC  6F63               	movwf	(efgtoa@p+1)& (0+255),b
  3740   000BEE  0E06               	movlw	6
  3741   000BF0  6F62               	movwf	efgtoa@p& (0+255),b
  3742   000BF2                     l4599:
  3743                           
  3744                           ; BSR set to: 0
  3745                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 697:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 711:     m = p;
  3746   000BF2  C062  F06D         	movff	efgtoa@p,efgtoa@m
  3747   000BF6  C063  F06E         	movff	efgtoa@p+1,efgtoa@m+1
  3748   000BFA                     
  3749                           ; BSR set to: 0
  3750                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 715:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 716:         ++m;
  3751   000BFA  4B6D               	infsnz	efgtoa@m& (0+255),f,b
  3752   000BFC  2B6E               	incf	(efgtoa@m+1)& (0+255),f,b
  3753   000BFE                     
  3754                           ; BSR set to: 0
  3755                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 717:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 721:     if (nmode == 'f
      +                          ') {
  3756   000BFE  0E66               	movlw	102
  3757   000C00  196A               	xorwf	efgtoa@nmode& (0+255),w,b
  3758   000C02  A4D8               	btfss	status,2,c
  3759   000C04  EF06  F006         	goto	u5351
  3760   000C08  EF08  F006         	goto	u5350
  3761   000C0C                     u5351:
  3762   000C0C  EF28  F006         	goto	l4613
  3763   000C10                     u5350:
  3764   000C10                     
  3765                           ; BSR set to: 0
  3766                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 722:         if (
      +                          e < 0) {
  3767   000C10  BF70               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3768   000C12  EF0F  F006         	goto	u5360
  3769   000C16  EF0D  F006         	goto	u5361
  3770   000C1A                     u5361:
  3771   000C1A  EF1B  F006         	goto	l4609
  3772   000C1E                     u5360:
  3773   000C1E                     
  3774                           ; BSR set to: 0
  3775                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 723:             
      +                          u.f = 1.0;
  3776   000C1E  0E00               	movlw	0
  3777   000C20  6F88               	movwf	efgtoa@u& (0+255),b
  3778   000C22  0E00               	movlw	0
  3779   000C24  6F89               	movwf	(efgtoa@u+1)& (0+255),b
  3780   000C26  0E80               	movlw	128
  3781   000C28  6F8A               	movwf	(efgtoa@u+2)& (0+255),b
  3782   000C2A  0E3F               	movlw	63
  3783   000C2C  6F8B               	movwf	(efgtoa@u+3)& (0+255),b
  3784                           
  3785                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 724:             
      +                          e = 0;
  3786   000C2E  0E00               	movlw	0
  3787   000C30  6F70               	movwf	(efgtoa@e+1)& (0+255),b
  3788   000C32  0E00               	movlw	0
  3789   000C34  6F6F               	movwf	efgtoa@e& (0+255),b
  3790   000C36                     l4609:
  3791                           
  3792                           ; BSR set to: 0
  3793                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 726:         if (
      +                          !(mode == 'g')) {
  3794   000C36  0E67               	movlw	103
  3795   000C38  1969               	xorwf	efgtoa@mode& (0+255),w,b
  3796   000C3A  B4D8               	btfsc	status,2,c
  3797   000C3C  EF22  F006         	goto	u5371
  3798   000C40  EF24  F006         	goto	u5370
  3799   000C44                     u5371:
  3800   000C44  EF28  F006         	goto	l4613
  3801   000C48                     u5370:
  3802   000C48                     
  3803                           ; BSR set to: 0
  3804                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 727:             
      +                          m += e;
  3805   000C48  516F               	movf	efgtoa@e& (0+255),w,b
  3806   000C4A  276D               	addwf	efgtoa@m& (0+255),f,b
  3807   000C4C  5170               	movf	(efgtoa@e+1)& (0+255),w,b
  3808   000C4E  236E               	addwfc	(efgtoa@m+1)& (0+255),f,b
  3809   000C50                     l4613:
  3810                           
  3811                           ; BSR set to: 0
  3812                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 733:     i = 0;
  3813   000C50  0E00               	movlw	0
  3814   000C52  6F78               	movwf	(efgtoa@i+1)& (0+255),b
  3815   000C54  0E00               	movlw	0
  3816   000C56  6F77               	movwf	efgtoa@i& (0+255),b
  3817   000C58                     
  3818                           ; BSR set to: 0
  3819                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 734:     h = g.f;
  3820   000C58  C082  F079         	movff	efgtoa@g,efgtoa@h
  3821   000C5C  C083  F07A         	movff	efgtoa@g+1,efgtoa@h+1
  3822   000C60  C084  F07B         	movff	efgtoa@g+2,efgtoa@h+2
  3823   000C64  C085  F07C         	movff	efgtoa@g+3,efgtoa@h+3
  3824   000C68                     
  3825                           ; BSR set to: 0
  3826                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 735:     ou = u;
  3827   000C68  C088  F073         	movff	efgtoa@u,efgtoa@ou
  3828   000C6C  C089  F074         	movff	efgtoa@u+1,efgtoa@ou+1
  3829   000C70  C08A  F075         	movff	efgtoa@u+2,efgtoa@ou+2
  3830   000C74  C08B  F076         	movff	efgtoa@u+3,efgtoa@ou+3
  3831                           
  3832                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
  3833   000C78  EFB9  F006         	goto	l4627
  3834   000C7C                     l4619:
  3835                           
  3836                           ; BSR set to: 0
  3837                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 737:         l = 
      +                          floorf(h/u.f);
  3838   000C7C  C079  F02A         	movff	efgtoa@h,___fldiv@b
  3839   000C80  C07A  F02B         	movff	efgtoa@h+1,___fldiv@b+1
  3840   000C84  C07B  F02C         	movff	efgtoa@h+2,___fldiv@b+2
  3841   000C88  C07C  F02D         	movff	efgtoa@h+3,___fldiv@b+3
  3842   000C8C  C088  F02E         	movff	efgtoa@u,___fldiv@a
  3843   000C90  C089  F02F         	movff	efgtoa@u+1,___fldiv@a+1
  3844   000C94  C08A  F030         	movff	efgtoa@u+2,___fldiv@a+2
  3845   000C98  C08B  F031         	movff	efgtoa@u+3,___fldiv@a+3
  3846   000C9C  EC97  F010         	call	___fldiv	;wreg free
  3847   000CA0  C02A  F043         	movff	?___fldiv,floorf@x
  3848   000CA4  C02B  F044         	movff	?___fldiv+1,floorf@x+1
  3849   000CA8  C02C  F045         	movff	?___fldiv+2,floorf@x+2
  3850   000CAC  C02D  F046         	movff	?___fldiv+3,floorf@x+3
  3851   000CB0  EC76  F013         	call	_floorf	;wreg free
  3852   000CB4  C043  F07D         	movff	?_floorf,efgtoa@l
  3853   000CB8  C044  F07E         	movff	?_floorf+1,efgtoa@l+1
  3854   000CBC  C045  F07F         	movff	?_floorf+2,efgtoa@l+2
  3855   000CC0  C046  F080         	movff	?_floorf+3,efgtoa@l+3
  3856                           
  3857                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 738:         d = 
      +                          (int)l;
  3858   000CC4  C07D  F001         	movff	efgtoa@l,___fltol@f1
  3859   000CC8  C07E  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3860   000CCC  C07F  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3861   000CD0  C080  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3862   000CD4  ECC2  F016         	call	___fltol	;wreg free
  3863   000CD8  C001  F06B         	movff	?___fltol,efgtoa@d
  3864   000CDC  C002  F06C         	movff	?___fltol+1,efgtoa@d+1
  3865   000CE0                     
  3866                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 739:         h -=
      +                           l*u.f;
  3867   000CE0  C079  F02A         	movff	efgtoa@h,___flsub@b
  3868   000CE4  C07A  F02B         	movff	efgtoa@h+1,___flsub@b+1
  3869   000CE8  C07B  F02C         	movff	efgtoa@h+2,___flsub@b+2
  3870   000CEC  C07C  F02D         	movff	efgtoa@h+3,___flsub@b+3
  3871   000CF0  C07D  F005         	movff	efgtoa@l,___flmul@a
  3872   000CF4  C07E  F006         	movff	efgtoa@l+1,___flmul@a+1
  3873   000CF8  C07F  F007         	movff	efgtoa@l+2,___flmul@a+2
  3874   000CFC  C080  F008         	movff	efgtoa@l+3,___flmul@a+3
  3875   000D00  C088  F001         	movff	efgtoa@u,___flmul@b
  3876   000D04  C089  F002         	movff	efgtoa@u+1,___flmul@b+1
  3877   000D08  C08A  F003         	movff	efgtoa@u+2,___flmul@b+2
  3878   000D0C  C08B  F004         	movff	efgtoa@u+3,___flmul@b+3
  3879   000D10  EC82  F00E         	call	___flmul	;wreg free
  3880   000D14  C001  F02E         	movff	?___flmul,___flsub@a
  3881   000D18  C002  F02F         	movff	?___flmul+1,___flsub@a+1
  3882   000D1C  C003  F030         	movff	?___flmul+2,___flsub@a+2
  3883   000D20  C004  F031         	movff	?___flmul+3,___flsub@a+3
  3884   000D24  EC28  F01B         	call	___flsub	;wreg free
  3885   000D28  C02A  F079         	movff	?___flsub,efgtoa@h
  3886   000D2C  C02B  F07A         	movff	?___flsub+1,efgtoa@h+1
  3887   000D30  C02C  F07B         	movff	?___flsub+2,efgtoa@h+2
  3888   000D34  C02D  F07C         	movff	?___flsub+3,efgtoa@h+3
  3889   000D38                     
  3890                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 740:         u.f 
      +                          = u.f/10.0;
  3891   000D38  C088  F02A         	movff	efgtoa@u,___fldiv@b
  3892   000D3C  C089  F02B         	movff	efgtoa@u+1,___fldiv@b+1
  3893   000D40  C08A  F02C         	movff	efgtoa@u+2,___fldiv@b+2
  3894   000D44  C08B  F02D         	movff	efgtoa@u+3,___fldiv@b+3
  3895   000D48  0E00               	movlw	0
  3896   000D4A  6E2E               	movwf	___fldiv@a^0,c
  3897   000D4C  0E00               	movlw	0
  3898   000D4E  6E2F               	movwf	(___fldiv@a+1)^0,c
  3899   000D50  0E20               	movlw	32
  3900   000D52  6E30               	movwf	(___fldiv@a+2)^0,c
  3901   000D54  0E41               	movlw	65
  3902   000D56  6E31               	movwf	(___fldiv@a+3)^0,c
  3903   000D58  EC97  F010         	call	___fldiv	;wreg free
  3904   000D5C  C02A  F088         	movff	?___fldiv,efgtoa@u
  3905   000D60  C02B  F089         	movff	?___fldiv+1,efgtoa@u+1
  3906   000D64  C02C  F08A         	movff	?___fldiv+2,efgtoa@u+2
  3907   000D68  C02D  F08B         	movff	?___fldiv+3,efgtoa@u+3
  3908   000D6C                     
  3909                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 741:         ++i;
  3910   000D6C  0100               	movlb	0	; () banked
  3911   000D6E  4B77               	infsnz	efgtoa@i& (0+255),f,b
  3912   000D70  2B78               	incf	(efgtoa@i+1)& (0+255),f,b
  3913   000D72                     l4627:
  3914                           
  3915                           ; BSR set to: 0
  3916                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
  3917   000D72  516D               	movf	efgtoa@m& (0+255),w,b
  3918   000D74  5D77               	subwf	efgtoa@i& (0+255),w,b
  3919   000D76  5178               	movf	(efgtoa@i+1)& (0+255),w,b
  3920   000D78  0A80               	xorlw	128
  3921   000D7A  6E5D               	movwf	??_efgtoa^0,c
  3922   000D7C  516E               	movf	(efgtoa@m+1)& (0+255),w,b
  3923   000D7E  0A80               	xorlw	128
  3924   000D80  585D               	subwfb	??_efgtoa^0,w,c
  3925   000D82  A0D8               	btfss	status,0,c
  3926   000D84  EFC6  F006         	goto	u5381
  3927   000D88  EFC8  F006         	goto	u5380
  3928   000D8C                     u5381:
  3929   000D8C  EF3E  F006         	goto	l4619
  3930   000D90                     u5380:
  3931   000D90                     
  3932                           ; BSR set to: 0
  3933                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 745:     l = u.f*
      +                          5.0;
  3934   000D90  C088  F001         	movff	efgtoa@u,___flmul@b
  3935   000D94  C089  F002         	movff	efgtoa@u+1,___flmul@b+1
  3936   000D98  C08A  F003         	movff	efgtoa@u+2,___flmul@b+2
  3937   000D9C  C08B  F004         	movff	efgtoa@u+3,___flmul@b+3
  3938   000DA0  0E00               	movlw	0
  3939   000DA2  6E05               	movwf	___flmul@a^0,c
  3940   000DA4  0E00               	movlw	0
  3941   000DA6  6E06               	movwf	(___flmul@a+1)^0,c
  3942   000DA8  0EA0               	movlw	160
  3943   000DAA  6E07               	movwf	(___flmul@a+2)^0,c
  3944   000DAC  0E40               	movlw	64
  3945   000DAE  6E08               	movwf	(___flmul@a+3)^0,c
  3946   000DB0  EC82  F00E         	call	___flmul	;wreg free
  3947   000DB4  C001  F07D         	movff	?___flmul,efgtoa@l
  3948   000DB8  C002  F07E         	movff	?___flmul+1,efgtoa@l+1
  3949   000DBC  C003  F07F         	movff	?___flmul+2,efgtoa@l+2
  3950   000DC0  C004  F080         	movff	?___flmul+3,efgtoa@l+3
  3951   000DC4                     
  3952                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 746:     if (h < 
      +                          l) {
  3953   000DC4  C079  F01A         	movff	efgtoa@h,___flge@ff1
  3954   000DC8  C07A  F01B         	movff	efgtoa@h+1,___flge@ff1+1
  3955   000DCC  C07B  F01C         	movff	efgtoa@h+2,___flge@ff1+2
  3956   000DD0  C07C  F01D         	movff	efgtoa@h+3,___flge@ff1+3
  3957   000DD4  C07D  F01E         	movff	efgtoa@l,___flge@ff2
  3958   000DD8  C07E  F01F         	movff	efgtoa@l+1,___flge@ff2+1
  3959   000DDC  C07F  F020         	movff	efgtoa@l+2,___flge@ff2+2
  3960   000DE0  C080  F021         	movff	efgtoa@l+3,___flge@ff2+3
  3961   000DE4  EC45  F017         	call	___flge	;wreg free
  3962   000DE8  B0D8               	btfsc	status,0,c
  3963   000DEA  EFF9  F006         	goto	u5391
  3964   000DEE  EFFB  F006         	goto	u5390
  3965   000DF2                     u5391:
  3966   000DF2  EF06  F007         	goto	l4635
  3967   000DF6                     u5390:
  3968   000DF6                     
  3969                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 747:         l = 
      +                          0.0;
  3970   000DF6  0E00               	movlw	0
  3971   000DF8  0100               	movlb	0	; () banked
  3972   000DFA  6F7D               	movwf	efgtoa@l& (0+255),b
  3973   000DFC  0E00               	movlw	0
  3974   000DFE  6F7E               	movwf	(efgtoa@l+1)& (0+255),b
  3975   000E00  0E00               	movlw	0
  3976   000E02  6F7F               	movwf	(efgtoa@l+2)& (0+255),b
  3977   000E04  0E00               	movlw	0
  3978   000E06  6F80               	movwf	(efgtoa@l+3)& (0+255),b
  3979                           
  3980                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 748:     } else {
  3981   000E08  EF2F  F007         	goto	l4641
  3982   000E0C                     l4635:
  3983                           
  3984                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 750:         if (
      +                          (h == l) && !(d % 2)) {
  3985   000E0C  C079  F001         	movff	efgtoa@h,___fleq@ff1
  3986   000E10  C07A  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  3987   000E14  C07B  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  3988   000E18  C07C  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  3989   000E1C  C07D  F005         	movff	efgtoa@l,___fleq@ff2
  3990   000E20  C07E  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  3991   000E24  C07F  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  3992   000E28  C080  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  3993   000E2C  EC80  F019         	call	___fleq	;wreg free
  3994   000E30  A0D8               	btfss	status,0,c
  3995   000E32  EF1D  F007         	goto	u5401
  3996   000E36  EF1F  F007         	goto	u5400
  3997   000E3A                     u5401:
  3998   000E3A  EF2F  F007         	goto	l4641
  3999   000E3E                     u5400:
  4000   000E3E  0100               	movlb	0	; () banked
  4001   000E40  B16B               	btfsc	efgtoa@d& (0+255),0,b
  4002   000E42  EF25  F007         	goto	u5411
  4003   000E46  EF27  F007         	goto	u5410
  4004   000E4A                     u5411:
  4005   000E4A  EF2F  F007         	goto	l4641
  4006   000E4E                     u5410:
  4007   000E4E                     
  4008                           ; BSR set to: 0
  4009                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 751:             
      +                          l = 0.0;
  4010   000E4E  0E00               	movlw	0
  4011   000E50  6F7D               	movwf	efgtoa@l& (0+255),b
  4012   000E52  0E00               	movlw	0
  4013   000E54  6F7E               	movwf	(efgtoa@l+1)& (0+255),b
  4014   000E56  0E00               	movlw	0
  4015   000E58  6F7F               	movwf	(efgtoa@l+2)& (0+255),b
  4016   000E5A  0E00               	movlw	0
  4017   000E5C  6F80               	movwf	(efgtoa@l+3)& (0+255),b
  4018   000E5E                     l4641:
  4019                           
  4020                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 756:     h = g.f 
      +                          + l;
  4021   000E5E  C082  F01A         	movff	efgtoa@g,___fladd@b
  4022   000E62  C083  F01B         	movff	efgtoa@g+1,___fladd@b+1
  4023   000E66  C084  F01C         	movff	efgtoa@g+2,___fladd@b+2
  4024   000E6A  C085  F01D         	movff	efgtoa@g+3,___fladd@b+3
  4025   000E6E  C07D  F01E         	movff	efgtoa@l,___fladd@a
  4026   000E72  C07E  F01F         	movff	efgtoa@l+1,___fladd@a+1
  4027   000E76  C07F  F020         	movff	efgtoa@l+2,___fladd@a+2
  4028   000E7A  C080  F021         	movff	efgtoa@l+3,___fladd@a+3
  4029   000E7E  EC22  F00C         	call	___fladd	;wreg free
  4030   000E82  C01A  F079         	movff	?___fladd,efgtoa@h
  4031   000E86  C01B  F07A         	movff	?___fladd+1,efgtoa@h+1
  4032   000E8A  C01C  F07B         	movff	?___fladd+2,efgtoa@h+2
  4033   000E8E  C01D  F07C         	movff	?___fladd+3,efgtoa@h+3
  4034   000E92                     
  4035                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 758:  if (h >= (o
      +                          u.f*10.0)) {
  4036   000E92  C079  F01A         	movff	efgtoa@h,___flge@ff1
  4037   000E96  C07A  F01B         	movff	efgtoa@h+1,___flge@ff1+1
  4038   000E9A  C07B  F01C         	movff	efgtoa@h+2,___flge@ff1+2
  4039   000E9E  C07C  F01D         	movff	efgtoa@h+3,___flge@ff1+3
  4040   000EA2  0E00               	movlw	0
  4041   000EA4  6E05               	movwf	___flmul@a^0,c
  4042   000EA6  0E00               	movlw	0
  4043   000EA8  6E06               	movwf	(___flmul@a+1)^0,c
  4044   000EAA  0E20               	movlw	32
  4045   000EAC  6E07               	movwf	(___flmul@a+2)^0,c
  4046   000EAE  0E41               	movlw	65
  4047   000EB0  6E08               	movwf	(___flmul@a+3)^0,c
  4048   000EB2  C073  F001         	movff	efgtoa@ou,___flmul@b
  4049   000EB6  C074  F002         	movff	efgtoa@ou+1,___flmul@b+1
  4050   000EBA  C075  F003         	movff	efgtoa@ou+2,___flmul@b+2
  4051   000EBE  C076  F004         	movff	efgtoa@ou+3,___flmul@b+3
  4052   000EC2  EC82  F00E         	call	___flmul	;wreg free
  4053   000EC6  C001  F01E         	movff	?___flmul,___flge@ff2
  4054   000ECA  C002  F01F         	movff	?___flmul+1,___flge@ff2+1
  4055   000ECE  C003  F020         	movff	?___flmul+2,___flge@ff2+2
  4056   000ED2  C004  F021         	movff	?___flmul+3,___flge@ff2+3
  4057   000ED6  EC45  F017         	call	___flge	;wreg free
  4058   000EDA  A0D8               	btfss	status,0,c
  4059   000EDC  EF72  F007         	goto	u5421
  4060   000EE0  EF74  F007         	goto	u5420
  4061   000EE4                     u5421:
  4062   000EE4  EF9D  F007         	goto	l4653
  4063   000EE8                     u5420:
  4064   000EE8                     
  4065                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 759:   e++;
  4066   000EE8  0100               	movlb	0	; () banked
  4067   000EEA  4B6F               	infsnz	efgtoa@e& (0+255),f,b
  4068   000EEC  2B70               	incf	(efgtoa@e+1)& (0+255),f,b
  4069   000EEE                     
  4070                           ; BSR set to: 0
  4071                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 760:   ou.f *= 10
      +                          .0;
  4072   000EEE  C073  F001         	movff	efgtoa@ou,___flmul@b
  4073   000EF2  C074  F002         	movff	efgtoa@ou+1,___flmul@b+1
  4074   000EF6  C075  F003         	movff	efgtoa@ou+2,___flmul@b+2
  4075   000EFA  C076  F004         	movff	efgtoa@ou+3,___flmul@b+3
  4076   000EFE  0E00               	movlw	0
  4077   000F00  6E05               	movwf	___flmul@a^0,c
  4078   000F02  0E00               	movlw	0
  4079   000F04  6E06               	movwf	(___flmul@a+1)^0,c
  4080   000F06  0E20               	movlw	32
  4081   000F08  6E07               	movwf	(___flmul@a+2)^0,c
  4082   000F0A  0E41               	movlw	65
  4083   000F0C  6E08               	movwf	(___flmul@a+3)^0,c
  4084   000F0E  EC82  F00E         	call	___flmul	;wreg free
  4085   000F12  C001  F073         	movff	?___flmul,efgtoa@ou
  4086   000F16  C002  F074         	movff	?___flmul+1,efgtoa@ou+1
  4087   000F1A  C003  F075         	movff	?___flmul+2,efgtoa@ou+2
  4088   000F1E  C004  F076         	movff	?___flmul+3,efgtoa@ou+3
  4089   000F22                     
  4090                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 762:   if (nmode 
      +                          == 'f') {
  4091   000F22  0E66               	movlw	102
  4092   000F24  0100               	movlb	0	; () banked
  4093   000F26  196A               	xorwf	efgtoa@nmode& (0+255),w,b
  4094   000F28  A4D8               	btfss	status,2,c
  4095   000F2A  EF99  F007         	goto	u5431
  4096   000F2E  EF9B  F007         	goto	u5430
  4097   000F32                     u5431:
  4098   000F32  EF9D  F007         	goto	l4653
  4099   000F36                     u5430:
  4100   000F36                     
  4101                           ; BSR set to: 0
  4102                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 764:    m++;
  4103   000F36  4B6D               	infsnz	efgtoa@m& (0+255),f,b
  4104   000F38  2B6E               	incf	(efgtoa@m+1)& (0+255),f,b
  4105   000F3A                     l4653:
  4106                           
  4107                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 770:     u = ou;
  4108   000F3A  C073  F088         	movff	efgtoa@ou,efgtoa@u
  4109   000F3E  C074  F089         	movff	efgtoa@ou+1,efgtoa@u+1
  4110   000F42  C075  F08A         	movff	efgtoa@ou+2,efgtoa@u+2
  4111   000F46  C076  F08B         	movff	efgtoa@ou+3,efgtoa@u+3
  4112   000F4A                     
  4113                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 774:  ne = e;
  4114   000F4A  C06F  F060         	movff	efgtoa@e,efgtoa@ne
  4115   000F4E  C070  F061         	movff	efgtoa@e+1,efgtoa@ne+1
  4116   000F52                     
  4117                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 776:     pp = 0;
  4118   000F52  0E00               	movlw	0
  4119   000F54  0100               	movlb	0	; () banked
  4120   000F56  6F68               	movwf	efgtoa@pp& (0+255),b
  4121   000F58                     
  4122                           ; BSR set to: 0
  4123                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 777:     t = 0;
  4124   000F58  0E00               	movlw	0
  4125   000F5A  6F65               	movwf	(efgtoa@t+1)& (0+255),b
  4126   000F5C  0E00               	movlw	0
  4127   000F5E  6F64               	movwf	efgtoa@t& (0+255),b
  4128   000F60                     
  4129                           ; BSR set to: 0
  4130                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 778:     i = 0;
  4131   000F60  0E00               	movlw	0
  4132   000F62  6F78               	movwf	(efgtoa@i+1)& (0+255),b
  4133   000F64  0E00               	movlw	0
  4134   000F66  6F77               	movwf	efgtoa@i& (0+255),b
  4135                           
  4136                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
  4137   000F68  EF9B  F008         	goto	l4703
  4138   000F6C                     l4663:
  4139                           
  4140                           ; BSR set to: 0
  4141                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 780:         l = 
      +                          floorf(h/u.f);
  4142   000F6C  C079  F02A         	movff	efgtoa@h,___fldiv@b
  4143   000F70  C07A  F02B         	movff	efgtoa@h+1,___fldiv@b+1
  4144   000F74  C07B  F02C         	movff	efgtoa@h+2,___fldiv@b+2
  4145   000F78  C07C  F02D         	movff	efgtoa@h+3,___fldiv@b+3
  4146   000F7C  C088  F02E         	movff	efgtoa@u,___fldiv@a
  4147   000F80  C089  F02F         	movff	efgtoa@u+1,___fldiv@a+1
  4148   000F84  C08A  F030         	movff	efgtoa@u+2,___fldiv@a+2
  4149   000F88  C08B  F031         	movff	efgtoa@u+3,___fldiv@a+3
  4150   000F8C  EC97  F010         	call	___fldiv	;wreg free
  4151   000F90  C02A  F043         	movff	?___fldiv,floorf@x
  4152   000F94  C02B  F044         	movff	?___fldiv+1,floorf@x+1
  4153   000F98  C02C  F045         	movff	?___fldiv+2,floorf@x+2
  4154   000F9C  C02D  F046         	movff	?___fldiv+3,floorf@x+3
  4155   000FA0  EC76  F013         	call	_floorf	;wreg free
  4156   000FA4  C043  F07D         	movff	?_floorf,efgtoa@l
  4157   000FA8  C044  F07E         	movff	?_floorf+1,efgtoa@l+1
  4158   000FAC  C045  F07F         	movff	?_floorf+2,efgtoa@l+2
  4159   000FB0  C046  F080         	movff	?_floorf+3,efgtoa@l+3
  4160                           
  4161                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 781:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
  4162   000FB4  C07D  F001         	movff	efgtoa@l,___fltol@f1
  4163   000FB8  C07E  F002         	movff	efgtoa@l+1,___fltol@f1+1
  4164   000FBC  C07F  F003         	movff	efgtoa@l+2,___fltol@f1+2
  4165   000FC0  C080  F004         	movff	efgtoa@l+3,___fltol@f1+3
  4166   000FC4  ECC2  F016         	call	___fltol	;wreg free
  4167   000FC8  BE02               	btfsc	(?___fltol+1)^0,7,c
  4168   000FCA  EFF2  F007         	goto	u5440
  4169   000FCE  5002               	movf	(?___fltol+1)^0,w,c
  4170   000FD0  E107               	bnz	u5441
  4171   000FD2  0E0A               	movlw	10
  4172   000FD4  5C01               	subwf	?___fltol^0,w,c
  4173   000FD6  B0D8               	btfsc	status,0,c
  4174   000FD8  EFF0  F007         	goto	u5441
  4175   000FDC  EFF2  F007         	goto	u5440
  4176   000FE0                     u5441:
  4177   000FE0  EF02  F008         	goto	l4667
  4178   000FE4                     u5440:
  4179   000FE4  C07D  F001         	movff	efgtoa@l,___fltol@f1
  4180   000FE8  C07E  F002         	movff	efgtoa@l+1,___fltol@f1+1
  4181   000FEC  C07F  F003         	movff	efgtoa@l+2,___fltol@f1+2
  4182   000FF0  C080  F004         	movff	efgtoa@l+3,___fltol@f1+3
  4183   000FF4  ECC2  F016         	call	___fltol	;wreg free
  4184   000FF8  C001  F06B         	movff	?___fltol,efgtoa@d
  4185   000FFC  C002  F06C         	movff	?___fltol+1,efgtoa@d+1
  4186   001000  EF07  F008         	goto	l975
  4187   001004                     l4667:
  4188   001004  0E00               	movlw	0
  4189   001006  0100               	movlb	0	; () banked
  4190   001008  6F6C               	movwf	(efgtoa@d+1)& (0+255),b
  4191   00100A  0E09               	movlw	9
  4192   00100C  6F6B               	movwf	efgtoa@d& (0+255),b
  4193   00100E                     l975:
  4194                           
  4195                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 792:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 793:             if (!pp &
      +                          & (ne < 0)) {
  4196   00100E  0100               	movlb	0	; () banked
  4197   001010  5168               	movf	efgtoa@pp& (0+255),w,b
  4198   001012  A4D8               	btfss	status,2,c
  4199   001014  EF0E  F008         	goto	u5451
  4200   001018  EF10  F008         	goto	u5450
  4201   00101C                     u5451:
  4202   00101C  EF38  F008         	goto	l4687
  4203   001020                     u5450:
  4204   001020                     
  4205                           ; BSR set to: 0
  4206   001020  BF61               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  4207   001022  EF17  F008         	goto	u5460
  4208   001026  EF15  F008         	goto	u5461
  4209   00102A                     u5461:
  4210   00102A  EF38  F008         	goto	l4687
  4211   00102E                     u5460:
  4212   00102E                     
  4213                           ; BSR set to: 0
  4214                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 794:             
      +                              dbuf[n++] = '.';
  4215   00102E  0E00               	movlw	low _dbuf
  4216   001030  2586               	addwf	efgtoa@n& (0+255),w,b
  4217   001032  6ED9               	movwf	fsr2l,c
  4218   001034  0E01               	movlw	high _dbuf
  4219   001036  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4220   001038  6EDA               	movwf	fsr2h,c
  4221   00103A  0E2E               	movlw	46
  4222   00103C  6EDF               	movwf	indf2,c
  4223   00103E                     
  4224                           ; BSR set to: 0
  4225   00103E  4B86               	infsnz	efgtoa@n& (0+255),f,b
  4226   001040  2B87               	incf	(efgtoa@n+1)& (0+255),f,b
  4227   001042                     
  4228                           ; BSR set to: 0
  4229                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 795:             
      +                              --w;
  4230   001042  0771               	decf	efgtoa@w& (0+255),f,b
  4231   001044  A0D8               	btfss	status,0,c
  4232   001046  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  4233   001048                     
  4234                           ; BSR set to: 0
  4235                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 796:             
      +                              pp = 1;
  4236   001048  0E01               	movlw	1
  4237   00104A  6F68               	movwf	efgtoa@pp& (0+255),b
  4238   00104C  EF38  F008         	goto	l4687
  4239   001050                     l4679:
  4240                           
  4241                           ; BSR set to: 0
  4242                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 799:             
      +                              dbuf[n++] = '0';
  4243   001050  0E00               	movlw	low _dbuf
  4244   001052  2586               	addwf	efgtoa@n& (0+255),w,b
  4245   001054  6ED9               	movwf	fsr2l,c
  4246   001056  0E01               	movlw	high _dbuf
  4247   001058  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4248   00105A  6EDA               	movwf	fsr2h,c
  4249   00105C  0E30               	movlw	48
  4250   00105E  6EDF               	movwf	indf2,c
  4251   001060                     
  4252                           ; BSR set to: 0
  4253   001060  4B86               	infsnz	efgtoa@n& (0+255),f,b
  4254   001062  2B87               	incf	(efgtoa@n+1)& (0+255),f,b
  4255   001064                     
  4256                           ; BSR set to: 0
  4257                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 800:             
      +                              --w;
  4258   001064  0771               	decf	efgtoa@w& (0+255),f,b
  4259   001066  A0D8               	btfss	status,0,c
  4260   001068  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  4261   00106A                     
  4262                           ; BSR set to: 0
  4263                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 801:             
      +                              --t;
  4264   00106A  0764               	decf	efgtoa@t& (0+255),f,b
  4265   00106C  A0D8               	btfss	status,0,c
  4266   00106E  0765               	decf	(efgtoa@t+1)& (0+255),f,b
  4267   001070                     l4687:
  4268                           
  4269                           ; BSR set to: 0
  4270                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 798:             
      +                          while (t) {
  4271   001070  5164               	movf	efgtoa@t& (0+255),w,b
  4272   001072  1165               	iorwf	(efgtoa@t+1)& (0+255),w,b
  4273   001074  A4D8               	btfss	status,2,c
  4274   001076  EF3F  F008         	goto	u5471
  4275   00107A  EF41  F008         	goto	u5470
  4276   00107E                     u5471:
  4277   00107E  EF28  F008         	goto	l4679
  4278   001082                     u5470:
  4279   001082                     
  4280                           ; BSR set to: 0
  4281                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 803:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  4282   001082  0E00               	movlw	low _dbuf
  4283   001084  2586               	addwf	efgtoa@n& (0+255),w,b
  4284   001086  6ED9               	movwf	fsr2l,c
  4285   001088  0E01               	movlw	high _dbuf
  4286   00108A  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4287   00108C  6EDA               	movwf	fsr2h,c
  4288   00108E  516B               	movf	efgtoa@d& (0+255),w,b
  4289   001090  0F30               	addlw	48
  4290   001092  6EDF               	movwf	indf2,c
  4291   001094                     
  4292                           ; BSR set to: 0
  4293   001094  4B86               	infsnz	efgtoa@n& (0+255),f,b
  4294   001096  2B87               	incf	(efgtoa@n+1)& (0+255),f,b
  4295   001098                     
  4296                           ; BSR set to: 0
  4297                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 804:             
      +                          --w;
  4298   001098  0771               	decf	efgtoa@w& (0+255),f,b
  4299   00109A  A0D8               	btfss	status,0,c
  4300   00109C  0772               	decf	(efgtoa@w+1)& (0+255),f,b
  4301   00109E                     
  4302                           ; BSR set to: 0
  4303                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 805:         };C:
      +                          \Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 806:         h -= l*
      +                          u.f;
  4304   00109E  C079  F02A         	movff	efgtoa@h,___flsub@b
  4305   0010A2  C07A  F02B         	movff	efgtoa@h+1,___flsub@b+1
  4306   0010A6  C07B  F02C         	movff	efgtoa@h+2,___flsub@b+2
  4307   0010AA  C07C  F02D         	movff	efgtoa@h+3,___flsub@b+3
  4308   0010AE  C07D  F005         	movff	efgtoa@l,___flmul@a
  4309   0010B2  C07E  F006         	movff	efgtoa@l+1,___flmul@a+1
  4310   0010B6  C07F  F007         	movff	efgtoa@l+2,___flmul@a+2
  4311   0010BA  C080  F008         	movff	efgtoa@l+3,___flmul@a+3
  4312   0010BE  C088  F001         	movff	efgtoa@u,___flmul@b
  4313   0010C2  C089  F002         	movff	efgtoa@u+1,___flmul@b+1
  4314   0010C6  C08A  F003         	movff	efgtoa@u+2,___flmul@b+2
  4315   0010CA  C08B  F004         	movff	efgtoa@u+3,___flmul@b+3
  4316   0010CE  EC82  F00E         	call	___flmul	;wreg free
  4317   0010D2  C001  F02E         	movff	?___flmul,___flsub@a
  4318   0010D6  C002  F02F         	movff	?___flmul+1,___flsub@a+1
  4319   0010DA  C003  F030         	movff	?___flmul+2,___flsub@a+2
  4320   0010DE  C004  F031         	movff	?___flmul+3,___flsub@a+3
  4321   0010E2  EC28  F01B         	call	___flsub	;wreg free
  4322   0010E6  C02A  F079         	movff	?___flsub,efgtoa@h
  4323   0010EA  C02B  F07A         	movff	?___flsub+1,efgtoa@h+1
  4324   0010EE  C02C  F07B         	movff	?___flsub+2,efgtoa@h+2
  4325   0010F2  C02D  F07C         	movff	?___flsub+3,efgtoa@h+3
  4326   0010F6                     
  4327                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 807:         u.f 
      +                          = u.f/10.0;
  4328   0010F6  C088  F02A         	movff	efgtoa@u,___fldiv@b
  4329   0010FA  C089  F02B         	movff	efgtoa@u+1,___fldiv@b+1
  4330   0010FE  C08A  F02C         	movff	efgtoa@u+2,___fldiv@b+2
  4331   001102  C08B  F02D         	movff	efgtoa@u+3,___fldiv@b+3
  4332   001106  0E00               	movlw	0
  4333   001108  6E2E               	movwf	___fldiv@a^0,c
  4334   00110A  0E00               	movlw	0
  4335   00110C  6E2F               	movwf	(___fldiv@a+1)^0,c
  4336   00110E  0E20               	movlw	32
  4337   001110  6E30               	movwf	(___fldiv@a+2)^0,c
  4338   001112  0E41               	movlw	65
  4339   001114  6E31               	movwf	(___fldiv@a+3)^0,c
  4340   001116  EC97  F010         	call	___fldiv	;wreg free
  4341   00111A  C02A  F088         	movff	?___fldiv,efgtoa@u
  4342   00111E  C02B  F089         	movff	?___fldiv+1,efgtoa@u+1
  4343   001122  C02C  F08A         	movff	?___fldiv+2,efgtoa@u+2
  4344   001126  C02D  F08B         	movff	?___fldiv+3,efgtoa@u+3
  4345   00112A                     
  4346                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 808:         --ne
      +                          ;
  4347   00112A  0100               	movlb	0	; () banked
  4348   00112C  0760               	decf	efgtoa@ne& (0+255),f,b
  4349   00112E  A0D8               	btfss	status,0,c
  4350   001130  0761               	decf	(efgtoa@ne+1)& (0+255),f,b
  4351   001132                     
  4352                           ; BSR set to: 0
  4353                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 809:         ++i;
  4354   001132  4B77               	infsnz	efgtoa@i& (0+255),f,b
  4355   001134  2B78               	incf	(efgtoa@i+1)& (0+255),f,b
  4356   001136                     l4703:
  4357                           
  4358                           ; BSR set to: 0
  4359                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
  4360   001136  516D               	movf	efgtoa@m& (0+255),w,b
  4361   001138  5D77               	subwf	efgtoa@i& (0+255),w,b
  4362   00113A  5178               	movf	(efgtoa@i+1)& (0+255),w,b
  4363   00113C  0A80               	xorlw	128
  4364   00113E  6E5D               	movwf	??_efgtoa^0,c
  4365   001140  516E               	movf	(efgtoa@m+1)& (0+255),w,b
  4366   001142  0A80               	xorlw	128
  4367   001144  585D               	subwfb	??_efgtoa^0,w,c
  4368   001146  B0D8               	btfsc	status,0,c
  4369   001148  EFA8  F008         	goto	u5481
  4370   00114C  EFAA  F008         	goto	u5480
  4371   001150                     u5481:
  4372   001150  EFB8  F008         	goto	l4707
  4373   001154                     u5480:
  4374   001154                     
  4375                           ; BSR set to: 0
  4376   001154  BF87               	btfsc	(efgtoa@n+1)& (0+255),7,b
  4377   001156  EFB6  F008         	goto	u5491
  4378   00115A  5187               	movf	(efgtoa@n+1)& (0+255),w,b
  4379   00115C  E109               	bnz	u5490
  4380   00115E  0E4B               	movlw	75
  4381   001160  5D86               	subwf	efgtoa@n& (0+255),w,b
  4382   001162  A0D8               	btfss	status,0,c
  4383   001164  EFB6  F008         	goto	u5491
  4384   001168  EFB8  F008         	goto	u5490
  4385   00116C                     u5491:
  4386   00116C  EFB6  F007         	goto	l4663
  4387   001170                     u5490:
  4388   001170                     l4707:
  4389                           
  4390                           ; BSR set to: 0
  4391                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 816:  i = sizeof(
      +                          dbuf) - 1;
  4392   001170  0E00               	movlw	0
  4393   001172  6F78               	movwf	(efgtoa@i+1)& (0+255),b
  4394   001174  0E4F               	movlw	79
  4395   001176  6F77               	movwf	efgtoa@i& (0+255),b
  4396   001178                     
  4397                           ; BSR set to: 0
  4398                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 817:     dbuf[i] 
      +                          = '\0';
  4399   001178  0E00               	movlw	low _dbuf
  4400   00117A  2577               	addwf	efgtoa@i& (0+255),w,b
  4401   00117C  6ED9               	movwf	fsr2l,c
  4402   00117E  0E01               	movlw	high _dbuf
  4403   001180  2178               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4404   001182  6EDA               	movwf	fsr2h,c
  4405   001184  6ADF               	clrf	indf2,c
  4406   001186                     
  4407                           ; BSR set to: 0
  4408                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 848:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
  4409   001186  0E00               	movlw	low _dbuf
  4410   001188  6E5D               	movwf	??_efgtoa^0,c
  4411   00118A  0E01               	movlw	high _dbuf
  4412   00118C  6E5E               	movwf	(??_efgtoa+1)^0,c
  4413   00118E  5186               	movf	efgtoa@n& (0+255),w,b
  4414   001190  5E5D               	subwf	??_efgtoa^0,f,c
  4415   001192  5187               	movf	(efgtoa@n+1)& (0+255),w,b
  4416   001194  5A5E               	subwfb	(??_efgtoa+1)^0,f,c
  4417   001196  5177               	movf	efgtoa@i& (0+255),w,b
  4418   001198  245D               	addwf	??_efgtoa^0,w,c
  4419   00119A  6E01               	movwf	memcpy@d1^0,c
  4420   00119C  5178               	movf	(efgtoa@i+1)& (0+255),w,b
  4421   00119E  205E               	addwfc	(??_efgtoa+1)^0,w,c
  4422   0011A0  6E02               	movwf	(memcpy@d1+1)^0,c
  4423   0011A2  0E00               	movlw	low _dbuf
  4424   0011A4  6E03               	movwf	memcpy@s1^0,c
  4425   0011A6  0E01               	movlw	high _dbuf
  4426   0011A8  6E04               	movwf	(memcpy@s1+1)^0,c
  4427   0011AA  C086  F005         	movff	efgtoa@n,memcpy@n
  4428   0011AE  C087  F006         	movff	efgtoa@n+1,memcpy@n+1
  4429   0011B2  EC00  F01B         	call	_memcpy	;wreg free
  4430   0011B6                     
  4431                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 849:  n = i-n;
  4432   0011B6  0100               	movlb	0	; () banked
  4433   0011B8  5186               	movf	efgtoa@n& (0+255),w,b
  4434   0011BA  5D77               	subwf	efgtoa@i& (0+255),w,b
  4435   0011BC  6F86               	movwf	efgtoa@n& (0+255),b
  4436   0011BE  5187               	movf	(efgtoa@n+1)& (0+255),w,b
  4437   0011C0  5978               	subwfb	(efgtoa@i+1)& (0+255),w,b
  4438   0011C2  6F87               	movwf	(efgtoa@n+1)& (0+255),b
  4439   0011C4                     
  4440                           ; BSR set to: 0
  4441                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 850:  i = sign ==
      +                           0 ? 0 : 1;
  4442   0011C4  5181               	movf	efgtoa@sign& (0+255),w,b
  4443   0011C6  A4D8               	btfss	status,2,c
  4444   0011C8  EFE8  F008         	goto	u5501
  4445   0011CC  EFEB  F008         	goto	u5500
  4446   0011D0                     u5501:
  4447   0011D0  0E01               	movlw	1
  4448   0011D2  EFEC  F008         	goto	u5510
  4449   0011D6                     u5500:
  4450   0011D6  0E00               	movlw	0
  4451   0011D8                     u5510:
  4452   0011D8  6F77               	movwf	efgtoa@i& (0+255),b
  4453   0011DA  6B78               	clrf	(efgtoa@i+1)& (0+255),b
  4454   0011DC                     
  4455                           ; BSR set to: 0
  4456                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 861:  if (sign) {
  4457   0011DC  5181               	movf	efgtoa@sign& (0+255),w,b
  4458   0011DE  B4D8               	btfsc	status,2,c
  4459   0011E0  EFF4  F008         	goto	u5521
  4460   0011E4  EFF6  F008         	goto	u5520
  4461   0011E8                     u5521:
  4462   0011E8  EF01  F009         	goto	l4721
  4463   0011EC                     u5520:
  4464   0011EC                     
  4465                           ; BSR set to: 0
  4466                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 862:   dbuf[--n] 
      +                          = sign;
  4467   0011EC  0786               	decf	efgtoa@n& (0+255),f,b
  4468   0011EE  A0D8               	btfss	status,0,c
  4469   0011F0  0787               	decf	(efgtoa@n+1)& (0+255),f,b
  4470   0011F2  0E00               	movlw	low _dbuf
  4471   0011F4  2586               	addwf	efgtoa@n& (0+255),w,b
  4472   0011F6  6ED9               	movwf	fsr2l,c
  4473   0011F8  0E01               	movlw	high _dbuf
  4474   0011FA  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4475   0011FC  6EDA               	movwf	fsr2h,c
  4476   0011FE  C081  FFDF         	movff	efgtoa@sign,indf2
  4477   001202                     l4721:
  4478                           
  4479                           ; BSR set to: 0
  4480                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 864:  w -= i;
  4481   001202  5177               	movf	efgtoa@i& (0+255),w,b
  4482   001204  5F71               	subwf	efgtoa@w& (0+255),f,b
  4483   001206  5178               	movf	(efgtoa@i+1)& (0+255),w,b
  4484   001208  5B72               	subwfb	(efgtoa@w+1)& (0+255),f,b
  4485   00120A                     
  4486                           ; BSR set to: 0
  4487                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 867:     return (
      +                          void) pad(fp, &dbuf[n], w);
  4488   00120A  C057  F00F         	movff	efgtoa@fp,pad@fp
  4489   00120E  0E00               	movlw	low _dbuf
  4490   001210  2586               	addwf	efgtoa@n& (0+255),w,b
  4491   001212  6E10               	movwf	pad@buf^0,c
  4492   001214  0E01               	movlw	high _dbuf
  4493   001216  2187               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4494   001218  6E11               	movwf	(pad@buf+1)^0,c
  4495   00121A  C071  F012         	movff	efgtoa@w,pad@p
  4496   00121E  C072  F013         	movff	efgtoa@w+1,pad@p+1
  4497   001222  EC77  F01A         	call	_pad	;wreg free
  4498   001226                     l942:
  4499   001226  0012               	return		;funcret
  4500   001228                     __end_of_efgtoa:
  4501                           	callstack 0
  4502                           
  4503 ;; *************** function _strcpy *****************
  4504 ;; Defined at:
  4505 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\strcpy.c"
  4506 ;; Parameters:    Size  Location     Type
  4507 ;;  dest            2    0[COMRAM] PTR unsigned char 
  4508 ;;		 -> dbuf(80), 
  4509 ;;  src             1    2[COMRAM] PTR const unsigned char 
  4510 ;;		 -> STR_6(4), STR_3(4), 
  4511 ;; Auto vars:     Size  Location     Type
  4512 ;;  d               2    4[COMRAM] PTR unsigned char 
  4513 ;;		 -> dbuf(80), 
  4514 ;; Return value:  Size  Location     Type
  4515 ;;                  2    0[COMRAM] PTR unsigned char 
  4516 ;; Registers used:
  4517 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4518 ;; Tracked objects:
  4519 ;;		On entry : 0/0
  4520 ;;		On exit  : 0/0
  4521 ;;		Unchanged: 0/0
  4522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4523 ;;      Params:         3       0       0       0       0       0       0       0       0
  4524 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4525 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4526 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4527 ;;Total ram usage:        6 bytes
  4528 ;; Hardware stack levels used: 1
  4529 ;; This function calls:
  4530 ;;		Nothing
  4531 ;; This function is called by:
  4532 ;;		_efgtoa
  4533 ;; This function uses a non-reentrant model
  4534 ;;
  4535                           
  4536                           	psect	text12
  4537   003798                     __ptext12:
  4538                           	callstack 0
  4539   003798                     _strcpy:
  4540                           	callstack 25
  4541   003798  C001  F005         	movff	strcpy@dest,strcpy@d
  4542   00379C  C002  F006         	movff	strcpy@dest+1,strcpy@d+1
  4543   0037A0                     l4455:
  4544   0037A0  2A03               	incf	strcpy@src^0,f,c
  4545   0037A2  0403               	decf	strcpy@src^0,w,c
  4546   0037A4  6E04               	movwf	??_strcpy^0,c
  4547   0037A6  C004  FFF6         	movff	??_strcpy,tblptrl
  4548   0037AA                     	if	1	;There is more than 1 active tblptr byte
  4549   0037AA  0E08               	movlw	high __smallconst
  4550   0037AC  6EF7               	movwf	tblptrh,c
  4551   0037AE                     	endif
  4552   0037AE                     	if	0	;tblptru may be non-zero
  4553   0037AE                     	endif
  4554   0037AE                     	if	0	;tblptru may be non-zero
  4555   0037AE                     	endif
  4556   0037AE  C005  FFD9         	movff	strcpy@d,fsr2l
  4557   0037B2  C006  FFDA         	movff	strcpy@d+1,fsr2h
  4558   0037B6  4A05               	infsnz	strcpy@d^0,f,c
  4559   0037B8  2A06               	incf	(strcpy@d+1)^0,f,c
  4560   0037BA  0008               	tblrd		*
  4561   0037BC  CFF5 FFDF          	movff	tablat,indf2
  4562   0037C0  50DF               	movf	indf2,w,c
  4563   0037C2  A4D8               	btfss	status,2,c
  4564   0037C4  EFE6  F01B         	goto	u5081
  4565   0037C8  EFE8  F01B         	goto	u5080
  4566   0037CC                     u5081:
  4567   0037CC  EFD0  F01B         	goto	l4455
  4568   0037D0                     u5080:
  4569   0037D0  0012               	return		;funcret
  4570   0037D2                     __end_of_strcpy:
  4571                           	callstack 0
  4572                           
  4573 ;; *************** function _pad *****************
  4574 ;; Defined at:
  4575 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c"
  4576 ;; Parameters:    Size  Location     Type
  4577 ;;  fp              1   14[COMRAM] PTR struct _IO_FILE
  4578 ;;		 -> sprintf@f(12), 
  4579 ;;  buf             2   15[COMRAM] PTR unsigned char 
  4580 ;;		 -> dbuf(80), 
  4581 ;;  p               2   17[COMRAM] int 
  4582 ;; Auto vars:     Size  Location     Type
  4583 ;;  i               2   20[COMRAM] int 
  4584 ;; Return value:  Size  Location     Type
  4585 ;;                  1    wreg      void 
  4586 ;; Registers used:
  4587 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4588 ;; Tracked objects:
  4589 ;;		On entry : 0/0
  4590 ;;		On exit  : 0/0
  4591 ;;		Unchanged: 0/0
  4592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4593 ;;      Params:         5       0       0       0       0       0       0       0       0
  4594 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4595 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4596 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4597 ;;Total ram usage:        8 bytes
  4598 ;; Hardware stack levels used: 1
  4599 ;; Hardware stack levels required when called: 3
  4600 ;; This function calls:
  4601 ;;		_fputc
  4602 ;;		_fputs
  4603 ;; This function is called by:
  4604 ;;		_efgtoa
  4605 ;; This function uses a non-reentrant model
  4606 ;;
  4607                           
  4608                           	psect	text13
  4609   0034EE                     __ptext13:
  4610                           	callstack 0
  4611   0034EE                     _pad:
  4612                           	callstack 22
  4613   0034EE                     
  4614                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 193: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\com
      +                          mon\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.
      +                          c: 195:     int i;;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c:
      +                           205:  if (p < 0) {
  4615   0034EE  BE13               	btfsc	(pad@p+1)^0,7,c
  4616   0034F0  EF7E  F01A         	goto	u4990
  4617   0034F4  EF7C  F01A         	goto	u4991
  4618   0034F8                     u4991:
  4619   0034F8  EF82  F01A         	goto	l927
  4620   0034FC                     u4990:
  4621   0034FC                     
  4622                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 206:   p = 0;
  4623   0034FC  0E00               	movlw	0
  4624   0034FE  6E13               	movwf	(pad@p+1)^0,c
  4625   003500  0E00               	movlw	0
  4626   003502  6E12               	movwf	pad@p^0,c
  4627   003504                     l927:
  4628                           
  4629                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 208:     i = 0;
  4630   003504  0E00               	movlw	0
  4631   003506  6E16               	movwf	(pad@i+1)^0,c
  4632   003508  0E00               	movlw	0
  4633   00350A  6E15               	movwf	pad@i^0,c
  4634                           
  4635                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  4636   00350C  EF92  F01A         	goto	l4427
  4637   003510                     l4423:
  4638                           
  4639                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
  4640   003510  0E00               	movlw	0
  4641   003512  6E02               	movwf	(fputc@c+1)^0,c
  4642   003514  0E20               	movlw	32
  4643   003516  6E01               	movwf	fputc@c^0,c
  4644   003518  C00F  F003         	movff	pad@fp,fputc@fp
  4645   00351C  EC23  F019         	call	_fputc	;wreg free
  4646   003520                     
  4647                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 211:         ++i;
  4648   003520  4A15               	infsnz	pad@i^0,f,c
  4649   003522  2A16               	incf	(pad@i+1)^0,f,c
  4650   003524                     l4427:
  4651                           
  4652                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  4653   003524  5012               	movf	pad@p^0,w,c
  4654   003526  5C15               	subwf	pad@i^0,w,c
  4655   003528  5016               	movf	(pad@i+1)^0,w,c
  4656   00352A  0A80               	xorlw	128
  4657   00352C  6E14               	movwf	??_pad^0,c
  4658   00352E  5013               	movf	(pad@p+1)^0,w,c
  4659   003530  0A80               	xorlw	128
  4660   003532  5814               	subwfb	??_pad^0,w,c
  4661   003534  A0D8               	btfss	status,0,c
  4662   003536  EF9F  F01A         	goto	u5001
  4663   00353A  EFA1  F01A         	goto	u5000
  4664   00353E                     u5001:
  4665   00353E  EF88  F01A         	goto	l4423
  4666   003542                     u5000:
  4667   003542                     
  4668                           ;C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
  4669   003542  C010  F009         	movff	pad@buf,fputs@s
  4670   003546  C011  F00A         	movff	pad@buf+1,fputs@s+1
  4671   00354A  C00F  F00B         	movff	pad@fp,fputs@fp
  4672   00354E  EC8C  F01B         	call	_fputs	;wreg free
  4673   003552  0012               	return		;funcret
  4674   003554                     __end_of_pad:
  4675                           	callstack 0
  4676                           
  4677 ;; *************** function _fputs *****************
  4678 ;; Defined at:
  4679 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_fputs.c"
  4680 ;; Parameters:    Size  Location     Type
  4681 ;;  s               2    8[COMRAM] PTR const unsigned char 
  4682 ;;		 -> dbuf(80), 
  4683 ;;  fp              1   10[COMRAM] PTR struct _IO_FILE
  4684 ;;		 -> sprintf@f(12), 
  4685 ;; Auto vars:     Size  Location     Type
  4686 ;;  i               2   12[COMRAM] int 
  4687 ;;  c               1   11[COMRAM] unsigned char 
  4688 ;; Return value:  Size  Location     Type
  4689 ;;                  2    8[COMRAM] int 
  4690 ;; Registers used:
  4691 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4692 ;; Tracked objects:
  4693 ;;		On entry : 0/0
  4694 ;;		On exit  : 0/0
  4695 ;;		Unchanged: 0/0
  4696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4697 ;;      Params:         3       0       0       0       0       0       0       0       0
  4698 ;;      Locals:         3       0       0       0       0       0       0       0       0
  4699 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4700 ;;      Totals:         6       0       0       0       0       0       0       0       0
  4701 ;;Total ram usage:        6 bytes
  4702 ;; Hardware stack levels used: 1
  4703 ;; Hardware stack levels required when called: 2
  4704 ;; This function calls:
  4705 ;;		_fputc
  4706 ;; This function is called by:
  4707 ;;		_pad
  4708 ;; This function uses a non-reentrant model
  4709 ;;
  4710                           
  4711                           	psect	text14
  4712   003718                     __ptext14:
  4713                           	callstack 0
  4714   003718                     _fputs:
  4715                           	callstack 22
  4716   003718  0E00               	movlw	0
  4717   00371A  6E0E               	movwf	(fputs@i+1)^0,c
  4718   00371C  0E00               	movlw	0
  4719   00371E  6E0D               	movwf	fputs@i^0,c
  4720   003720  EF9B  F01B         	goto	l4047
  4721   003724                     l4043:
  4722   003724  C00C  F001         	movff	fputs@c,fputc@c
  4723   003728  6A02               	clrf	(fputc@c+1)^0,c
  4724   00372A  C00B  F003         	movff	fputs@fp,fputc@fp
  4725   00372E  EC23  F019         	call	_fputc	;wreg free
  4726   003732  4A0D               	infsnz	fputs@i^0,f,c
  4727   003734  2A0E               	incf	(fputs@i+1)^0,f,c
  4728   003736                     l4047:
  4729   003736  500D               	movf	fputs@i^0,w,c
  4730   003738  2409               	addwf	fputs@s^0,w,c
  4731   00373A  6ED9               	movwf	fsr2l,c
  4732   00373C  500E               	movf	(fputs@i+1)^0,w,c
  4733   00373E  200A               	addwfc	(fputs@s+1)^0,w,c
  4734   003740  6EDA               	movwf	fsr2h,c
  4735   003742  50DF               	movf	indf2,w,c
  4736   003744  6E0C               	movwf	fputs@c^0,c
  4737   003746  500C               	movf	fputs@c^0,w,c
  4738   003748  A4D8               	btfss	status,2,c
  4739   00374A  EFA9  F01B         	goto	u4401
  4740   00374E  EFAB  F01B         	goto	u4400
  4741   003752                     u4401:
  4742   003752  EF92  F01B         	goto	l4043
  4743   003756                     u4400:
  4744   003756  0012               	return		;funcret
  4745   003758                     __end_of_fputs:
  4746                           	callstack 0
  4747                           
  4748 ;; *************** function _fputc *****************
  4749 ;; Defined at:
  4750 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\nf_fputc.c"
  4751 ;; Parameters:    Size  Location     Type
  4752 ;;  c               2    0[COMRAM] int 
  4753 ;;  fp              1    2[COMRAM] PTR struct _IO_FILE
  4754 ;;		 -> sprintf@f(12), 
  4755 ;; Auto vars:     Size  Location     Type
  4756 ;;		None
  4757 ;; Return value:  Size  Location     Type
  4758 ;;                  2    0[COMRAM] int 
  4759 ;; Registers used:
  4760 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4761 ;; Tracked objects:
  4762 ;;		On entry : 0/0
  4763 ;;		On exit  : 0/0
  4764 ;;		Unchanged: 0/0
  4765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4766 ;;      Params:         3       0       0       0       0       0       0       0       0
  4767 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4768 ;;      Temps:          5       0       0       0       0       0       0       0       0
  4769 ;;      Totals:         8       0       0       0       0       0       0       0       0
  4770 ;;Total ram usage:        8 bytes
  4771 ;; Hardware stack levels used: 1
  4772 ;; Hardware stack levels required when called: 1
  4773 ;; This function calls:
  4774 ;;		_putch
  4775 ;; This function is called by:
  4776 ;;		_pad
  4777 ;;		_vfpfcnvrt
  4778 ;;		_fputs
  4779 ;; This function uses a non-reentrant model
  4780 ;;
  4781                           
  4782                           	psect	text15
  4783   003246                     __ptext15:
  4784                           	callstack 0
  4785   003246                     _fputc:
  4786                           	callstack 25
  4787   003246  5003               	movf	fputc@fp^0,w,c
  4788   003248  B4D8               	btfsc	status,2,c
  4789   00324A  EF29  F019         	goto	u3971
  4790   00324E  EF2B  F019         	goto	u3970
  4791   003252                     u3971:
  4792   003252  EF33  F019         	goto	l3829
  4793   003256                     u3970:
  4794   003256  5003               	movf	fputc@fp^0,w,c
  4795   003258  A4D8               	btfss	status,2,c
  4796   00325A  EF31  F019         	goto	u3981
  4797   00325E  EF33  F019         	goto	u3980
  4798   003262                     u3981:
  4799   003262  EF38  F019         	goto	l3831
  4800   003266                     u3980:
  4801   003266                     l3829:
  4802   003266  5001               	movf	fputc@c^0,w,c
  4803   003268  ECCF  F01C         	call	_putch
  4804   00326C  EF7F  F019         	goto	l1068
  4805   003270                     l3831:
  4806   003270  5003               	movf	fputc@fp^0,w,c
  4807   003272  6ED9               	movwf	fsr2l,c
  4808   003274  6ADA               	clrf	fsr2h,c
  4809   003276  0E0A               	movlw	10
  4810   003278  26D9               	addwf	fsr2l,f,c
  4811   00327A  50DE               	movf	postinc2,w,c
  4812   00327C  10DE               	iorwf	postinc2,w,c
  4813   00327E  B4D8               	btfsc	status,2,c
  4814   003280  EF44  F019         	goto	u3991
  4815   003284  EF46  F019         	goto	u3990
  4816   003288                     u3991:
  4817   003288  EF5F  F019         	goto	l3835
  4818   00328C                     u3990:
  4819   00328C  5003               	movf	fputc@fp^0,w,c
  4820   00328E  6ED9               	movwf	fsr2l,c
  4821   003290  6ADA               	clrf	fsr2h,c
  4822   003292  0E0A               	movlw	10
  4823   003294  26D9               	addwf	fsr2l,f,c
  4824   003296  5003               	movf	fputc@fp^0,w,c
  4825   003298  6EE1               	movwf	fsr1l,c
  4826   00329A  6AE2               	clrf	fsr1h,c
  4827   00329C  0E03               	movlw	3
  4828   00329E  26E1               	addwf	fsr1l,f,c
  4829   0032A0  50DE               	movf	postinc2,w,c
  4830   0032A2  5CE6               	subwf	postinc1,w,c
  4831   0032A4  50E6               	movf	postinc1,w,c
  4832   0032A6  0A80               	xorlw	128
  4833   0032A8  6E08               	movwf	(??_fputc+4)^0,c
  4834   0032AA  50DE               	movf	postinc2,w,c
  4835   0032AC  0A80               	xorlw	128
  4836   0032AE  5808               	subwfb	(??_fputc+4)^0,w,c
  4837   0032B0  B0D8               	btfsc	status,0,c
  4838   0032B2  EF5D  F019         	goto	u4001
  4839   0032B6  EF5F  F019         	goto	u4000
  4840   0032BA                     u4001:
  4841   0032BA  EF7F  F019         	goto	l1068
  4842   0032BE                     u4000:
  4843   0032BE                     l3835:
  4844   0032BE  5003               	movf	fputc@fp^0,w,c
  4845   0032C0  6ED9               	movwf	fsr2l,c
  4846   0032C2  6ADA               	clrf	fsr2h,c
  4847   0032C4  0E03               	movlw	3
  4848   0032C6  26D9               	addwf	fsr2l,f,c
  4849   0032C8  CFDE F004          	movff	postinc2,??_fputc
  4850   0032CC  CFDD F005          	movff	postdec2,??_fputc+1
  4851   0032D0  5003               	movf	fputc@fp^0,w,c
  4852   0032D2  6ED9               	movwf	fsr2l,c
  4853   0032D4  6ADA               	clrf	fsr2h,c
  4854   0032D6  CFDE F006          	movff	postinc2,??_fputc+2
  4855   0032DA  CFDD F007          	movff	postdec2,??_fputc+3
  4856   0032DE  5004               	movf	??_fputc^0,w,c
  4857   0032E0  2406               	addwf	(??_fputc+2)^0,w,c
  4858   0032E2  6ED9               	movwf	fsr2l,c
  4859   0032E4  5005               	movf	(??_fputc+1)^0,w,c
  4860   0032E6  2007               	addwfc	(??_fputc+3)^0,w,c
  4861   0032E8  6EDA               	movwf	fsr2h,c
  4862   0032EA  C001  FFDF         	movff	fputc@c,indf2
  4863   0032EE  5003               	movf	fputc@fp^0,w,c
  4864   0032F0  6ED9               	movwf	fsr2l,c
  4865   0032F2  6ADA               	clrf	fsr2h,c
  4866   0032F4  0E03               	movlw	3
  4867   0032F6  26D9               	addwf	fsr2l,f,c
  4868   0032F8  2ADE               	incf	postinc2,f,c
  4869   0032FA  0E00               	movlw	0
  4870   0032FC  22DD               	addwfc	postdec2,f,c
  4871   0032FE                     l1068:
  4872   0032FE  0012               	return		;funcret
  4873   003300                     __end_of_fputc:
  4874                           	callstack 0
  4875                           
  4876 ;; *************** function _putch *****************
  4877 ;; Defined at:
  4878 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\putch.c"
  4879 ;; Parameters:    Size  Location     Type
  4880 ;;  c               1    wreg     unsigned char 
  4881 ;; Auto vars:     Size  Location     Type
  4882 ;;  c               1    0[COMRAM] unsigned char 
  4883 ;; Return value:  Size  Location     Type
  4884 ;;                  1    wreg      void 
  4885 ;; Registers used:
  4886 ;;		wreg
  4887 ;; Tracked objects:
  4888 ;;		On entry : 0/0
  4889 ;;		On exit  : 0/0
  4890 ;;		Unchanged: 0/0
  4891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4892 ;;      Params:         0       0       0       0       0       0       0       0       0
  4893 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4894 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4895 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4896 ;;Total ram usage:        0 bytes
  4897 ;; Hardware stack levels used: 1
  4898 ;; This function calls:
  4899 ;;		Nothing
  4900 ;; This function is called by:
  4901 ;;		_fputc
  4902 ;; This function uses a non-reentrant model
  4903 ;;
  4904                           
  4905                           	psect	text16
  4906   00399E                     __ptext16:
  4907                           	callstack 0
  4908   00399E                     _putch:
  4909                           	callstack 25
  4910   00399E  0012               	return		;funcret
  4911   0039A0                     __end_of_putch:
  4912                           	callstack 0
  4913                           
  4914 ;; *************** function _memcpy *****************
  4915 ;; Defined at:
  4916 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\memcpy.c"
  4917 ;; Parameters:    Size  Location     Type
  4918 ;;  d1              2    0[COMRAM] PTR void 
  4919 ;;		 -> dbuf(80), 
  4920 ;;  s1              2    2[COMRAM] PTR const void 
  4921 ;;		 -> dbuf(80), 
  4922 ;;  n               2    4[COMRAM] unsigned int 
  4923 ;; Auto vars:     Size  Location     Type
  4924 ;;  s               2    9[COMRAM] PTR const unsigned char 
  4925 ;;		 -> dbuf(80), 
  4926 ;;  d               2    7[COMRAM] PTR unsigned char 
  4927 ;;		 -> dbuf(80), 
  4928 ;;  tmp             1    6[COMRAM] unsigned char 
  4929 ;; Return value:  Size  Location     Type
  4930 ;;                  2    0[COMRAM] PTR void 
  4931 ;; Registers used:
  4932 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4933 ;; Tracked objects:
  4934 ;;		On entry : 0/0
  4935 ;;		On exit  : 0/0
  4936 ;;		Unchanged: 0/0
  4937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4938 ;;      Params:         6       0       0       0       0       0       0       0       0
  4939 ;;      Locals:         5       0       0       0       0       0       0       0       0
  4940 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4941 ;;      Totals:        11       0       0       0       0       0       0       0       0
  4942 ;;Total ram usage:       11 bytes
  4943 ;; Hardware stack levels used: 1
  4944 ;; This function calls:
  4945 ;;		Nothing
  4946 ;; This function is called by:
  4947 ;;		_efgtoa
  4948 ;; This function uses a non-reentrant model
  4949 ;;
  4950                           
  4951                           	psect	text17
  4952   003600                     __ptext17:
  4953                           	callstack 0
  4954   003600                     _memcpy:
  4955                           	callstack 25
  4956   003600  C003  F00A         	movff	memcpy@s1,memcpy@s
  4957   003604  C004  F00B         	movff	memcpy@s1+1,memcpy@s+1
  4958   003608  C001  F008         	movff	memcpy@d1,memcpy@d
  4959   00360C  C002  F009         	movff	memcpy@d1+1,memcpy@d+1
  4960   003610  EF1A  F01B         	goto	l4503
  4961   003614                     l4495:
  4962   003614  C00A  FFD9         	movff	memcpy@s,fsr2l
  4963   003618  C00B  FFDA         	movff	memcpy@s+1,fsr2h
  4964   00361C  50DF               	movf	indf2,w,c
  4965   00361E  6E07               	movwf	memcpy@tmp^0,c
  4966   003620  4A0A               	infsnz	memcpy@s^0,f,c
  4967   003622  2A0B               	incf	(memcpy@s+1)^0,f,c
  4968   003624  C008  FFD9         	movff	memcpy@d,fsr2l
  4969   003628  C009  FFDA         	movff	memcpy@d+1,fsr2h
  4970   00362C  C007  FFDF         	movff	memcpy@tmp,indf2
  4971   003630  4A08               	infsnz	memcpy@d^0,f,c
  4972   003632  2A09               	incf	(memcpy@d+1)^0,f,c
  4973   003634                     l4503:
  4974   003634  0605               	decf	memcpy@n^0,f,c
  4975   003636  A0D8               	btfss	status,0,c
  4976   003638  0606               	decf	(memcpy@n+1)^0,f,c
  4977   00363A  2805               	incf	memcpy@n^0,w,c
  4978   00363C  E106               	bnz	u5201
  4979   00363E  2806               	incf	(memcpy@n+1)^0,w,c
  4980   003640  A4D8               	btfss	status,2,c
  4981   003642  EF25  F01B         	goto	u5201
  4982   003646  EF27  F01B         	goto	u5200
  4983   00364A                     u5201:
  4984   00364A  EF0A  F01B         	goto	l4495
  4985   00364E                     u5200:
  4986   00364E  0012               	return		;funcret
  4987   003650                     __end_of_memcpy:
  4988                           	callstack 0
  4989                           
  4990 ;; *************** function _labs *****************
  4991 ;; Defined at:
  4992 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\labs.c"
  4993 ;; Parameters:    Size  Location     Type
  4994 ;;  a               4    0[COMRAM] long 
  4995 ;; Auto vars:     Size  Location     Type
  4996 ;;		None
  4997 ;; Return value:  Size  Location     Type
  4998 ;;                  4    0[COMRAM] long 
  4999 ;; Registers used:
  5000 ;;		wreg, status,2, status,0
  5001 ;; Tracked objects:
  5002 ;;		On entry : 0/0
  5003 ;;		On exit  : 0/0
  5004 ;;		Unchanged: 0/0
  5005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5006 ;;      Params:         4       0       0       0       0       0       0       0       0
  5007 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5008 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5009 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5010 ;;Total ram usage:        8 bytes
  5011 ;; Hardware stack levels used: 1
  5012 ;; This function calls:
  5013 ;;		Nothing
  5014 ;; This function is called by:
  5015 ;;		_efgtoa
  5016 ;; This function uses a non-reentrant model
  5017 ;;
  5018                           
  5019                           	psect	text18
  5020   003554                     __ptext18:
  5021                           	callstack 0
  5022   003554                     _labs:
  5023                           	callstack 25
  5024   003554  BE04               	btfsc	(labs@a+3)^0,7,c
  5025   003556  EFAF  F01A         	goto	u5091
  5026   00355A  EFB1  F01A         	goto	u5090
  5027   00355E                     u5091:
  5028   00355E  EFBB  F01A         	goto	l4461
  5029   003562                     u5090:
  5030   003562  C001  F001         	movff	labs@a,?_labs
  5031   003566  C002  F002         	movff	labs@a+1,?_labs+1
  5032   00356A  C003  F003         	movff	labs@a+2,?_labs+2
  5033   00356E  C004  F004         	movff	labs@a+3,?_labs+3
  5034   003572  EFD4  F01A         	goto	l1050
  5035   003576                     l4461:
  5036   003576  C001  F005         	movff	labs@a,??_labs
  5037   00357A  C002  F006         	movff	labs@a+1,??_labs+1
  5038   00357E  C003  F007         	movff	labs@a+2,??_labs+2
  5039   003582  C004  F008         	movff	labs@a+3,??_labs+3
  5040   003586  1E05               	comf	??_labs^0,f,c
  5041   003588  1E06               	comf	(??_labs+1)^0,f,c
  5042   00358A  1E07               	comf	(??_labs+2)^0,f,c
  5043   00358C  1E08               	comf	(??_labs+3)^0,f,c
  5044   00358E  2A05               	incf	??_labs^0,f,c
  5045   003590  0E00               	movlw	0
  5046   003592  2206               	addwfc	(??_labs+1)^0,f,c
  5047   003594  2207               	addwfc	(??_labs+2)^0,f,c
  5048   003596  2208               	addwfc	(??_labs+3)^0,f,c
  5049   003598  C005  F001         	movff	??_labs,?_labs
  5050   00359C  C006  F002         	movff	??_labs+1,?_labs+1
  5051   0035A0  C007  F003         	movff	??_labs+2,?_labs+2
  5052   0035A4  C008  F004         	movff	??_labs+3,?_labs+3
  5053   0035A8                     l1050:
  5054   0035A8  0012               	return		;funcret
  5055   0035AA                     __end_of_labs:
  5056                           	callstack 0
  5057                           
  5058 ;; *************** function _floorf *****************
  5059 ;; Defined at:
  5060 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\floorf.c"
  5061 ;; Parameters:    Size  Location     Type
  5062 ;;  x               4   66[COMRAM] float 
  5063 ;; Auto vars:     Size  Location     Type
  5064 ;;  u               4   82[COMRAM] struct .
  5065 ;;  m               4   76[COMRAM] unsigned long 
  5066 ;;  e               2   80[COMRAM] int 
  5067 ;; Return value:  Size  Location     Type
  5068 ;;                  4   66[COMRAM] float 
  5069 ;; Registers used:
  5070 ;;		wreg, status,2, status,0
  5071 ;; Tracked objects:
  5072 ;;		On entry : 0/0
  5073 ;;		On exit  : 0/0
  5074 ;;		Unchanged: 0/0
  5075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5076 ;;      Params:         4       0       0       0       0       0       0       0       0
  5077 ;;      Locals:        10       0       0       0       0       0       0       0       0
  5078 ;;      Temps:          6       0       0       0       0       0       0       0       0
  5079 ;;      Totals:        20       0       0       0       0       0       0       0       0
  5080 ;;Total ram usage:       20 bytes
  5081 ;; Hardware stack levels used: 1
  5082 ;; This function calls:
  5083 ;;		Nothing
  5084 ;; This function is called by:
  5085 ;;		_efgtoa
  5086 ;; This function uses a non-reentrant model
  5087 ;;
  5088                           
  5089                           	psect	text19
  5090   0026EC                     __ptext19:
  5091                           	callstack 0
  5092   0026EC                     _floorf:
  5093                           	callstack 25
  5094   0026EC  C0BB  F053         	movff	floorf@F521,floorf@u
  5095   0026F0  C0BC  F054         	movff	floorf@F521+1,floorf@u+1
  5096   0026F4  C0BD  F055         	movff	floorf@F521+2,floorf@u+2
  5097   0026F8  C0BE  F056         	movff	floorf@F521+3,floorf@u+3
  5098   0026FC  C043  F053         	movff	floorf@x,floorf@u
  5099   002700  C044  F054         	movff	floorf@x+1,floorf@u+1
  5100   002704  C045  F055         	movff	floorf@x+2,floorf@u+2
  5101   002708  C046  F056         	movff	floorf@x+3,floorf@u+3
  5102   00270C  0E81               	movlw	129
  5103   00270E  6E47               	movwf	??_floorf^0,c
  5104   002710  0EFF               	movlw	255
  5105   002712  6E48               	movwf	(??_floorf+1)^0,c
  5106   002714  C053  F049         	movff	floorf@u,??_floorf+2
  5107   002718  C054  F04A         	movff	floorf@u+1,??_floorf+3
  5108   00271C  C055  F04B         	movff	floorf@u+2,??_floorf+4
  5109   002720  C056  F04C         	movff	floorf@u+3,??_floorf+5
  5110   002724  0E18               	movlw	24
  5111   002726  EF9A  F013         	goto	u5100
  5112   00272A                     u5105:
  5113   00272A  90D8               	bcf	status,0,c
  5114   00272C  324C               	rrcf	(??_floorf+5)^0,f,c
  5115   00272E  324B               	rrcf	(??_floorf+4)^0,f,c
  5116   002730  324A               	rrcf	(??_floorf+3)^0,f,c
  5117   002732  3249               	rrcf	(??_floorf+2)^0,f,c
  5118   002734                     u5100:
  5119   002734  2EE8               	decfsz	wreg,f,c
  5120   002736  EF95  F013         	goto	u5105
  5121   00273A  5049               	movf	(??_floorf+2)^0,w,c
  5122   00273C  2447               	addwf	??_floorf^0,w,c
  5123   00273E  6E51               	movwf	floorf@e^0,c
  5124   002740  0E00               	movlw	0
  5125   002742  2048               	addwfc	(??_floorf+1)^0,w,c
  5126   002744  6E52               	movwf	(floorf@e+1)^0,c
  5127   002746  BE52               	btfsc	(floorf@e+1)^0,7,c
  5128   002748  EFAF  F013         	goto	u5111
  5129   00274C  5052               	movf	(floorf@e+1)^0,w,c
  5130   00274E  E109               	bnz	u5110
  5131   002750  0E17               	movlw	23
  5132   002752  5C51               	subwf	floorf@e^0,w,c
  5133   002754  A0D8               	btfss	status,0,c
  5134   002756  EFAF  F013         	goto	u5111
  5135   00275A  EFB1  F013         	goto	u5110
  5136   00275E                     u5111:
  5137   00275E  EFBB  F013         	goto	l4471
  5138   002762                     u5110:
  5139   002762                     l4469:
  5140   002762  C043  F043         	movff	floorf@x,?_floorf
  5141   002766  C044  F044         	movff	floorf@x+1,?_floorf+1
  5142   00276A  C045  F045         	movff	floorf@x+2,?_floorf+2
  5143   00276E  C046  F046         	movff	floorf@x+3,?_floorf+3
  5144   002772  EF7E  F014         	goto	l1036
  5145   002776                     l4471:
  5146   002776  BE52               	btfsc	(floorf@e+1)^0,7,c
  5147   002778  EFC0  F013         	goto	u5121
  5148   00277C  EFC2  F013         	goto	u5120
  5149   002780                     u5121:
  5150   002780  EF32  F014         	goto	l4481
  5151   002784                     u5120:
  5152   002784  C051  F047         	movff	floorf@e,??_floorf
  5153   002788  0EFF               	movlw	255
  5154   00278A  6E48               	movwf	(??_floorf+1)^0,c
  5155   00278C  0EFF               	movlw	255
  5156   00278E  6E49               	movwf	(??_floorf+2)^0,c
  5157   002790  0E7F               	movlw	127
  5158   002792  6E4A               	movwf	(??_floorf+3)^0,c
  5159   002794  0E00               	movlw	0
  5160   002796  6E4B               	movwf	(??_floorf+4)^0,c
  5161   002798                     u5135:
  5162   002798  6647               	tstfsz	??_floorf^0,c
  5163   00279A  EFD1  F013         	goto	u5136
  5164   00279E  EFD9  F013         	goto	u5137
  5165   0027A2                     u5136:
  5166   0027A2  344B               	rlcf	(??_floorf+4)^0,w,c
  5167   0027A4  324B               	rrcf	(??_floorf+4)^0,f,c
  5168   0027A6  324A               	rrcf	(??_floorf+3)^0,f,c
  5169   0027A8  3249               	rrcf	(??_floorf+2)^0,f,c
  5170   0027AA  3248               	rrcf	(??_floorf+1)^0,f,c
  5171   0027AC  2E47               	decfsz	??_floorf^0,f,c
  5172   0027AE  EFCC  F013         	goto	u5135
  5173   0027B2                     u5137:
  5174   0027B2  C048  F04D         	movff	??_floorf+1,floorf@m
  5175   0027B6  C049  F04E         	movff	??_floorf+2,floorf@m+1
  5176   0027BA  C04A  F04F         	movff	??_floorf+3,floorf@m+2
  5177   0027BE  C04B  F050         	movff	??_floorf+4,floorf@m+3
  5178   0027C2  504D               	movf	floorf@m^0,w,c
  5179   0027C4  1453               	andwf	floorf@u^0,w,c
  5180   0027C6  6E47               	movwf	??_floorf^0,c
  5181   0027C8  504E               	movf	(floorf@m+1)^0,w,c
  5182   0027CA  1454               	andwf	(floorf@u+1)^0,w,c
  5183   0027CC  6E48               	movwf	(??_floorf+1)^0,c
  5184   0027CE  504F               	movf	(floorf@m+2)^0,w,c
  5185   0027D0  1455               	andwf	(floorf@u+2)^0,w,c
  5186   0027D2  6E49               	movwf	(??_floorf+2)^0,c
  5187   0027D4  5050               	movf	(floorf@m+3)^0,w,c
  5188   0027D6  1456               	andwf	(floorf@u+3)^0,w,c
  5189   0027D8  6E4A               	movwf	(??_floorf+3)^0,c
  5190   0027DA  5047               	movf	??_floorf^0,w,c
  5191   0027DC  1048               	iorwf	(??_floorf+1)^0,w,c
  5192   0027DE  1049               	iorwf	(??_floorf+2)^0,w,c
  5193   0027E0  104A               	iorwf	(??_floorf+3)^0,w,c
  5194   0027E2  A4D8               	btfss	status,2,c
  5195   0027E4  EFF6  F013         	goto	u5141
  5196   0027E8  EFF8  F013         	goto	u5140
  5197   0027EC                     u5141:
  5198   0027EC  EFFA  F013         	goto	l4477
  5199   0027F0                     u5140:
  5200   0027F0  EFB1  F013         	goto	l4469
  5201   0027F4                     l4477:
  5202   0027F4  C053  F047         	movff	floorf@u,??_floorf
  5203   0027F8  C054  F048         	movff	floorf@u+1,??_floorf+1
  5204   0027FC  C055  F049         	movff	floorf@u+2,??_floorf+2
  5205   002800  C056  F04A         	movff	floorf@u+3,??_floorf+3
  5206   002804  0E20               	movlw	32
  5207   002806  EF0A  F014         	goto	u5150
  5208   00280A                     u5155:
  5209   00280A  90D8               	bcf	status,0,c
  5210   00280C  324A               	rrcf	(??_floorf+3)^0,f,c
  5211   00280E  3249               	rrcf	(??_floorf+2)^0,f,c
  5212   002810  3248               	rrcf	(??_floorf+1)^0,f,c
  5213   002812  3247               	rrcf	??_floorf^0,f,c
  5214   002814                     u5150:
  5215   002814  2EE8               	decfsz	wreg,f,c
  5216   002816  EF05  F014         	goto	u5155
  5217   00281A  5047               	movf	??_floorf^0,w,c
  5218   00281C  1048               	iorwf	(??_floorf+1)^0,w,c
  5219   00281E  1049               	iorwf	(??_floorf+2)^0,w,c
  5220   002820  104A               	iorwf	(??_floorf+3)^0,w,c
  5221   002822  B4D8               	btfsc	status,2,c
  5222   002824  EF16  F014         	goto	u5161
  5223   002828  EF18  F014         	goto	u5160
  5224   00282C                     u5161:
  5225   00282C  EF20  F014         	goto	l1039
  5226   002830                     u5160:
  5227   002830  504D               	movf	floorf@m^0,w,c
  5228   002832  2653               	addwf	floorf@u^0,f,c
  5229   002834  504E               	movf	(floorf@m+1)^0,w,c
  5230   002836  2254               	addwfc	(floorf@u+1)^0,f,c
  5231   002838  504F               	movf	(floorf@m+2)^0,w,c
  5232   00283A  2255               	addwfc	(floorf@u+2)^0,f,c
  5233   00283C  5050               	movf	(floorf@m+3)^0,w,c
  5234   00283E  2256               	addwfc	(floorf@u+3)^0,f,c
  5235   002840                     l1039:
  5236   002840  1C4D               	comf	floorf@m^0,w,c
  5237   002842  6E47               	movwf	??_floorf^0,c
  5238   002844  1C4E               	comf	(floorf@m+1)^0,w,c
  5239   002846  6E48               	movwf	(??_floorf+1)^0,c
  5240   002848  1C4F               	comf	(floorf@m+2)^0,w,c
  5241   00284A  6E49               	movwf	(??_floorf+2)^0,c
  5242   00284C  1C50               	comf	(floorf@m+3)^0,w,c
  5243   00284E  6E4A               	movwf	(??_floorf+3)^0,c
  5244   002850  5047               	movf	??_floorf^0,w,c
  5245   002852  1653               	andwf	floorf@u^0,f,c
  5246   002854  5048               	movf	(??_floorf+1)^0,w,c
  5247   002856  1654               	andwf	(floorf@u+1)^0,f,c
  5248   002858  5049               	movf	(??_floorf+2)^0,w,c
  5249   00285A  1655               	andwf	(floorf@u+2)^0,f,c
  5250   00285C  504A               	movf	(??_floorf+3)^0,w,c
  5251   00285E  1656               	andwf	(floorf@u+3)^0,f,c
  5252   002860  EF76  F014         	goto	l4489
  5253   002864                     l4481:
  5254   002864  C053  F047         	movff	floorf@u,??_floorf
  5255   002868  C054  F048         	movff	floorf@u+1,??_floorf+1
  5256   00286C  C055  F049         	movff	floorf@u+2,??_floorf+2
  5257   002870  C056  F04A         	movff	floorf@u+3,??_floorf+3
  5258   002874  0E20               	movlw	32
  5259   002876  EF42  F014         	goto	u5170
  5260   00287A                     u5175:
  5261   00287A  90D8               	bcf	status,0,c
  5262   00287C  324A               	rrcf	(??_floorf+3)^0,f,c
  5263   00287E  3249               	rrcf	(??_floorf+2)^0,f,c
  5264   002880  3248               	rrcf	(??_floorf+1)^0,f,c
  5265   002882  3247               	rrcf	??_floorf^0,f,c
  5266   002884                     u5170:
  5267   002884  2EE8               	decfsz	wreg,f,c
  5268   002886  EF3D  F014         	goto	u5175
  5269   00288A  5047               	movf	??_floorf^0,w,c
  5270   00288C  1048               	iorwf	(??_floorf+1)^0,w,c
  5271   00288E  1049               	iorwf	(??_floorf+2)^0,w,c
  5272   002890  104A               	iorwf	(??_floorf+3)^0,w,c
  5273   002892  A4D8               	btfss	status,2,c
  5274   002894  EF4E  F014         	goto	u5181
  5275   002898  EF50  F014         	goto	u5180
  5276   00289C                     u5181:
  5277   00289C  EF5A  F014         	goto	l4485
  5278   0028A0                     u5180:
  5279   0028A0  0E00               	movlw	0
  5280   0028A2  6E53               	movwf	floorf@u^0,c
  5281   0028A4  0E00               	movlw	0
  5282   0028A6  6E54               	movwf	(floorf@u+1)^0,c
  5283   0028A8  0E00               	movlw	0
  5284   0028AA  6E55               	movwf	(floorf@u+2)^0,c
  5285   0028AC  0E00               	movlw	0
  5286   0028AE  6E56               	movwf	(floorf@u+3)^0,c
  5287   0028B0  EF76  F014         	goto	l4489
  5288   0028B4                     l4485:
  5289   0028B4  90D8               	bcf	status,0,c
  5290   0028B6  3453               	rlcf	floorf@u^0,w,c
  5291   0028B8  6E47               	movwf	??_floorf^0,c
  5292   0028BA  3454               	rlcf	(floorf@u+1)^0,w,c
  5293   0028BC  6E48               	movwf	(??_floorf+1)^0,c
  5294   0028BE  3455               	rlcf	(floorf@u+2)^0,w,c
  5295   0028C0  6E49               	movwf	(??_floorf+2)^0,c
  5296   0028C2  3456               	rlcf	(floorf@u+3)^0,w,c
  5297   0028C4  6E4A               	movwf	(??_floorf+3)^0,c
  5298   0028C6  5047               	movf	??_floorf^0,w,c
  5299   0028C8  1048               	iorwf	(??_floorf+1)^0,w,c
  5300   0028CA  1049               	iorwf	(??_floorf+2)^0,w,c
  5301   0028CC  104A               	iorwf	(??_floorf+3)^0,w,c
  5302   0028CE  B4D8               	btfsc	status,2,c
  5303   0028D0  EF6C  F014         	goto	u5191
  5304   0028D4  EF6E  F014         	goto	u5190
  5305   0028D8                     u5191:
  5306   0028D8  EF76  F014         	goto	l4489
  5307   0028DC                     u5190:
  5308   0028DC  0E00               	movlw	0
  5309   0028DE  6E53               	movwf	floorf@u^0,c
  5310   0028E0  0E00               	movlw	0
  5311   0028E2  6E54               	movwf	(floorf@u+1)^0,c
  5312   0028E4  0E80               	movlw	128
  5313   0028E6  6E55               	movwf	(floorf@u+2)^0,c
  5314   0028E8  0EBF               	movlw	191
  5315   0028EA  6E56               	movwf	(floorf@u+3)^0,c
  5316   0028EC                     l4489:
  5317   0028EC  C053  F043         	movff	floorf@u,?_floorf
  5318   0028F0  C054  F044         	movff	floorf@u+1,?_floorf+1
  5319   0028F4  C055  F045         	movff	floorf@u+2,?_floorf+2
  5320   0028F8  C056  F046         	movff	floorf@u+3,?_floorf+3
  5321   0028FC                     l1036:
  5322   0028FC  0012               	return		;funcret
  5323   0028FE                     __end_of_floorf:
  5324                           	callstack 0
  5325                           
  5326 ;; *************** function ___fpclassifyf *****************
  5327 ;; Defined at:
  5328 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\__fpclassifyf.c"
  5329 ;; Parameters:    Size  Location     Type
  5330 ;;  x               4    0[COMRAM] float 
  5331 ;; Auto vars:     Size  Location     Type
  5332 ;;  u               4   10[COMRAM] struct .
  5333 ;;  e               2    8[COMRAM] int 
  5334 ;; Return value:  Size  Location     Type
  5335 ;;                  2    0[COMRAM] int 
  5336 ;; Registers used:
  5337 ;;		wreg, status,2, status,0
  5338 ;; Tracked objects:
  5339 ;;		On entry : 0/0
  5340 ;;		On exit  : 0/0
  5341 ;;		Unchanged: 0/0
  5342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5343 ;;      Params:         4       0       0       0       0       0       0       0       0
  5344 ;;      Locals:         6       0       0       0       0       0       0       0       0
  5345 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5346 ;;      Totals:        14       0       0       0       0       0       0       0       0
  5347 ;;Total ram usage:       14 bytes
  5348 ;; Hardware stack levels used: 1
  5349 ;; This function calls:
  5350 ;;		Nothing
  5351 ;; This function is called by:
  5352 ;;		_efgtoa
  5353 ;; This function uses a non-reentrant model
  5354 ;;
  5355                           
  5356                           	psect	text20
  5357   002F8E                     __ptext20:
  5358                           	callstack 0
  5359   002F8E                     ___fpclassifyf:
  5360                           	callstack 25
  5361   002F8E  C0BF  F00B         	movff	___fpclassifyf@F465,___fpclassifyf@u
  5362   002F92  C0C0  F00C         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  5363   002F96  C0C1  F00D         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  5364   002F9A  C0C2  F00E         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  5365   002F9E  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  5366   002FA2  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  5367   002FA6  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  5368   002FAA  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  5369   002FAE  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  5370   002FB2  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5371   002FB6  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5372   002FBA  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5373   002FBE  0E18               	movlw	24
  5374   002FC0  EFE7  F017         	goto	u5010
  5375   002FC4                     u5015:
  5376   002FC4  90D8               	bcf	status,0,c
  5377   002FC6  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  5378   002FC8  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  5379   002FCA  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  5380   002FCC  3205               	rrcf	??___fpclassifyf^0,f,c
  5381   002FCE                     u5010:
  5382   002FCE  2EE8               	decfsz	wreg,f,c
  5383   002FD0  EFE2  F017         	goto	u5015
  5384   002FD4  5005               	movf	??___fpclassifyf^0,w,c
  5385   002FD6  6E09               	movwf	___fpclassifyf@e^0,c
  5386   002FD8  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  5387   002FDA  5009               	movf	___fpclassifyf@e^0,w,c
  5388   002FDC  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5389   002FDE  A4D8               	btfss	status,2,c
  5390   002FE0  EFF4  F017         	goto	u5021
  5391   002FE4  EFF6  F017         	goto	u5020
  5392   002FE8                     u5021:
  5393   002FE8  EF16  F018         	goto	l4443
  5394   002FEC                     u5020:
  5395   002FEC  90D8               	bcf	status,0,c
  5396   002FEE  340B               	rlcf	___fpclassifyf@u^0,w,c
  5397   002FF0  6E05               	movwf	??___fpclassifyf^0,c
  5398   002FF2  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  5399   002FF4  6E06               	movwf	(??___fpclassifyf+1)^0,c
  5400   002FF6  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  5401   002FF8  6E07               	movwf	(??___fpclassifyf+2)^0,c
  5402   002FFA  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  5403   002FFC  6E08               	movwf	(??___fpclassifyf+3)^0,c
  5404   002FFE  5005               	movf	??___fpclassifyf^0,w,c
  5405   003000  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  5406   003002  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  5407   003004  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  5408   003006  A4D8               	btfss	status,2,c
  5409   003008  EF08  F018         	goto	u5031
  5410   00300C  EF0A  F018         	goto	u5030
  5411   003010                     u5031:
  5412   003010  EF10  F018         	goto	l4439
  5413   003014                     u5030:
  5414   003014  0E00               	movlw	0
  5415   003016  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5416   003018  0E02               	movlw	2
  5417   00301A  6E01               	movwf	?___fpclassifyf^0,c
  5418   00301C  EF45  F018         	goto	l1029
  5419   003020                     l4439:
  5420   003020  0E00               	movlw	0
  5421   003022  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5422   003024  0E03               	movlw	3
  5423   003026  6E01               	movwf	?___fpclassifyf^0,c
  5424   003028  EF45  F018         	goto	l1029
  5425   00302C                     l4443:
  5426   00302C  2809               	incf	___fpclassifyf@e^0,w,c
  5427   00302E  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5428   003030  A4D8               	btfss	status,2,c
  5429   003032  EF1D  F018         	goto	u5041
  5430   003036  EF1F  F018         	goto	u5040
  5431   00303A                     u5041:
  5432   00303A  EF41  F018         	goto	l4449
  5433   00303E                     u5040:
  5434   00303E  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  5435   003042  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5436   003046  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5437   00304A  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5438   00304E  0E09               	movlw	9
  5439   003050                     u5055:
  5440   003050  90D8               	bcf	status,0,c
  5441   003052  3605               	rlcf	??___fpclassifyf^0,f,c
  5442   003054  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  5443   003056  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  5444   003058  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  5445   00305A  2EE8               	decfsz	wreg,f,c
  5446   00305C  EF28  F018         	goto	u5055
  5447   003060  5005               	movf	??___fpclassifyf^0,w,c
  5448   003062  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  5449   003064  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  5450   003066  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  5451   003068  B4D8               	btfsc	status,2,c
  5452   00306A  EF39  F018         	goto	u5061
  5453   00306E  EF3C  F018         	goto	u5060
  5454   003072                     u5061:
  5455   003072  0E01               	movlw	1
  5456   003074  EF3D  F018         	goto	u5070
  5457   003078                     u5060:
  5458   003078  0E00               	movlw	0
  5459   00307A                     u5070:
  5460   00307A  6E01               	movwf	?___fpclassifyf^0,c
  5461   00307C  6A02               	clrf	(?___fpclassifyf+1)^0,c
  5462   00307E  EF45  F018         	goto	l1029
  5463   003082                     l4449:
  5464   003082  0E00               	movlw	0
  5465   003084  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5466   003086  0E04               	movlw	4
  5467   003088  6E01               	movwf	?___fpclassifyf^0,c
  5468   00308A                     l1029:
  5469   00308A  0012               	return		;funcret
  5470   00308C                     __end_of___fpclassifyf:
  5471                           	callstack 0
  5472                           
  5473 ;; *************** function ___fltol *****************
  5474 ;; Defined at:
  5475 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\fltol.c"
  5476 ;; Parameters:    Size  Location     Type
  5477 ;;  f1              4    0[COMRAM] int 
  5478 ;; Auto vars:     Size  Location     Type
  5479 ;;  exp1            1    9[COMRAM] unsigned char 
  5480 ;;  sign1           1    8[COMRAM] unsigned char 
  5481 ;; Return value:  Size  Location     Type
  5482 ;;                  4    0[COMRAM] long 
  5483 ;; Registers used:
  5484 ;;		wreg, status,2, status,0
  5485 ;; Tracked objects:
  5486 ;;		On entry : 0/0
  5487 ;;		On exit  : 0/0
  5488 ;;		Unchanged: 0/0
  5489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5490 ;;      Params:         4       0       0       0       0       0       0       0       0
  5491 ;;      Locals:         2       0       0       0       0       0       0       0       0
  5492 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5493 ;;      Totals:        10       0       0       0       0       0       0       0       0
  5494 ;;Total ram usage:       10 bytes
  5495 ;; Hardware stack levels used: 1
  5496 ;; This function calls:
  5497 ;;		Nothing
  5498 ;; This function is called by:
  5499 ;;		_efgtoa
  5500 ;; This function uses a non-reentrant model
  5501 ;;
  5502                           
  5503                           	psect	text21
  5504   002D84                     __ptext21:
  5505                           	callstack 0
  5506   002D84                     ___fltol:
  5507                           	callstack 25
  5508   002D84  3403               	rlcf	(___fltol@f1+2)^0,w,c
  5509   002D86  3404               	rlcf	(___fltol@f1+3)^0,w,c
  5510   002D88  6E0A               	movwf	___fltol@exp1^0,c
  5511   002D8A  500A               	movf	___fltol@exp1^0,w,c
  5512   002D8C  A4D8               	btfss	status,2,c
  5513   002D8E  EFCB  F016         	goto	u4921
  5514   002D92  EFCD  F016         	goto	u4920
  5515   002D96                     u4921:
  5516   002D96  EFD7  F016         	goto	l4381
  5517   002D9A                     u4920:
  5518   002D9A                     l4377:
  5519   002D9A  0E00               	movlw	0
  5520   002D9C  6E01               	movwf	?___fltol^0,c
  5521   002D9E  0E00               	movlw	0
  5522   002DA0  6E02               	movwf	(?___fltol+1)^0,c
  5523   002DA2  0E00               	movlw	0
  5524   002DA4  6E03               	movwf	(?___fltol+2)^0,c
  5525   002DA6  0E00               	movlw	0
  5526   002DA8  6E04               	movwf	(?___fltol+3)^0,c
  5527   002DAA  EF44  F017         	goto	l489
  5528   002DAE                     l4381:
  5529   002DAE  C001  F005         	movff	___fltol@f1,??___fltol
  5530   002DB2  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  5531   002DB6  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  5532   002DBA  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  5533   002DBE  0E20               	movlw	32
  5534   002DC0  EFE7  F016         	goto	u4930
  5535   002DC4                     u4935:
  5536   002DC4  90D8               	bcf	status,0,c
  5537   002DC6  3208               	rrcf	(??___fltol+3)^0,f,c
  5538   002DC8  3207               	rrcf	(??___fltol+2)^0,f,c
  5539   002DCA  3206               	rrcf	(??___fltol+1)^0,f,c
  5540   002DCC  3205               	rrcf	??___fltol^0,f,c
  5541   002DCE                     u4930:
  5542   002DCE  2EE8               	decfsz	wreg,f,c
  5543   002DD0  EFE2  F016         	goto	u4935
  5544   002DD4  5005               	movf	??___fltol^0,w,c
  5545   002DD6  6E09               	movwf	___fltol@sign1^0,c
  5546   002DD8  8E03               	bsf	(___fltol@f1+2)^0,7,c
  5547   002DDA  0EFF               	movlw	255
  5548   002DDC  1601               	andwf	___fltol@f1^0,f,c
  5549   002DDE  0EFF               	movlw	255
  5550   002DE0  1602               	andwf	(___fltol@f1+1)^0,f,c
  5551   002DE2  0EFF               	movlw	255
  5552   002DE4  1603               	andwf	(___fltol@f1+2)^0,f,c
  5553   002DE6  0E00               	movlw	0
  5554   002DE8  1604               	andwf	(___fltol@f1+3)^0,f,c
  5555   002DEA  0E96               	movlw	150
  5556   002DEC  5E0A               	subwf	___fltol@exp1^0,f,c
  5557   002DEE  BE0A               	btfsc	___fltol@exp1^0,7,c
  5558   002DF0  EFFE  F016         	goto	u4940
  5559   002DF4  EFFC  F016         	goto	u4941
  5560   002DF8                     u4941:
  5561   002DF8  EF14  F017         	goto	l4401
  5562   002DFC                     u4940:
  5563   002DFC  500A               	movf	___fltol@exp1^0,w,c
  5564   002DFE  0A80               	xorlw	128
  5565   002E00  0F97               	addlw	151
  5566   002E02  B0D8               	btfsc	status,0,c
  5567   002E04  EF06  F017         	goto	u4951
  5568   002E08  EF08  F017         	goto	u4950
  5569   002E0C                     u4951:
  5570   002E0C  EF0A  F017         	goto	l4397
  5571   002E10                     u4950:
  5572   002E10  EFCD  F016         	goto	l4377
  5573   002E14                     l4397:
  5574   002E14  90D8               	bcf	status,0,c
  5575   002E16  3204               	rrcf	(___fltol@f1+3)^0,f,c
  5576   002E18  3203               	rrcf	(___fltol@f1+2)^0,f,c
  5577   002E1A  3202               	rrcf	(___fltol@f1+1)^0,f,c
  5578   002E1C  3201               	rrcf	___fltol@f1^0,f,c
  5579   002E1E  3E0A               	incfsz	___fltol@exp1^0,f,c
  5580   002E20  EF0A  F017         	goto	l4397
  5581   002E24  EF2C  F017         	goto	l4411
  5582   002E28                     l4401:
  5583   002E28  0E1F               	movlw	31
  5584   002E2A  640A               	cpfsgt	___fltol@exp1^0,c
  5585   002E2C  EF1A  F017         	goto	u4961
  5586   002E30  EF1C  F017         	goto	u4960
  5587   002E34                     u4961:
  5588   002E34  EF24  F017         	goto	l4409
  5589   002E38                     u4960:
  5590   002E38  EFCD  F016         	goto	l4377
  5591   002E3C                     l4407:
  5592   002E3C  90D8               	bcf	status,0,c
  5593   002E3E  3601               	rlcf	___fltol@f1^0,f,c
  5594   002E40  3602               	rlcf	(___fltol@f1+1)^0,f,c
  5595   002E42  3603               	rlcf	(___fltol@f1+2)^0,f,c
  5596   002E44  3604               	rlcf	(___fltol@f1+3)^0,f,c
  5597   002E46  060A               	decf	___fltol@exp1^0,f,c
  5598   002E48                     l4409:
  5599   002E48  500A               	movf	___fltol@exp1^0,w,c
  5600   002E4A  A4D8               	btfss	status,2,c
  5601   002E4C  EF2A  F017         	goto	u4971
  5602   002E50  EF2C  F017         	goto	u4970
  5603   002E54                     u4971:
  5604   002E54  EF1E  F017         	goto	l4407
  5605   002E58                     u4970:
  5606   002E58                     l4411:
  5607   002E58  5009               	movf	___fltol@sign1^0,w,c
  5608   002E5A  B4D8               	btfsc	status,2,c
  5609   002E5C  EF32  F017         	goto	u4981
  5610   002E60  EF34  F017         	goto	u4980
  5611   002E64                     u4981:
  5612   002E64  EF3C  F017         	goto	l4415
  5613   002E68                     u4980:
  5614   002E68  1E04               	comf	(___fltol@f1+3)^0,f,c
  5615   002E6A  1E03               	comf	(___fltol@f1+2)^0,f,c
  5616   002E6C  1E02               	comf	(___fltol@f1+1)^0,f,c
  5617   002E6E  6C01               	negf	___fltol@f1^0,c
  5618   002E70  0E00               	movlw	0
  5619   002E72  2202               	addwfc	(___fltol@f1+1)^0,f,c
  5620   002E74  2203               	addwfc	(___fltol@f1+2)^0,f,c
  5621   002E76  2204               	addwfc	(___fltol@f1+3)^0,f,c
  5622   002E78                     l4415:
  5623   002E78  C001  F001         	movff	___fltol@f1,?___fltol
  5624   002E7C  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  5625   002E80  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  5626   002E84  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  5627   002E88                     l489:
  5628   002E88  0012               	return		;funcret
  5629   002E8A                     __end_of___fltol:
  5630                           	callstack 0
  5631                           
  5632 ;; *************** function ___flsub *****************
  5633 ;; Defined at:
  5634 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\sprcadd.c"
  5635 ;; Parameters:    Size  Location     Type
  5636 ;;  b               4   41[COMRAM] long 
  5637 ;;  a               4   45[COMRAM] long 
  5638 ;; Auto vars:     Size  Location     Type
  5639 ;;		None
  5640 ;; Return value:  Size  Location     Type
  5641 ;;                  4   41[COMRAM] long 
  5642 ;; Registers used:
  5643 ;;		wreg, status,2, status,0, cstack
  5644 ;; Tracked objects:
  5645 ;;		On entry : 0/0
  5646 ;;		On exit  : 0/0
  5647 ;;		Unchanged: 0/0
  5648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5649 ;;      Params:         8       0       0       0       0       0       0       0       0
  5650 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5651 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5652 ;;      Totals:         8       0       0       0       0       0       0       0       0
  5653 ;;Total ram usage:        8 bytes
  5654 ;; Hardware stack levels used: 1
  5655 ;; Hardware stack levels required when called: 1
  5656 ;; This function calls:
  5657 ;;		___fladd
  5658 ;; This function is called by:
  5659 ;;		_logf
  5660 ;;		_efgtoa
  5661 ;; This function uses a non-reentrant model
  5662 ;;
  5663                           
  5664                           	psect	text22
  5665   003650                     __ptext22:
  5666                           	callstack 0
  5667   003650                     ___flsub:
  5668                           	callstack 26
  5669   003650  0E00               	movlw	0
  5670   003652  1A2E               	xorwf	___flsub@a^0,f,c
  5671   003654  0E00               	movlw	0
  5672   003656  1A2F               	xorwf	(___flsub@a+1)^0,f,c
  5673   003658  0E00               	movlw	0
  5674   00365A  1A30               	xorwf	(___flsub@a+2)^0,f,c
  5675   00365C  0E80               	movlw	128
  5676   00365E  1A31               	xorwf	(___flsub@a+3)^0,f,c
  5677   003660  C02A  F01A         	movff	___flsub@b,___fladd@b
  5678   003664  C02B  F01B         	movff	___flsub@b+1,___fladd@b+1
  5679   003668  C02C  F01C         	movff	___flsub@b+2,___fladd@b+2
  5680   00366C  C02D  F01D         	movff	___flsub@b+3,___fladd@b+3
  5681   003670  C02E  F01E         	movff	___flsub@a,___fladd@a
  5682   003674  C02F  F01F         	movff	___flsub@a+1,___fladd@a+1
  5683   003678  C030  F020         	movff	___flsub@a+2,___fladd@a+2
  5684   00367C  C031  F021         	movff	___flsub@a+3,___fladd@a+3
  5685   003680  EC22  F00C         	call	___fladd	;wreg free
  5686   003684  C01A  F02A         	movff	?___fladd,?___flsub
  5687   003688  C01B  F02B         	movff	?___fladd+1,?___flsub+1
  5688   00368C  C01C  F02C         	movff	?___fladd+2,?___flsub+2
  5689   003690  C01D  F02D         	movff	?___fladd+3,?___flsub+3
  5690   003694  0012               	return		;funcret
  5691   003696                     __end_of___flsub:
  5692                           	callstack 0
  5693                           
  5694 ;; *************** function ___fladd *****************
  5695 ;; Defined at:
  5696 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\sprcadd.c"
  5697 ;; Parameters:    Size  Location     Type
  5698 ;;  b               4   25[COMRAM] long 
  5699 ;;  a               4   29[COMRAM] long 
  5700 ;; Auto vars:     Size  Location     Type
  5701 ;;  grs             1   40[COMRAM] unsigned char 
  5702 ;;  bexp            1   39[COMRAM] unsigned char 
  5703 ;;  aexp            1   38[COMRAM] unsigned char 
  5704 ;;  signs           1   37[COMRAM] unsigned char 
  5705 ;; Return value:  Size  Location     Type
  5706 ;;                  4   25[COMRAM] unsigned char 
  5707 ;; Registers used:
  5708 ;;		wreg, status,2, status,0
  5709 ;; Tracked objects:
  5710 ;;		On entry : 0/0
  5711 ;;		On exit  : 0/0
  5712 ;;		Unchanged: 0/0
  5713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5714 ;;      Params:         8       0       0       0       0       0       0       0       0
  5715 ;;      Locals:         4       0       0       0       0       0       0       0       0
  5716 ;;      Temps:          4       0       0       0       0       0       0       0       0
  5717 ;;      Totals:        16       0       0       0       0       0       0       0       0
  5718 ;;Total ram usage:       16 bytes
  5719 ;; Hardware stack levels used: 1
  5720 ;; This function calls:
  5721 ;;		Nothing
  5722 ;; This function is called by:
  5723 ;;		_termistorin
  5724 ;;		___flsub
  5725 ;;		_logf
  5726 ;;		_efgtoa
  5727 ;;		_termistorout
  5728 ;; This function uses a non-reentrant model
  5729 ;;
  5730                           
  5731                           	psect	text23
  5732   001844                     __ptext23:
  5733                           	callstack 0
  5734   001844                     ___fladd:
  5735                           	callstack 26
  5736   001844  501D               	movf	(___fladd@b+3)^0,w,c
  5737   001846  0B80               	andlw	128
  5738   001848  6E26               	movwf	___fladd@signs^0,c
  5739   00184A  501D               	movf	(___fladd@b+3)^0,w,c
  5740   00184C  241D               	addwf	(___fladd@b+3)^0,w,c
  5741   00184E  6E28               	movwf	___fladd@bexp^0,c
  5742   001850  AE1C               	btfss	(___fladd@b+2)^0,7,c
  5743   001852  EF2D  F00C         	goto	u4011
  5744   001856  EF2F  F00C         	goto	u4010
  5745   00185A                     u4011:
  5746   00185A  EF30  F00C         	goto	l3845
  5747   00185E                     u4010:
  5748   00185E  8028               	bsf	___fladd@bexp^0,0,c
  5749   001860                     l3845:
  5750   001860  5028               	movf	___fladd@bexp^0,w,c
  5751   001862  B4D8               	btfsc	status,2,c
  5752   001864  EF36  F00C         	goto	u4021
  5753   001868  EF38  F00C         	goto	u4020
  5754   00186C                     u4021:
  5755   00186C  EF4D  F00C         	goto	l3855
  5756   001870                     u4020:
  5757   001870  2828               	incf	___fladd@bexp^0,w,c
  5758   001872  A4D8               	btfss	status,2,c
  5759   001874  EF3E  F00C         	goto	u4031
  5760   001878  EF40  F00C         	goto	u4030
  5761   00187C                     u4031:
  5762   00187C  EF48  F00C         	goto	l3851
  5763   001880                     u4030:
  5764   001880  0E00               	movlw	0
  5765   001882  6E1A               	movwf	___fladd@b^0,c
  5766   001884  0E00               	movlw	0
  5767   001886  6E1B               	movwf	(___fladd@b+1)^0,c
  5768   001888  0E00               	movlw	0
  5769   00188A  6E1C               	movwf	(___fladd@b+2)^0,c
  5770   00188C  0E00               	movlw	0
  5771   00188E  6E1D               	movwf	(___fladd@b+3)^0,c
  5772   001890                     l3851:
  5773   001890  8E1C               	bsf	(___fladd@b+2)^0,7,c
  5774   001892  0E00               	movlw	0
  5775   001894  6E1D               	movwf	(___fladd@b+3)^0,c
  5776   001896  EF55  F00C         	goto	l3857
  5777   00189A                     l3855:
  5778   00189A  0E00               	movlw	0
  5779   00189C  6E1A               	movwf	___fladd@b^0,c
  5780   00189E  0E00               	movlw	0
  5781   0018A0  6E1B               	movwf	(___fladd@b+1)^0,c
  5782   0018A2  0E00               	movlw	0
  5783   0018A4  6E1C               	movwf	(___fladd@b+2)^0,c
  5784   0018A6  0E00               	movlw	0
  5785   0018A8  6E1D               	movwf	(___fladd@b+3)^0,c
  5786   0018AA                     l3857:
  5787   0018AA  5021               	movf	(___fladd@a+3)^0,w,c
  5788   0018AC  0B80               	andlw	128
  5789   0018AE  6E27               	movwf	___fladd@aexp^0,c
  5790   0018B0  5026               	movf	___fladd@signs^0,w,c
  5791   0018B2  1827               	xorwf	___fladd@aexp^0,w,c
  5792   0018B4  B4D8               	btfsc	status,2,c
  5793   0018B6  EF5F  F00C         	goto	u4041
  5794   0018BA  EF61  F00C         	goto	u4040
  5795   0018BE                     u4041:
  5796   0018BE  EF62  F00C         	goto	l3863
  5797   0018C2                     u4040:
  5798   0018C2  8C26               	bsf	___fladd@signs^0,6,c
  5799   0018C4                     l3863:
  5800   0018C4  5021               	movf	(___fladd@a+3)^0,w,c
  5801   0018C6  2421               	addwf	(___fladd@a+3)^0,w,c
  5802   0018C8  6E27               	movwf	___fladd@aexp^0,c
  5803   0018CA  AE20               	btfss	(___fladd@a+2)^0,7,c
  5804   0018CC  EF6A  F00C         	goto	u4051
  5805   0018D0  EF6C  F00C         	goto	u4050
  5806   0018D4                     u4051:
  5807   0018D4  EF6D  F00C         	goto	l3869
  5808   0018D8                     u4050:
  5809   0018D8  8027               	bsf	___fladd@aexp^0,0,c
  5810   0018DA                     l3869:
  5811   0018DA  5027               	movf	___fladd@aexp^0,w,c
  5812   0018DC  B4D8               	btfsc	status,2,c
  5813   0018DE  EF73  F00C         	goto	u4061
  5814   0018E2  EF75  F00C         	goto	u4060
  5815   0018E6                     u4061:
  5816   0018E6  EF8A  F00C         	goto	l3879
  5817   0018EA                     u4060:
  5818   0018EA  2827               	incf	___fladd@aexp^0,w,c
  5819   0018EC  A4D8               	btfss	status,2,c
  5820   0018EE  EF7B  F00C         	goto	u4071
  5821   0018F2  EF7D  F00C         	goto	u4070
  5822   0018F6                     u4071:
  5823   0018F6  EF85  F00C         	goto	l3875
  5824   0018FA                     u4070:
  5825   0018FA  0E00               	movlw	0
  5826   0018FC  6E1E               	movwf	___fladd@a^0,c
  5827   0018FE  0E00               	movlw	0
  5828   001900  6E1F               	movwf	(___fladd@a+1)^0,c
  5829   001902  0E00               	movlw	0
  5830   001904  6E20               	movwf	(___fladd@a+2)^0,c
  5831   001906  0E00               	movlw	0
  5832   001908  6E21               	movwf	(___fladd@a+3)^0,c
  5833   00190A                     l3875:
  5834   00190A  8E20               	bsf	(___fladd@a+2)^0,7,c
  5835   00190C  0E00               	movlw	0
  5836   00190E  6E21               	movwf	(___fladd@a+3)^0,c
  5837   001910  EF92  F00C         	goto	l3881
  5838   001914                     l3879:
  5839   001914  0E00               	movlw	0
  5840   001916  6E1E               	movwf	___fladd@a^0,c
  5841   001918  0E00               	movlw	0
  5842   00191A  6E1F               	movwf	(___fladd@a+1)^0,c
  5843   00191C  0E00               	movlw	0
  5844   00191E  6E20               	movwf	(___fladd@a+2)^0,c
  5845   001920  0E00               	movlw	0
  5846   001922  6E21               	movwf	(___fladd@a+3)^0,c
  5847   001924                     l3881:
  5848   001924  5028               	movf	___fladd@bexp^0,w,c
  5849   001926  5C27               	subwf	___fladd@aexp^0,w,c
  5850   001928  B0D8               	btfsc	status,0,c
  5851   00192A  EF99  F00C         	goto	u4081
  5852   00192E  EF9B  F00C         	goto	u4080
  5853   001932                     u4081:
  5854   001932  EFC2  F00C         	goto	l3917
  5855   001936                     u4080:
  5856   001936  AC26               	btfss	___fladd@signs^0,6,c
  5857   001938  EFA0  F00C         	goto	u4091
  5858   00193C  EFA2  F00C         	goto	u4090
  5859   001940                     u4091:
  5860   001940  EFA4  F00C         	goto	l3887
  5861   001944                     u4090:
  5862   001944  0E80               	movlw	128
  5863   001946  1A26               	xorwf	___fladd@signs^0,f,c
  5864   001948                     l3887:
  5865   001948  C028  F029         	movff	___fladd@bexp,___fladd@grs
  5866   00194C  C027  F028         	movff	___fladd@aexp,___fladd@bexp
  5867   001950  C029  F027         	movff	___fladd@grs,___fladd@aexp
  5868   001954  C01A  F029         	movff	___fladd@b,___fladd@grs
  5869   001958  C01E  F01A         	movff	___fladd@a,___fladd@b
  5870   00195C  C029  F01E         	movff	___fladd@grs,___fladd@a
  5871   001960  C01B  F029         	movff	___fladd@b+1,___fladd@grs
  5872   001964  C01F  F01B         	movff	___fladd@a+1,___fladd@b+1
  5873   001968  C029  F01F         	movff	___fladd@grs,___fladd@a+1
  5874   00196C  C01C  F029         	movff	___fladd@b+2,___fladd@grs
  5875   001970  C020  F01C         	movff	___fladd@a+2,___fladd@b+2
  5876   001974  C029  F020         	movff	___fladd@grs,___fladd@a+2
  5877   001978  C01D  F029         	movff	___fladd@b+3,___fladd@grs
  5878   00197C  C021  F01D         	movff	___fladd@a+3,___fladd@b+3
  5879   001980  C029  F021         	movff	___fladd@grs,___fladd@a+3
  5880   001984                     l3917:
  5881   001984  0E00               	movlw	0
  5882   001986  6E29               	movwf	___fladd@grs^0,c
  5883   001988  5028               	movf	___fladd@bexp^0,w,c
  5884   00198A  C027  F022         	movff	___fladd@aexp,??___fladd
  5885   00198E  6A23               	clrf	(??___fladd+1)^0,c
  5886   001990  5E22               	subwf	??___fladd^0,f,c
  5887   001992  0E00               	movlw	0
  5888   001994  5A23               	subwfb	(??___fladd+1)^0,f,c
  5889   001996  BE23               	btfsc	(??___fladd+1)^0,7,c
  5890   001998  EFD7  F00C         	goto	u4101
  5891   00199C  5023               	movf	(??___fladd+1)^0,w,c
  5892   00199E  E109               	bnz	u4100
  5893   0019A0  0E1A               	movlw	26
  5894   0019A2  5C22               	subwf	??___fladd^0,w,c
  5895   0019A4  A0D8               	btfss	status,0,c
  5896   0019A6  EFD7  F00C         	goto	u4101
  5897   0019AA  EFD9  F00C         	goto	u4100
  5898   0019AE                     u4101:
  5899   0019AE  EF10  F00D         	goto	l721
  5900   0019B2                     u4100:
  5901   0019B2  501A               	movf	___fladd@b^0,w,c
  5902   0019B4  101B               	iorwf	(___fladd@b+1)^0,w,c
  5903   0019B6  101C               	iorwf	(___fladd@b+2)^0,w,c
  5904   0019B8  101D               	iorwf	(___fladd@b+3)^0,w,c
  5905   0019BA  A4D8               	btfss	status,2,c
  5906   0019BC  EFE2  F00C         	goto	u4111
  5907   0019C0  EFE5  F00C         	goto	u4110
  5908   0019C4                     u4111:
  5909   0019C4  0E01               	movlw	1
  5910   0019C6  EFE6  F00C         	goto	u4120
  5911   0019CA                     u4110:
  5912   0019CA  0E00               	movlw	0
  5913   0019CC                     u4120:
  5914   0019CC  6E29               	movwf	___fladd@grs^0,c
  5915   0019CE  0E00               	movlw	0
  5916   0019D0  6E1A               	movwf	___fladd@b^0,c
  5917   0019D2  0E00               	movlw	0
  5918   0019D4  6E1B               	movwf	(___fladd@b+1)^0,c
  5919   0019D6  0E00               	movlw	0
  5920   0019D8  6E1C               	movwf	(___fladd@b+2)^0,c
  5921   0019DA  0E00               	movlw	0
  5922   0019DC  6E1D               	movwf	(___fladd@b+3)^0,c
  5923   0019DE  C027  F028         	movff	___fladd@aexp,___fladd@bexp
  5924   0019E2  EF19  F00D         	goto	l720
  5925   0019E6                     l722:
  5926   0019E6  A029               	btfss	___fladd@grs^0,0,c
  5927   0019E8  EFF8  F00C         	goto	u4131
  5928   0019EC  EFFA  F00C         	goto	u4130
  5929   0019F0                     u4131:
  5930   0019F0  EF00  F00D         	goto	l3929
  5931   0019F4                     u4130:
  5932   0019F4  90D8               	bcf	status,0,c
  5933   0019F6  3029               	rrcf	___fladd@grs^0,w,c
  5934   0019F8  0901               	iorlw	1
  5935   0019FA  6E29               	movwf	___fladd@grs^0,c
  5936   0019FC  EF02  F00D         	goto	l3931
  5937   001A00                     l3929:
  5938   001A00  90D8               	bcf	status,0,c
  5939   001A02  3229               	rrcf	___fladd@grs^0,f,c
  5940   001A04                     l3931:
  5941   001A04  A01A               	btfss	___fladd@b^0,0,c
  5942   001A06  EF07  F00D         	goto	u4141
  5943   001A0A  EF09  F00D         	goto	u4140
  5944   001A0E                     u4141:
  5945   001A0E  EF0A  F00D         	goto	l3935
  5946   001A12                     u4140:
  5947   001A12  8E29               	bsf	___fladd@grs^0,7,c
  5948   001A14                     l3935:
  5949   001A14  341D               	rlcf	(___fladd@b+3)^0,w,c
  5950   001A16  321D               	rrcf	(___fladd@b+3)^0,f,c
  5951   001A18  321C               	rrcf	(___fladd@b+2)^0,f,c
  5952   001A1A  321B               	rrcf	(___fladd@b+1)^0,f,c
  5953   001A1C  321A               	rrcf	___fladd@b^0,f,c
  5954   001A1E  2A28               	incf	___fladd@bexp^0,f,c
  5955   001A20                     l721:
  5956   001A20  5027               	movf	___fladd@aexp^0,w,c
  5957   001A22  5C28               	subwf	___fladd@bexp^0,w,c
  5958   001A24  A0D8               	btfss	status,0,c
  5959   001A26  EF17  F00D         	goto	u4151
  5960   001A2A  EF19  F00D         	goto	u4150
  5961   001A2E                     u4151:
  5962   001A2E  EFF3  F00C         	goto	l722
  5963   001A32                     u4150:
  5964   001A32                     l720:
  5965   001A32  BC26               	btfsc	___fladd@signs^0,6,c
  5966   001A34  EF1E  F00D         	goto	u4161
  5967   001A38  EF20  F00D         	goto	u4160
  5968   001A3C                     u4161:
  5969   001A3C  EF60  F00D         	goto	l3963
  5970   001A40                     u4160:
  5971   001A40  5028               	movf	___fladd@bexp^0,w,c
  5972   001A42  A4D8               	btfss	status,2,c
  5973   001A44  EF26  F00D         	goto	u4171
  5974   001A48  EF28  F00D         	goto	u4170
  5975   001A4C                     u4171:
  5976   001A4C  EF32  F00D         	goto	l3945
  5977   001A50                     u4170:
  5978   001A50  0E00               	movlw	0
  5979   001A52  6E1A               	movwf	?___fladd^0,c
  5980   001A54  0E00               	movlw	0
  5981   001A56  6E1B               	movwf	(?___fladd+1)^0,c
  5982   001A58  0E00               	movlw	0
  5983   001A5A  6E1C               	movwf	(?___fladd+2)^0,c
  5984   001A5C  0E00               	movlw	0
  5985   001A5E  6E1D               	movwf	(?___fladd+3)^0,c
  5986   001A60  EF81  F00E         	goto	l729
  5987   001A64                     l3945:
  5988   001A64  501E               	movf	___fladd@a^0,w,c
  5989   001A66  261A               	addwf	___fladd@b^0,f,c
  5990   001A68  501F               	movf	(___fladd@a+1)^0,w,c
  5991   001A6A  221B               	addwfc	(___fladd@b+1)^0,f,c
  5992   001A6C  5020               	movf	(___fladd@a+2)^0,w,c
  5993   001A6E  221C               	addwfc	(___fladd@b+2)^0,f,c
  5994   001A70  5021               	movf	(___fladd@a+3)^0,w,c
  5995   001A72  221D               	addwfc	(___fladd@b+3)^0,f,c
  5996   001A74  A01D               	btfss	(___fladd@b+3)^0,0,c
  5997   001A76  EF3F  F00D         	goto	u4181
  5998   001A7A  EF41  F00D         	goto	u4180
  5999   001A7E                     u4181:
  6000   001A7E  EFED  F00D         	goto	l3999
  6001   001A82                     u4180:
  6002   001A82  A029               	btfss	___fladd@grs^0,0,c
  6003   001A84  EF46  F00D         	goto	u4191
  6004   001A88  EF48  F00D         	goto	u4190
  6005   001A8C                     u4191:
  6006   001A8C  EF4E  F00D         	goto	l3953
  6007   001A90                     u4190:
  6008   001A90  90D8               	bcf	status,0,c
  6009   001A92  3029               	rrcf	___fladd@grs^0,w,c
  6010   001A94  0901               	iorlw	1
  6011   001A96  6E29               	movwf	___fladd@grs^0,c
  6012   001A98  EF50  F00D         	goto	l3955
  6013   001A9C                     l3953:
  6014   001A9C  90D8               	bcf	status,0,c
  6015   001A9E  3229               	rrcf	___fladd@grs^0,f,c
  6016   001AA0                     l3955:
  6017   001AA0  A01A               	btfss	___fladd@b^0,0,c
  6018   001AA2  EF55  F00D         	goto	u4201
  6019   001AA6  EF57  F00D         	goto	u4200
  6020   001AAA                     u4201:
  6021   001AAA  EF58  F00D         	goto	l3959
  6022   001AAE                     u4200:
  6023   001AAE  8E29               	bsf	___fladd@grs^0,7,c
  6024   001AB0                     l3959:
  6025   001AB0  341D               	rlcf	(___fladd@b+3)^0,w,c
  6026   001AB2  321D               	rrcf	(___fladd@b+3)^0,f,c
  6027   001AB4  321C               	rrcf	(___fladd@b+2)^0,f,c
  6028   001AB6  321B               	rrcf	(___fladd@b+1)^0,f,c
  6029   001AB8  321A               	rrcf	___fladd@b^0,f,c
  6030   001ABA  2A28               	incf	___fladd@bexp^0,f,c
  6031   001ABC  EFED  F00D         	goto	l3999
  6032   001AC0                     l3963:
  6033   001AC0  501E               	movf	___fladd@a^0,w,c
  6034   001AC2  5C1A               	subwf	___fladd@b^0,w,c
  6035   001AC4  501F               	movf	(___fladd@a+1)^0,w,c
  6036   001AC6  581B               	subwfb	(___fladd@b+1)^0,w,c
  6037   001AC8  5020               	movf	(___fladd@a+2)^0,w,c
  6038   001ACA  581C               	subwfb	(___fladd@b+2)^0,w,c
  6039   001ACC  501D               	movf	(___fladd@b+3)^0,w,c
  6040   001ACE  0A80               	xorlw	128
  6041   001AD0  6E22               	movwf	??___fladd^0,c
  6042   001AD2  5021               	movf	(___fladd@a+3)^0,w,c
  6043   001AD4  0A80               	xorlw	128
  6044   001AD6  5822               	subwfb	??___fladd^0,w,c
  6045   001AD8  B0D8               	btfsc	status,0,c
  6046   001ADA  EF71  F00D         	goto	u4211
  6047   001ADE  EF73  F00D         	goto	u4210
  6048   001AE2                     u4211:
  6049   001AE2  EF9E  F00D         	goto	l3973
  6050   001AE6                     u4210:
  6051   001AE6  501A               	movf	___fladd@b^0,w,c
  6052   001AE8  5C1E               	subwf	___fladd@a^0,w,c
  6053   001AEA  6E22               	movwf	??___fladd^0,c
  6054   001AEC  501B               	movf	(___fladd@b+1)^0,w,c
  6055   001AEE  581F               	subwfb	(___fladd@a+1)^0,w,c
  6056   001AF0  6E23               	movwf	(??___fladd+1)^0,c
  6057   001AF2  501C               	movf	(___fladd@b+2)^0,w,c
  6058   001AF4  5820               	subwfb	(___fladd@a+2)^0,w,c
  6059   001AF6  6E24               	movwf	(??___fladd+2)^0,c
  6060   001AF8  501D               	movf	(___fladd@b+3)^0,w,c
  6061   001AFA  5821               	subwfb	(___fladd@a+3)^0,w,c
  6062   001AFC  6E25               	movwf	(??___fladd+3)^0,c
  6063   001AFE  0EFF               	movlw	255
  6064   001B00  2422               	addwf	??___fladd^0,w,c
  6065   001B02  6E1A               	movwf	___fladd@b^0,c
  6066   001B04  0EFF               	movlw	255
  6067   001B06  2023               	addwfc	(??___fladd+1)^0,w,c
  6068   001B08  6E1B               	movwf	(___fladd@b+1)^0,c
  6069   001B0A  0EFF               	movlw	255
  6070   001B0C  2024               	addwfc	(??___fladd+2)^0,w,c
  6071   001B0E  6E1C               	movwf	(___fladd@b+2)^0,c
  6072   001B10  0EFF               	movlw	255
  6073   001B12  2025               	addwfc	(??___fladd+3)^0,w,c
  6074   001B14  6E1D               	movwf	(___fladd@b+3)^0,c
  6075   001B16  0E80               	movlw	128
  6076   001B18  1A26               	xorwf	___fladd@signs^0,f,c
  6077   001B1A  6C29               	negf	___fladd@grs^0,c
  6078   001B1C  5029               	movf	___fladd@grs^0,w,c
  6079   001B1E  A4D8               	btfss	status,2,c
  6080   001B20  EF94  F00D         	goto	u4221
  6081   001B24  EF96  F00D         	goto	u4220
  6082   001B28                     u4221:
  6083   001B28  EFA6  F00D         	goto	l737
  6084   001B2C                     u4220:
  6085   001B2C  0E01               	movlw	1
  6086   001B2E  261A               	addwf	___fladd@b^0,f,c
  6087   001B30  0E00               	movlw	0
  6088   001B32  221B               	addwfc	(___fladd@b+1)^0,f,c
  6089   001B34  221C               	addwfc	(___fladd@b+2)^0,f,c
  6090   001B36  221D               	addwfc	(___fladd@b+3)^0,f,c
  6091   001B38  EFA6  F00D         	goto	l737
  6092   001B3C                     l3973:
  6093   001B3C  501E               	movf	___fladd@a^0,w,c
  6094   001B3E  5E1A               	subwf	___fladd@b^0,f,c
  6095   001B40  501F               	movf	(___fladd@a+1)^0,w,c
  6096   001B42  5A1B               	subwfb	(___fladd@b+1)^0,f,c
  6097   001B44  5020               	movf	(___fladd@a+2)^0,w,c
  6098   001B46  5A1C               	subwfb	(___fladd@b+2)^0,f,c
  6099   001B48  5021               	movf	(___fladd@a+3)^0,w,c
  6100   001B4A  5A1D               	subwfb	(___fladd@b+3)^0,f,c
  6101   001B4C                     l737:
  6102   001B4C  501A               	movf	___fladd@b^0,w,c
  6103   001B4E  101B               	iorwf	(___fladd@b+1)^0,w,c
  6104   001B50  101C               	iorwf	(___fladd@b+2)^0,w,c
  6105   001B52  101D               	iorwf	(___fladd@b+3)^0,w,c
  6106   001B54  A4D8               	btfss	status,2,c
  6107   001B56  EFAF  F00D         	goto	u4231
  6108   001B5A  EFB1  F00D         	goto	u4230
  6109   001B5E                     u4231:
  6110   001B5E  EFE6  F00D         	goto	l3997
  6111   001B62                     u4230:
  6112   001B62  5029               	movf	___fladd@grs^0,w,c
  6113   001B64  A4D8               	btfss	status,2,c
  6114   001B66  EFB7  F00D         	goto	u4241
  6115   001B6A  EFB9  F00D         	goto	u4240
  6116   001B6E                     u4241:
  6117   001B6E  EFE6  F00D         	goto	l3997
  6118   001B72                     u4240:
  6119   001B72  0E00               	movlw	0
  6120   001B74  6E1A               	movwf	?___fladd^0,c
  6121   001B76  0E00               	movlw	0
  6122   001B78  6E1B               	movwf	(?___fladd+1)^0,c
  6123   001B7A  0E00               	movlw	0
  6124   001B7C  6E1C               	movwf	(?___fladd+2)^0,c
  6125   001B7E  0E00               	movlw	0
  6126   001B80  6E1D               	movwf	(?___fladd+3)^0,c
  6127   001B82  EF81  F00E         	goto	l729
  6128   001B86                     l3981:
  6129   001B86  90D8               	bcf	status,0,c
  6130   001B88  361A               	rlcf	___fladd@b^0,f,c
  6131   001B8A  361B               	rlcf	(___fladd@b+1)^0,f,c
  6132   001B8C  361C               	rlcf	(___fladd@b+2)^0,f,c
  6133   001B8E  361D               	rlcf	(___fladd@b+3)^0,f,c
  6134   001B90  AE29               	btfss	___fladd@grs^0,7,c
  6135   001B92  EFCD  F00D         	goto	u4251
  6136   001B96  EFCF  F00D         	goto	u4250
  6137   001B9A                     u4251:
  6138   001B9A  EFD0  F00D         	goto	l3987
  6139   001B9E                     u4250:
  6140   001B9E  801A               	bsf	___fladd@b^0,0,c
  6141   001BA0                     l3987:
  6142   001BA0  A029               	btfss	___fladd@grs^0,0,c
  6143   001BA2  EFD5  F00D         	goto	u4261
  6144   001BA6  EFD7  F00D         	goto	u4260
  6145   001BAA                     u4261:
  6146   001BAA  EFDB  F00D         	goto	l3991
  6147   001BAE                     u4260:
  6148   001BAE  80D8               	bsf	status,0,c
  6149   001BB0  3629               	rlcf	___fladd@grs^0,f,c
  6150   001BB2  EFDD  F00D         	goto	l3993
  6151   001BB6                     l3991:
  6152   001BB6  90D8               	bcf	status,0,c
  6153   001BB8  3629               	rlcf	___fladd@grs^0,f,c
  6154   001BBA                     l3993:
  6155   001BBA  5028               	movf	___fladd@bexp^0,w,c
  6156   001BBC  B4D8               	btfsc	status,2,c
  6157   001BBE  EFE3  F00D         	goto	u4271
  6158   001BC2  EFE5  F00D         	goto	u4270
  6159   001BC6                     u4271:
  6160   001BC6  EFE6  F00D         	goto	l3997
  6161   001BCA                     u4270:
  6162   001BCA  0628               	decf	___fladd@bexp^0,f,c
  6163   001BCC                     l3997:
  6164   001BCC  AE1C               	btfss	(___fladd@b+2)^0,7,c
  6165   001BCE  EFEB  F00D         	goto	u4281
  6166   001BD2  EFED  F00D         	goto	u4280
  6167   001BD6                     u4281:
  6168   001BD6  EFC3  F00D         	goto	l3981
  6169   001BDA                     u4280:
  6170   001BDA                     l3999:
  6171   001BDA  0E00               	movlw	0
  6172   001BDC  6E27               	movwf	___fladd@aexp^0,c
  6173   001BDE  AE29               	btfss	___fladd@grs^0,7,c
  6174   001BE0  EFF4  F00D         	goto	u4291
  6175   001BE4  EFF6  F00D         	goto	u4290
  6176   001BE8                     u4291:
  6177   001BE8  EF0E  F00E         	goto	l746
  6178   001BEC                     u4290:
  6179   001BEC  C029  F022         	movff	___fladd@grs,??___fladd
  6180   001BF0  0E7F               	movlw	127
  6181   001BF2  1622               	andwf	??___fladd^0,f,c
  6182   001BF4  B4D8               	btfsc	status,2,c
  6183   001BF6  EFFF  F00D         	goto	u4301
  6184   001BFA  EF01  F00E         	goto	u4300
  6185   001BFE                     u4301:
  6186   001BFE  EF05  F00E         	goto	l747
  6187   001C02                     u4300:
  6188   001C02                     l4005:
  6189   001C02  0E01               	movlw	1
  6190   001C04  6E27               	movwf	___fladd@aexp^0,c
  6191   001C06  EF0E  F00E         	goto	l746
  6192   001C0A                     l747:
  6193   001C0A  A01A               	btfss	___fladd@b^0,0,c
  6194   001C0C  EF0A  F00E         	goto	u4311
  6195   001C10  EF0C  F00E         	goto	u4310
  6196   001C14                     u4311:
  6197   001C14  EF0E  F00E         	goto	l746
  6198   001C18                     u4310:
  6199   001C18  EF01  F00E         	goto	l4005
  6200   001C1C                     l746:
  6201   001C1C  5027               	movf	___fladd@aexp^0,w,c
  6202   001C1E  B4D8               	btfsc	status,2,c
  6203   001C20  EF14  F00E         	goto	u4321
  6204   001C24  EF16  F00E         	goto	u4320
  6205   001C28                     u4321:
  6206   001C28  EF41  F00E         	goto	l4017
  6207   001C2C                     u4320:
  6208   001C2C  0E01               	movlw	1
  6209   001C2E  261A               	addwf	___fladd@b^0,f,c
  6210   001C30  0E00               	movlw	0
  6211   001C32  221B               	addwfc	(___fladd@b+1)^0,f,c
  6212   001C34  221C               	addwfc	(___fladd@b+2)^0,f,c
  6213   001C36  221D               	addwfc	(___fladd@b+3)^0,f,c
  6214   001C38  A01D               	btfss	(___fladd@b+3)^0,0,c
  6215   001C3A  EF21  F00E         	goto	u4331
  6216   001C3E  EF23  F00E         	goto	u4330
  6217   001C42                     u4331:
  6218   001C42  EF41  F00E         	goto	l4017
  6219   001C46                     u4330:
  6220   001C46  C01A  F022         	movff	___fladd@b,??___fladd
  6221   001C4A  C01B  F023         	movff	___fladd@b+1,??___fladd+1
  6222   001C4E  C01C  F024         	movff	___fladd@b+2,??___fladd+2
  6223   001C52  C01D  F025         	movff	___fladd@b+3,??___fladd+3
  6224   001C56  3425               	rlcf	(??___fladd+3)^0,w,c
  6225   001C58  3225               	rrcf	(??___fladd+3)^0,f,c
  6226   001C5A  3224               	rrcf	(??___fladd+2)^0,f,c
  6227   001C5C  3223               	rrcf	(??___fladd+1)^0,f,c
  6228   001C5E  3222               	rrcf	??___fladd^0,f,c
  6229   001C60  C022  F01A         	movff	??___fladd,___fladd@b
  6230   001C64  C023  F01B         	movff	??___fladd+1,___fladd@b+1
  6231   001C68  C024  F01C         	movff	??___fladd+2,___fladd@b+2
  6232   001C6C  C025  F01D         	movff	??___fladd+3,___fladd@b+3
  6233   001C70  2828               	incf	___fladd@bexp^0,w,c
  6234   001C72  B4D8               	btfsc	status,2,c
  6235   001C74  EF3E  F00E         	goto	u4341
  6236   001C78  EF40  F00E         	goto	u4340
  6237   001C7C                     u4341:
  6238   001C7C  EF41  F00E         	goto	l4017
  6239   001C80                     u4340:
  6240   001C80  2A28               	incf	___fladd@bexp^0,f,c
  6241   001C82                     l4017:
  6242   001C82  2828               	incf	___fladd@bexp^0,w,c
  6243   001C84  B4D8               	btfsc	status,2,c
  6244   001C86  EF47  F00E         	goto	u4351
  6245   001C8A  EF49  F00E         	goto	u4350
  6246   001C8E                     u4351:
  6247   001C8E  EF51  F00E         	goto	l4021
  6248   001C92                     u4350:
  6249   001C92  5028               	movf	___fladd@bexp^0,w,c
  6250   001C94  A4D8               	btfss	status,2,c
  6251   001C96  EF4F  F00E         	goto	u4361
  6252   001C9A  EF51  F00E         	goto	u4360
  6253   001C9E                     u4361:
  6254   001C9E  EF63  F00E         	goto	l4025
  6255   001CA2                     u4360:
  6256   001CA2                     l4021:
  6257   001CA2  0E00               	movlw	0
  6258   001CA4  6E1A               	movwf	___fladd@b^0,c
  6259   001CA6  0E00               	movlw	0
  6260   001CA8  6E1B               	movwf	(___fladd@b+1)^0,c
  6261   001CAA  0E00               	movlw	0
  6262   001CAC  6E1C               	movwf	(___fladd@b+2)^0,c
  6263   001CAE  0E00               	movlw	0
  6264   001CB0  6E1D               	movwf	(___fladd@b+3)^0,c
  6265   001CB2  5028               	movf	___fladd@bexp^0,w,c
  6266   001CB4  A4D8               	btfss	status,2,c
  6267   001CB6  EF5F  F00E         	goto	u4371
  6268   001CBA  EF61  F00E         	goto	u4370
  6269   001CBE                     u4371:
  6270   001CBE  EF63  F00E         	goto	l4025
  6271   001CC2                     u4370:
  6272   001CC2  0E00               	movlw	0
  6273   001CC4  6E26               	movwf	___fladd@signs^0,c
  6274   001CC6                     l4025:
  6275   001CC6  A028               	btfss	___fladd@bexp^0,0,c
  6276   001CC8  EF68  F00E         	goto	u4381
  6277   001CCC  EF6A  F00E         	goto	u4380
  6278   001CD0                     u4381:
  6279   001CD0  EF6D  F00E         	goto	l4029
  6280   001CD4                     u4380:
  6281   001CD4  8E1C               	bsf	(___fladd@b+2)^0,7,c
  6282   001CD6  EF6E  F00E         	goto	l4031
  6283   001CDA                     l4029:
  6284   001CDA  9E1C               	bcf	(___fladd@b+2)^0,7,c
  6285   001CDC                     l4031:
  6286   001CDC  90D8               	bcf	status,0,c
  6287   001CDE  3028               	rrcf	___fladd@bexp^0,w,c
  6288   001CE0  6E1D               	movwf	(___fladd@b+3)^0,c
  6289   001CE2  AE26               	btfss	___fladd@signs^0,7,c
  6290   001CE4  EF76  F00E         	goto	u4391
  6291   001CE8  EF78  F00E         	goto	u4390
  6292   001CEC                     u4391:
  6293   001CEC  EF79  F00E         	goto	l4037
  6294   001CF0                     u4390:
  6295   001CF0  8E1D               	bsf	(___fladd@b+3)^0,7,c
  6296   001CF2                     l4037:
  6297   001CF2  C01A  F01A         	movff	___fladd@b,?___fladd
  6298   001CF6  C01B  F01B         	movff	___fladd@b+1,?___fladd+1
  6299   001CFA  C01C  F01C         	movff	___fladd@b+2,?___fladd+2
  6300   001CFE  C01D  F01D         	movff	___fladd@b+3,?___fladd+3
  6301   001D02                     l729:
  6302   001D02  0012               	return		;funcret
  6303   001D04                     __end_of___fladd:
  6304                           	callstack 0
  6305                           
  6306 ;; *************** function ___flneg *****************
  6307 ;; Defined at:
  6308 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\flneg.c"
  6309 ;; Parameters:    Size  Location     Type
  6310 ;;  f1              4    0[COMRAM] unsigned char 
  6311 ;; Auto vars:     Size  Location     Type
  6312 ;;		None
  6313 ;; Return value:  Size  Location     Type
  6314 ;;                  4    0[COMRAM] unsigned char 
  6315 ;; Registers used:
  6316 ;;		wreg, status,2, status,0
  6317 ;; Tracked objects:
  6318 ;;		On entry : 0/0
  6319 ;;		On exit  : 0/0
  6320 ;;		Unchanged: 0/0
  6321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6322 ;;      Params:         4       0       0       0       0       0       0       0       0
  6323 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6324 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6325 ;;      Totals:         4       0       0       0       0       0       0       0       0
  6326 ;;Total ram usage:        4 bytes
  6327 ;; Hardware stack levels used: 1
  6328 ;; This function calls:
  6329 ;;		Nothing
  6330 ;; This function is called by:
  6331 ;;		_efgtoa
  6332 ;; This function uses a non-reentrant model
  6333 ;;
  6334                           
  6335                           	psect	text24
  6336   0037D2                     __ptext24:
  6337                           	callstack 0
  6338   0037D2                     ___flneg:
  6339                           	callstack 25
  6340   0037D2  5001               	movf	___flneg@f1^0,w,c
  6341   0037D4  1002               	iorwf	(___flneg@f1+1)^0,w,c
  6342   0037D6  1003               	iorwf	(___flneg@f1+2)^0,w,c
  6343   0037D8  1004               	iorwf	(___flneg@f1+3)^0,w,c
  6344   0037DA  B4D8               	btfsc	status,2,c
  6345   0037DC  EFF2  F01B         	goto	u4911
  6346   0037E0  EFF4  F01B         	goto	u4910
  6347   0037E4                     u4911:
  6348   0037E4  EFFC  F01B         	goto	l4371
  6349   0037E8                     u4910:
  6350   0037E8  0E00               	movlw	0
  6351   0037EA  1A01               	xorwf	___flneg@f1^0,f,c
  6352   0037EC  0E00               	movlw	0
  6353   0037EE  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  6354   0037F0  0E00               	movlw	0
  6355   0037F2  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  6356   0037F4  0E80               	movlw	128
  6357   0037F6  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  6358   0037F8                     l4371:
  6359   0037F8  C001  F001         	movff	___flneg@f1,?___flneg
  6360   0037FC  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  6361   003800  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  6362   003804  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  6363   003808  0012               	return		;funcret
  6364   00380A                     __end_of___flneg:
  6365                           	callstack 0
  6366                           
  6367 ;; *************** function ___flmul *****************
  6368 ;; Defined at:
  6369 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\sprcmul.c"
  6370 ;; Parameters:    Size  Location     Type
  6371 ;;  b               4    0[COMRAM] unsigned char 
  6372 ;;  a               4    4[COMRAM] unsigned char 
  6373 ;; Auto vars:     Size  Location     Type
  6374 ;;  prod            4   19[COMRAM] struct .
  6375 ;;  grs             4   14[COMRAM] unsigned long 
  6376 ;;  temp            2   23[COMRAM] struct .
  6377 ;;  bexp            1   18[COMRAM] unsigned char 
  6378 ;;  aexp            1   13[COMRAM] unsigned char 
  6379 ;;  sign            1   12[COMRAM] unsigned char 
  6380 ;; Return value:  Size  Location     Type
  6381 ;;                  4    0[COMRAM] unsigned char 
  6382 ;; Registers used:
  6383 ;;		wreg, status,2, status,0, prodl, prodh
  6384 ;; Tracked objects:
  6385 ;;		On entry : 0/0
  6386 ;;		On exit  : 0/0
  6387 ;;		Unchanged: 0/0
  6388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6389 ;;      Params:         8       0       0       0       0       0       0       0       0
  6390 ;;      Locals:        13       0       0       0       0       0       0       0       0
  6391 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6392 ;;      Totals:        25       0       0       0       0       0       0       0       0
  6393 ;;Total ram usage:       25 bytes
  6394 ;; Hardware stack levels used: 1
  6395 ;; This function calls:
  6396 ;;		Nothing
  6397 ;; This function is called by:
  6398 ;;		_termistorin
  6399 ;;		_logf
  6400 ;;		_efgtoa
  6401 ;;		_termistorout
  6402 ;; This function uses a non-reentrant model
  6403 ;;
  6404                           
  6405                           	psect	text25
  6406   001D04                     __ptext25:
  6407                           	callstack 0
  6408   001D04                     ___flmul:
  6409                           	callstack 27
  6410   001D04  5004               	movf	(___flmul@b+3)^0,w,c
  6411   001D06  0B80               	andlw	128
  6412   001D08  6E0D               	movwf	___flmul@sign^0,c
  6413   001D0A  5004               	movf	(___flmul@b+3)^0,w,c
  6414   001D0C  2404               	addwf	(___flmul@b+3)^0,w,c
  6415   001D0E  6E13               	movwf	___flmul@bexp^0,c
  6416   001D10  AE03               	btfss	(___flmul@b+2)^0,7,c
  6417   001D12  EF8D  F00E         	goto	u4641
  6418   001D16  EF8F  F00E         	goto	u4640
  6419   001D1A                     u4641:
  6420   001D1A  EF90  F00E         	goto	l4199
  6421   001D1E                     u4640:
  6422   001D1E  8013               	bsf	___flmul@bexp^0,0,c
  6423   001D20                     l4199:
  6424   001D20  5013               	movf	___flmul@bexp^0,w,c
  6425   001D22  B4D8               	btfsc	status,2,c
  6426   001D24  EF96  F00E         	goto	u4651
  6427   001D28  EF98  F00E         	goto	u4650
  6428   001D2C                     u4651:
  6429   001D2C  EFAB  F00E         	goto	l4207
  6430   001D30                     u4650:
  6431   001D30  2813               	incf	___flmul@bexp^0,w,c
  6432   001D32  A4D8               	btfss	status,2,c
  6433   001D34  EF9E  F00E         	goto	u4661
  6434   001D38  EFA0  F00E         	goto	u4660
  6435   001D3C                     u4661:
  6436   001D3C  EFA8  F00E         	goto	l4205
  6437   001D40                     u4660:
  6438   001D40  0E00               	movlw	0
  6439   001D42  6E01               	movwf	___flmul@b^0,c
  6440   001D44  0E00               	movlw	0
  6441   001D46  6E02               	movwf	(___flmul@b+1)^0,c
  6442   001D48  0E00               	movlw	0
  6443   001D4A  6E03               	movwf	(___flmul@b+2)^0,c
  6444   001D4C  0E00               	movlw	0
  6445   001D4E  6E04               	movwf	(___flmul@b+3)^0,c
  6446   001D50                     l4205:
  6447   001D50  8E03               	bsf	(___flmul@b+2)^0,7,c
  6448   001D52  EFB3  F00E         	goto	l4209
  6449   001D56                     l4207:
  6450   001D56  0E00               	movlw	0
  6451   001D58  6E01               	movwf	___flmul@b^0,c
  6452   001D5A  0E00               	movlw	0
  6453   001D5C  6E02               	movwf	(___flmul@b+1)^0,c
  6454   001D5E  0E00               	movlw	0
  6455   001D60  6E03               	movwf	(___flmul@b+2)^0,c
  6456   001D62  0E00               	movlw	0
  6457   001D64  6E04               	movwf	(___flmul@b+3)^0,c
  6458   001D66                     l4209:
  6459   001D66  5008               	movf	(___flmul@a+3)^0,w,c
  6460   001D68  0B80               	andlw	128
  6461   001D6A  1A0D               	xorwf	___flmul@sign^0,f,c
  6462   001D6C  5008               	movf	(___flmul@a+3)^0,w,c
  6463   001D6E  2408               	addwf	(___flmul@a+3)^0,w,c
  6464   001D70  6E0E               	movwf	___flmul@aexp^0,c
  6465   001D72  AE07               	btfss	(___flmul@a+2)^0,7,c
  6466   001D74  EFBE  F00E         	goto	u4671
  6467   001D78  EFC0  F00E         	goto	u4670
  6468   001D7C                     u4671:
  6469   001D7C  EFC1  F00E         	goto	l4217
  6470   001D80                     u4670:
  6471   001D80  800E               	bsf	___flmul@aexp^0,0,c
  6472   001D82                     l4217:
  6473   001D82  500E               	movf	___flmul@aexp^0,w,c
  6474   001D84  B4D8               	btfsc	status,2,c
  6475   001D86  EFC7  F00E         	goto	u4681
  6476   001D8A  EFC9  F00E         	goto	u4680
  6477   001D8E                     u4681:
  6478   001D8E  EFDC  F00E         	goto	l4225
  6479   001D92                     u4680:
  6480   001D92  280E               	incf	___flmul@aexp^0,w,c
  6481   001D94  A4D8               	btfss	status,2,c
  6482   001D96  EFCF  F00E         	goto	u4691
  6483   001D9A  EFD1  F00E         	goto	u4690
  6484   001D9E                     u4691:
  6485   001D9E  EFD9  F00E         	goto	l4223
  6486   001DA2                     u4690:
  6487   001DA2  0E00               	movlw	0
  6488   001DA4  6E05               	movwf	___flmul@a^0,c
  6489   001DA6  0E00               	movlw	0
  6490   001DA8  6E06               	movwf	(___flmul@a+1)^0,c
  6491   001DAA  0E00               	movlw	0
  6492   001DAC  6E07               	movwf	(___flmul@a+2)^0,c
  6493   001DAE  0E00               	movlw	0
  6494   001DB0  6E08               	movwf	(___flmul@a+3)^0,c
  6495   001DB2                     l4223:
  6496   001DB2  8E07               	bsf	(___flmul@a+2)^0,7,c
  6497   001DB4  EFE4  F00E         	goto	l806
  6498   001DB8                     l4225:
  6499   001DB8  0E00               	movlw	0
  6500   001DBA  6E05               	movwf	___flmul@a^0,c
  6501   001DBC  0E00               	movlw	0
  6502   001DBE  6E06               	movwf	(___flmul@a+1)^0,c
  6503   001DC0  0E00               	movlw	0
  6504   001DC2  6E07               	movwf	(___flmul@a+2)^0,c
  6505   001DC4  0E00               	movlw	0
  6506   001DC6  6E08               	movwf	(___flmul@a+3)^0,c
  6507   001DC8                     l806:
  6508   001DC8  500E               	movf	___flmul@aexp^0,w,c
  6509   001DCA  B4D8               	btfsc	status,2,c
  6510   001DCC  EFEA  F00E         	goto	u4701
  6511   001DD0  EFEC  F00E         	goto	u4700
  6512   001DD4                     u4701:
  6513   001DD4  EFF4  F00E         	goto	l4229
  6514   001DD8                     u4700:
  6515   001DD8  5013               	movf	___flmul@bexp^0,w,c
  6516   001DDA  A4D8               	btfss	status,2,c
  6517   001DDC  EFF2  F00E         	goto	u4711
  6518   001DE0  EFF4  F00E         	goto	u4710
  6519   001DE4                     u4711:
  6520   001DE4  EFFE  F00E         	goto	l4233
  6521   001DE8                     u4710:
  6522   001DE8                     l4229:
  6523   001DE8  0E00               	movlw	0
  6524   001DEA  6E01               	movwf	?___flmul^0,c
  6525   001DEC  0E00               	movlw	0
  6526   001DEE  6E02               	movwf	(?___flmul+1)^0,c
  6527   001DF0  0E00               	movlw	0
  6528   001DF2  6E03               	movwf	(?___flmul+2)^0,c
  6529   001DF4  0E00               	movlw	0
  6530   001DF6  6E04               	movwf	(?___flmul+3)^0,c
  6531   001DF8  EF96  F010         	goto	l810
  6532   001DFC                     l4233:
  6533   001DFC  5007               	movf	(___flmul@a+2)^0,w,c
  6534   001DFE  0201               	mulwf	___flmul@b^0,c
  6535   001E00  CFF3 F018          	movff	prodl,___flmul@temp
  6536   001E04  CFF4 F019          	movff	prodh,___flmul@temp+1
  6537   001E08  5018               	movf	___flmul@temp^0,w,c
  6538   001E0A  6E0F               	movwf	___flmul@grs^0,c
  6539   001E0C  6A10               	clrf	(___flmul@grs+1)^0,c
  6540   001E0E  6A11               	clrf	(___flmul@grs+2)^0,c
  6541   001E10  6A12               	clrf	(___flmul@grs+3)^0,c
  6542   001E12  5019               	movf	(___flmul@temp+1)^0,w,c
  6543   001E14  6E14               	movwf	___flmul@prod^0,c
  6544   001E16  6A15               	clrf	(___flmul@prod+1)^0,c
  6545   001E18  6A16               	clrf	(___flmul@prod+2)^0,c
  6546   001E1A  6A17               	clrf	(___flmul@prod+3)^0,c
  6547   001E1C  5006               	movf	(___flmul@a+1)^0,w,c
  6548   001E1E  0202               	mulwf	(___flmul@b+1)^0,c
  6549   001E20  CFF3 F018          	movff	prodl,___flmul@temp
  6550   001E24  CFF4 F019          	movff	prodh,___flmul@temp+1
  6551   001E28  5018               	movf	___flmul@temp^0,w,c
  6552   001E2A  260F               	addwf	___flmul@grs^0,f,c
  6553   001E2C  0E00               	movlw	0
  6554   001E2E  2210               	addwfc	(___flmul@grs+1)^0,f,c
  6555   001E30  2211               	addwfc	(___flmul@grs+2)^0,f,c
  6556   001E32  2212               	addwfc	(___flmul@grs+3)^0,f,c
  6557   001E34  5019               	movf	(___flmul@temp+1)^0,w,c
  6558   001E36  2614               	addwf	___flmul@prod^0,f,c
  6559   001E38  0E00               	movlw	0
  6560   001E3A  2215               	addwfc	(___flmul@prod+1)^0,f,c
  6561   001E3C  2216               	addwfc	(___flmul@prod+2)^0,f,c
  6562   001E3E  2217               	addwfc	(___flmul@prod+3)^0,f,c
  6563   001E40  5005               	movf	___flmul@a^0,w,c
  6564   001E42  0203               	mulwf	(___flmul@b+2)^0,c
  6565   001E44  CFF3 F018          	movff	prodl,___flmul@temp
  6566   001E48  CFF4 F019          	movff	prodh,___flmul@temp+1
  6567   001E4C  5018               	movf	___flmul@temp^0,w,c
  6568   001E4E  260F               	addwf	___flmul@grs^0,f,c
  6569   001E50  0E00               	movlw	0
  6570   001E52  2210               	addwfc	(___flmul@grs+1)^0,f,c
  6571   001E54  2211               	addwfc	(___flmul@grs+2)^0,f,c
  6572   001E56  2212               	addwfc	(___flmul@grs+3)^0,f,c
  6573   001E58  5019               	movf	(___flmul@temp+1)^0,w,c
  6574   001E5A  2614               	addwf	___flmul@prod^0,f,c
  6575   001E5C  0E00               	movlw	0
  6576   001E5E  2215               	addwfc	(___flmul@prod+1)^0,f,c
  6577   001E60  2216               	addwfc	(___flmul@prod+2)^0,f,c
  6578   001E62  2217               	addwfc	(___flmul@prod+3)^0,f,c
  6579   001E64  C011  F012         	movff	___flmul@grs+2,___flmul@grs+3
  6580   001E68  C010  F011         	movff	___flmul@grs+1,___flmul@grs+2
  6581   001E6C  C00F  F010         	movff	___flmul@grs,___flmul@grs+1
  6582   001E70  6A0F               	clrf	___flmul@grs^0,c
  6583   001E72  5005               	movf	___flmul@a^0,w,c
  6584   001E74  0202               	mulwf	(___flmul@b+1)^0,c
  6585   001E76  CFF3 F018          	movff	prodl,___flmul@temp
  6586   001E7A  CFF4 F019          	movff	prodh,___flmul@temp+1
  6587   001E7E  5018               	movf	___flmul@temp^0,w,c
  6588   001E80  260F               	addwf	___flmul@grs^0,f,c
  6589   001E82  5019               	movf	(___flmul@temp+1)^0,w,c
  6590   001E84  2210               	addwfc	(___flmul@grs+1)^0,f,c
  6591   001E86  0E00               	movlw	0
  6592   001E88  2211               	addwfc	(___flmul@grs+2)^0,f,c
  6593   001E8A  0E00               	movlw	0
  6594   001E8C  2212               	addwfc	(___flmul@grs+3)^0,f,c
  6595   001E8E  5006               	movf	(___flmul@a+1)^0,w,c
  6596   001E90  0201               	mulwf	___flmul@b^0,c
  6597   001E92  CFF3 F018          	movff	prodl,___flmul@temp
  6598   001E96  CFF4 F019          	movff	prodh,___flmul@temp+1
  6599   001E9A  5018               	movf	___flmul@temp^0,w,c
  6600   001E9C  260F               	addwf	___flmul@grs^0,f,c
  6601   001E9E  5019               	movf	(___flmul@temp+1)^0,w,c
  6602   001EA0  2210               	addwfc	(___flmul@grs+1)^0,f,c
  6603   001EA2  0E00               	movlw	0
  6604   001EA4  2211               	addwfc	(___flmul@grs+2)^0,f,c
  6605   001EA6  0E00               	movlw	0
  6606   001EA8  2212               	addwfc	(___flmul@grs+3)^0,f,c
  6607   001EAA  C011  F012         	movff	___flmul@grs+2,___flmul@grs+3
  6608   001EAE  C010  F011         	movff	___flmul@grs+1,___flmul@grs+2
  6609   001EB2  C00F  F010         	movff	___flmul@grs,___flmul@grs+1
  6610   001EB6  6A0F               	clrf	___flmul@grs^0,c
  6611   001EB8  5005               	movf	___flmul@a^0,w,c
  6612   001EBA  0201               	mulwf	___flmul@b^0,c
  6613   001EBC  CFF3 F018          	movff	prodl,___flmul@temp
  6614   001EC0  CFF4 F019          	movff	prodh,___flmul@temp+1
  6615   001EC4  5018               	movf	___flmul@temp^0,w,c
  6616   001EC6  260F               	addwf	___flmul@grs^0,f,c
  6617   001EC8  5019               	movf	(___flmul@temp+1)^0,w,c
  6618   001ECA  2210               	addwfc	(___flmul@grs+1)^0,f,c
  6619   001ECC  0E00               	movlw	0
  6620   001ECE  2211               	addwfc	(___flmul@grs+2)^0,f,c
  6621   001ED0  0E00               	movlw	0
  6622   001ED2  2212               	addwfc	(___flmul@grs+3)^0,f,c
  6623   001ED4  5007               	movf	(___flmul@a+2)^0,w,c
  6624   001ED6  0202               	mulwf	(___flmul@b+1)^0,c
  6625   001ED8  CFF3 F018          	movff	prodl,___flmul@temp
  6626   001EDC  CFF4 F019          	movff	prodh,___flmul@temp+1
  6627   001EE0  5018               	movf	___flmul@temp^0,w,c
  6628   001EE2  2614               	addwf	___flmul@prod^0,f,c
  6629   001EE4  5019               	movf	(___flmul@temp+1)^0,w,c
  6630   001EE6  2215               	addwfc	(___flmul@prod+1)^0,f,c
  6631   001EE8  0E00               	movlw	0
  6632   001EEA  2216               	addwfc	(___flmul@prod+2)^0,f,c
  6633   001EEC  0E00               	movlw	0
  6634   001EEE  2217               	addwfc	(___flmul@prod+3)^0,f,c
  6635   001EF0  5006               	movf	(___flmul@a+1)^0,w,c
  6636   001EF2  0203               	mulwf	(___flmul@b+2)^0,c
  6637   001EF4  CFF3 F018          	movff	prodl,___flmul@temp
  6638   001EF8  CFF4 F019          	movff	prodh,___flmul@temp+1
  6639   001EFC  5018               	movf	___flmul@temp^0,w,c
  6640   001EFE  2614               	addwf	___flmul@prod^0,f,c
  6641   001F00  5019               	movf	(___flmul@temp+1)^0,w,c
  6642   001F02  2215               	addwfc	(___flmul@prod+1)^0,f,c
  6643   001F04  0E00               	movlw	0
  6644   001F06  2216               	addwfc	(___flmul@prod+2)^0,f,c
  6645   001F08  0E00               	movlw	0
  6646   001F0A  2217               	addwfc	(___flmul@prod+3)^0,f,c
  6647   001F0C  5007               	movf	(___flmul@a+2)^0,w,c
  6648   001F0E  0203               	mulwf	(___flmul@b+2)^0,c
  6649   001F10  CFF3 F018          	movff	prodl,___flmul@temp
  6650   001F14  CFF4 F019          	movff	prodh,___flmul@temp+1
  6651   001F18  5018               	movf	___flmul@temp^0,w,c
  6652   001F1A  6E09               	movwf	??___flmul^0,c
  6653   001F1C  5019               	movf	(___flmul@temp+1)^0,w,c
  6654   001F1E  6E0A               	movwf	(??___flmul+1)^0,c
  6655   001F20  6A0B               	clrf	(??___flmul+2)^0,c
  6656   001F22  6A0C               	clrf	(??___flmul+3)^0,c
  6657   001F24  C00B  F00C         	movff	??___flmul+2,??___flmul+3
  6658   001F28  C00A  F00B         	movff	??___flmul+1,??___flmul+2
  6659   001F2C  C009  F00A         	movff	??___flmul,??___flmul+1
  6660   001F30  6A09               	clrf	??___flmul^0,c
  6661   001F32  5009               	movf	??___flmul^0,w,c
  6662   001F34  2614               	addwf	___flmul@prod^0,f,c
  6663   001F36  500A               	movf	(??___flmul+1)^0,w,c
  6664   001F38  2215               	addwfc	(___flmul@prod+1)^0,f,c
  6665   001F3A  500B               	movf	(??___flmul+2)^0,w,c
  6666   001F3C  2216               	addwfc	(___flmul@prod+2)^0,f,c
  6667   001F3E  500C               	movf	(??___flmul+3)^0,w,c
  6668   001F40  2217               	addwfc	(___flmul@prod+3)^0,f,c
  6669   001F42  C00F  F009         	movff	___flmul@grs,??___flmul
  6670   001F46  C010  F00A         	movff	___flmul@grs+1,??___flmul+1
  6671   001F4A  C011  F00B         	movff	___flmul@grs+2,??___flmul+2
  6672   001F4E  C012  F00C         	movff	___flmul@grs+3,??___flmul+3
  6673   001F52  0E19               	movlw	25
  6674   001F54  EFB1  F00F         	goto	u4720
  6675   001F58                     u4725:
  6676   001F58  90D8               	bcf	status,0,c
  6677   001F5A  320C               	rrcf	(??___flmul+3)^0,f,c
  6678   001F5C  320B               	rrcf	(??___flmul+2)^0,f,c
  6679   001F5E  320A               	rrcf	(??___flmul+1)^0,f,c
  6680   001F60  3209               	rrcf	??___flmul^0,f,c
  6681   001F62                     u4720:
  6682   001F62  2EE8               	decfsz	wreg,f,c
  6683   001F64  EFAC  F00F         	goto	u4725
  6684   001F68  5009               	movf	??___flmul^0,w,c
  6685   001F6A  2614               	addwf	___flmul@prod^0,f,c
  6686   001F6C  500A               	movf	(??___flmul+1)^0,w,c
  6687   001F6E  2215               	addwfc	(___flmul@prod+1)^0,f,c
  6688   001F70  500B               	movf	(??___flmul+2)^0,w,c
  6689   001F72  2216               	addwfc	(___flmul@prod+2)^0,f,c
  6690   001F74  500C               	movf	(??___flmul+3)^0,w,c
  6691   001F76  2217               	addwfc	(___flmul@prod+3)^0,f,c
  6692   001F78  C011  F012         	movff	___flmul@grs+2,___flmul@grs+3
  6693   001F7C  C010  F011         	movff	___flmul@grs+1,___flmul@grs+2
  6694   001F80  C00F  F010         	movff	___flmul@grs,___flmul@grs+1
  6695   001F84  6A0F               	clrf	___flmul@grs^0,c
  6696   001F86  500E               	movf	___flmul@aexp^0,w,c
  6697   001F88  C013  F009         	movff	___flmul@bexp,??___flmul
  6698   001F8C  6A0A               	clrf	(??___flmul+1)^0,c
  6699   001F8E  2609               	addwf	??___flmul^0,f,c
  6700   001F90  0E00               	movlw	0
  6701   001F92  220A               	addwfc	(??___flmul+1)^0,f,c
  6702   001F94  0E82               	movlw	130
  6703   001F96  2409               	addwf	??___flmul^0,w,c
  6704   001F98  6E18               	movwf	___flmul@temp^0,c
  6705   001F9A  0EFF               	movlw	255
  6706   001F9C  200A               	addwfc	(??___flmul+1)^0,w,c
  6707   001F9E  6E19               	movwf	(___flmul@temp+1)^0,c
  6708   001FA0  EFE7  F00F         	goto	l4281
  6709   001FA4                     l4275:
  6710   001FA4  90D8               	bcf	status,0,c
  6711   001FA6  3614               	rlcf	___flmul@prod^0,f,c
  6712   001FA8  3615               	rlcf	(___flmul@prod+1)^0,f,c
  6713   001FAA  3616               	rlcf	(___flmul@prod+2)^0,f,c
  6714   001FAC  3617               	rlcf	(___flmul@prod+3)^0,f,c
  6715   001FAE  AE12               	btfss	(___flmul@grs+3)^0,7,c
  6716   001FB0  EFDC  F00F         	goto	u4731
  6717   001FB4  EFDE  F00F         	goto	u4730
  6718   001FB8                     u4731:
  6719   001FB8  EFDF  F00F         	goto	l813
  6720   001FBC                     u4730:
  6721   001FBC  8014               	bsf	___flmul@prod^0,0,c
  6722   001FBE                     l813:
  6723   001FBE  90D8               	bcf	status,0,c
  6724   001FC0  360F               	rlcf	___flmul@grs^0,f,c
  6725   001FC2  3610               	rlcf	(___flmul@grs+1)^0,f,c
  6726   001FC4  3611               	rlcf	(___flmul@grs+2)^0,f,c
  6727   001FC6  3612               	rlcf	(___flmul@grs+3)^0,f,c
  6728   001FC8  0618               	decf	___flmul@temp^0,f,c
  6729   001FCA  A0D8               	btfss	status,0,c
  6730   001FCC  0619               	decf	(___flmul@temp+1)^0,f,c
  6731   001FCE                     l4281:
  6732   001FCE  AE16               	btfss	(___flmul@prod+2)^0,7,c
  6733   001FD0  EFEC  F00F         	goto	u4741
  6734   001FD4  EFEE  F00F         	goto	u4740
  6735   001FD8                     u4741:
  6736   001FD8  EFD2  F00F         	goto	l4275
  6737   001FDC                     u4740:
  6738   001FDC  0E00               	movlw	0
  6739   001FDE  6E0E               	movwf	___flmul@aexp^0,c
  6740   001FE0  AE12               	btfss	(___flmul@grs+3)^0,7,c
  6741   001FE2  EFF5  F00F         	goto	u4751
  6742   001FE6  EFF7  F00F         	goto	u4750
  6743   001FEA                     u4751:
  6744   001FEA  EF1B  F010         	goto	l815
  6745   001FEE                     u4750:
  6746   001FEE  0EFF               	movlw	255
  6747   001FF0  140F               	andwf	___flmul@grs^0,w,c
  6748   001FF2  6E09               	movwf	??___flmul^0,c
  6749   001FF4  0EFF               	movlw	255
  6750   001FF6  1410               	andwf	(___flmul@grs+1)^0,w,c
  6751   001FF8  6E0A               	movwf	(??___flmul+1)^0,c
  6752   001FFA  0EFF               	movlw	255
  6753   001FFC  1411               	andwf	(___flmul@grs+2)^0,w,c
  6754   001FFE  6E0B               	movwf	(??___flmul+2)^0,c
  6755   002000  0E7F               	movlw	127
  6756   002002  1412               	andwf	(___flmul@grs+3)^0,w,c
  6757   002004  6E0C               	movwf	(??___flmul+3)^0,c
  6758   002006  5009               	movf	??___flmul^0,w,c
  6759   002008  100A               	iorwf	(??___flmul+1)^0,w,c
  6760   00200A  100B               	iorwf	(??___flmul+2)^0,w,c
  6761   00200C  100C               	iorwf	(??___flmul+3)^0,w,c
  6762   00200E  B4D8               	btfsc	status,2,c
  6763   002010  EF0C  F010         	goto	u4761
  6764   002014  EF0E  F010         	goto	u4760
  6765   002018                     u4761:
  6766   002018  EF12  F010         	goto	l816
  6767   00201C                     u4760:
  6768   00201C                     l4289:
  6769   00201C  0E01               	movlw	1
  6770   00201E  6E0E               	movwf	___flmul@aexp^0,c
  6771   002020  EF1B  F010         	goto	l815
  6772   002024                     l816:
  6773   002024  A014               	btfss	___flmul@prod^0,0,c
  6774   002026  EF17  F010         	goto	u4771
  6775   00202A  EF19  F010         	goto	u4770
  6776   00202E                     u4771:
  6777   00202E  EF1B  F010         	goto	l815
  6778   002032                     u4770:
  6779   002032  EF0E  F010         	goto	l4289
  6780   002036                     l815:
  6781   002036  500E               	movf	___flmul@aexp^0,w,c
  6782   002038  B4D8               	btfsc	status,2,c
  6783   00203A  EF21  F010         	goto	u4781
  6784   00203E  EF23  F010         	goto	u4780
  6785   002042                     u4781:
  6786   002042  EF47  F010         	goto	l4301
  6787   002046                     u4780:
  6788   002046  0E01               	movlw	1
  6789   002048  2614               	addwf	___flmul@prod^0,f,c
  6790   00204A  0E00               	movlw	0
  6791   00204C  2215               	addwfc	(___flmul@prod+1)^0,f,c
  6792   00204E  2216               	addwfc	(___flmul@prod+2)^0,f,c
  6793   002050  2217               	addwfc	(___flmul@prod+3)^0,f,c
  6794   002052  A017               	btfss	(___flmul@prod+3)^0,0,c
  6795   002054  EF2E  F010         	goto	u4791
  6796   002058  EF30  F010         	goto	u4790
  6797   00205C                     u4791:
  6798   00205C  EF47  F010         	goto	l4301
  6799   002060                     u4790:
  6800   002060  C014  F009         	movff	___flmul@prod,??___flmul
  6801   002064  C015  F00A         	movff	___flmul@prod+1,??___flmul+1
  6802   002068  C016  F00B         	movff	___flmul@prod+2,??___flmul+2
  6803   00206C  C017  F00C         	movff	___flmul@prod+3,??___flmul+3
  6804   002070  340C               	rlcf	(??___flmul+3)^0,w,c
  6805   002072  320C               	rrcf	(??___flmul+3)^0,f,c
  6806   002074  320B               	rrcf	(??___flmul+2)^0,f,c
  6807   002076  320A               	rrcf	(??___flmul+1)^0,f,c
  6808   002078  3209               	rrcf	??___flmul^0,f,c
  6809   00207A  C009  F014         	movff	??___flmul,___flmul@prod
  6810   00207E  C00A  F015         	movff	??___flmul+1,___flmul@prod+1
  6811   002082  C00B  F016         	movff	??___flmul+2,___flmul@prod+2
  6812   002086  C00C  F017         	movff	??___flmul+3,___flmul@prod+3
  6813   00208A  4A18               	infsnz	___flmul@temp^0,f,c
  6814   00208C  2A19               	incf	(___flmul@temp+1)^0,f,c
  6815   00208E                     l4301:
  6816   00208E  BE19               	btfsc	(___flmul@temp+1)^0,7,c
  6817   002090  EF52  F010         	goto	u4801
  6818   002094  5019               	movf	(___flmul@temp+1)^0,w,c
  6819   002096  E108               	bnz	u4800
  6820   002098  2818               	incf	___flmul@temp^0,w,c
  6821   00209A  A0D8               	btfss	status,0,c
  6822   00209C  EF52  F010         	goto	u4801
  6823   0020A0  EF54  F010         	goto	u4800
  6824   0020A4                     u4801:
  6825   0020A4  EF5E  F010         	goto	l4305
  6826   0020A8                     u4800:
  6827   0020A8  0E00               	movlw	0
  6828   0020AA  6E14               	movwf	___flmul@prod^0,c
  6829   0020AC  0E00               	movlw	0
  6830   0020AE  6E15               	movwf	(___flmul@prod+1)^0,c
  6831   0020B0  0E80               	movlw	128
  6832   0020B2  6E16               	movwf	(___flmul@prod+2)^0,c
  6833   0020B4  0E7F               	movlw	127
  6834   0020B6  6E17               	movwf	(___flmul@prod+3)^0,c
  6835   0020B8  EF8C  F010         	goto	l4317
  6836   0020BC                     l4305:
  6837   0020BC  BE19               	btfsc	(___flmul@temp+1)^0,7,c
  6838   0020BE  EF6B  F010         	goto	u4810
  6839   0020C2  5019               	movf	(___flmul@temp+1)^0,w,c
  6840   0020C4  E106               	bnz	u4811
  6841   0020C6  0418               	decf	___flmul@temp^0,w,c
  6842   0020C8  B0D8               	btfsc	status,0,c
  6843   0020CA  EF69  F010         	goto	u4811
  6844   0020CE  EF6B  F010         	goto	u4810
  6845   0020D2                     u4811:
  6846   0020D2  EF77  F010         	goto	l823
  6847   0020D6                     u4810:
  6848   0020D6  0E00               	movlw	0
  6849   0020D8  6E14               	movwf	___flmul@prod^0,c
  6850   0020DA  0E00               	movlw	0
  6851   0020DC  6E15               	movwf	(___flmul@prod+1)^0,c
  6852   0020DE  0E00               	movlw	0
  6853   0020E0  6E16               	movwf	(___flmul@prod+2)^0,c
  6854   0020E2  0E00               	movlw	0
  6855   0020E4  6E17               	movwf	(___flmul@prod+3)^0,c
  6856   0020E6  0E00               	movlw	0
  6857   0020E8  6E0D               	movwf	___flmul@sign^0,c
  6858   0020EA  EF8C  F010         	goto	l4317
  6859   0020EE                     l823:
  6860   0020EE  C018  F013         	movff	___flmul@temp,___flmul@bexp
  6861   0020F2  0EFF               	movlw	255
  6862   0020F4  1614               	andwf	___flmul@prod^0,f,c
  6863   0020F6  0EFF               	movlw	255
  6864   0020F8  1615               	andwf	(___flmul@prod+1)^0,f,c
  6865   0020FA  0E7F               	movlw	127
  6866   0020FC  1616               	andwf	(___flmul@prod+2)^0,f,c
  6867   0020FE  0E00               	movlw	0
  6868   002100  1617               	andwf	(___flmul@prod+3)^0,f,c
  6869   002102  A013               	btfss	___flmul@bexp^0,0,c
  6870   002104  EF86  F010         	goto	u4821
  6871   002108  EF88  F010         	goto	u4820
  6872   00210C                     u4821:
  6873   00210C  EF89  F010         	goto	l4315
  6874   002110                     u4820:
  6875   002110  8E16               	bsf	(___flmul@prod+2)^0,7,c
  6876   002112                     l4315:
  6877   002112  90D8               	bcf	status,0,c
  6878   002114  3013               	rrcf	___flmul@bexp^0,w,c
  6879   002116  6E17               	movwf	(___flmul@prod+3)^0,c
  6880   002118                     l4317:
  6881   002118  500D               	movf	___flmul@sign^0,w,c
  6882   00211A  1217               	iorwf	(___flmul@prod+3)^0,f,c
  6883   00211C  C014  F001         	movff	___flmul@prod,?___flmul
  6884   002120  C015  F002         	movff	___flmul@prod+1,?___flmul+1
  6885   002124  C016  F003         	movff	___flmul@prod+2,?___flmul+2
  6886   002128  C017  F004         	movff	___flmul@prod+3,?___flmul+3
  6887   00212C                     l810:
  6888   00212C  0012               	return		;funcret
  6889   00212E                     __end_of___flmul:
  6890                           	callstack 0
  6891                           
  6892 ;; *************** function ___flge *****************
  6893 ;; Defined at:
  6894 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\flge.c"
  6895 ;; Parameters:    Size  Location     Type
  6896 ;;  ff1             4   25[COMRAM] unsigned char 
  6897 ;;  ff2             4   29[COMRAM] unsigned char 
  6898 ;; Auto vars:     Size  Location     Type
  6899 ;;		None
  6900 ;; Return value:  Size  Location     Type
  6901 ;;		None               void
  6902 ;; Registers used:
  6903 ;;		wreg, status,2, status,0
  6904 ;; Tracked objects:
  6905 ;;		On entry : 0/0
  6906 ;;		On exit  : 0/0
  6907 ;;		Unchanged: 0/0
  6908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6909 ;;      Params:         8       0       0       0       0       0       0       0       0
  6910 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6911 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6912 ;;      Totals:        12       0       0       0       0       0       0       0       0
  6913 ;;Total ram usage:       12 bytes
  6914 ;; Hardware stack levels used: 1
  6915 ;; This function calls:
  6916 ;;		Nothing
  6917 ;; This function is called by:
  6918 ;;		_efgtoa
  6919 ;; This function uses a non-reentrant model
  6920 ;;
  6921                           
  6922                           	psect	text26
  6923   002E8A                     __ptext26:
  6924                           	callstack 0
  6925   002E8A                     ___flge:
  6926                           	callstack 25
  6927   002E8A  0E00               	movlw	0
  6928   002E8C  141A               	andwf	___flge@ff1^0,w,c
  6929   002E8E  6E22               	movwf	??___flge^0,c
  6930   002E90  0E00               	movlw	0
  6931   002E92  141B               	andwf	(___flge@ff1+1)^0,w,c
  6932   002E94  6E23               	movwf	(??___flge+1)^0,c
  6933   002E96  0E80               	movlw	128
  6934   002E98  141C               	andwf	(___flge@ff1+2)^0,w,c
  6935   002E9A  6E24               	movwf	(??___flge+2)^0,c
  6936   002E9C  0E7F               	movlw	127
  6937   002E9E  141D               	andwf	(___flge@ff1+3)^0,w,c
  6938   002EA0  6E25               	movwf	(??___flge+3)^0,c
  6939   002EA2  5022               	movf	??___flge^0,w,c
  6940   002EA4  1023               	iorwf	(??___flge+1)^0,w,c
  6941   002EA6  1024               	iorwf	(??___flge+2)^0,w,c
  6942   002EA8  1025               	iorwf	(??___flge+3)^0,w,c
  6943   002EAA  A4D8               	btfss	status,2,c
  6944   002EAC  EF5A  F017         	goto	u4861
  6945   002EB0  EF5C  F017         	goto	u4860
  6946   002EB4                     u4861:
  6947   002EB4  EF64  F017         	goto	l4349
  6948   002EB8                     u4860:
  6949   002EB8  0E00               	movlw	0
  6950   002EBA  6E1A               	movwf	___flge@ff1^0,c
  6951   002EBC  0E00               	movlw	0
  6952   002EBE  6E1B               	movwf	(___flge@ff1+1)^0,c
  6953   002EC0  0E00               	movlw	0
  6954   002EC2  6E1C               	movwf	(___flge@ff1+2)^0,c
  6955   002EC4  0E00               	movlw	0
  6956   002EC6  6E1D               	movwf	(___flge@ff1+3)^0,c
  6957   002EC8                     l4349:
  6958   002EC8  0E00               	movlw	0
  6959   002ECA  141E               	andwf	___flge@ff2^0,w,c
  6960   002ECC  6E22               	movwf	??___flge^0,c
  6961   002ECE  0E00               	movlw	0
  6962   002ED0  141F               	andwf	(___flge@ff2+1)^0,w,c
  6963   002ED2  6E23               	movwf	(??___flge+1)^0,c
  6964   002ED4  0E80               	movlw	128
  6965   002ED6  1420               	andwf	(___flge@ff2+2)^0,w,c
  6966   002ED8  6E24               	movwf	(??___flge+2)^0,c
  6967   002EDA  0E7F               	movlw	127
  6968   002EDC  1421               	andwf	(___flge@ff2+3)^0,w,c
  6969   002EDE  6E25               	movwf	(??___flge+3)^0,c
  6970   002EE0  5022               	movf	??___flge^0,w,c
  6971   002EE2  1023               	iorwf	(??___flge+1)^0,w,c
  6972   002EE4  1024               	iorwf	(??___flge+2)^0,w,c
  6973   002EE6  1025               	iorwf	(??___flge+3)^0,w,c
  6974   002EE8  A4D8               	btfss	status,2,c
  6975   002EEA  EF79  F017         	goto	u4871
  6976   002EEE  EF7B  F017         	goto	u4870
  6977   002EF2                     u4871:
  6978   002EF2  EF83  F017         	goto	l4353
  6979   002EF6                     u4870:
  6980   002EF6  0E00               	movlw	0
  6981   002EF8  6E1E               	movwf	___flge@ff2^0,c
  6982   002EFA  0E00               	movlw	0
  6983   002EFC  6E1F               	movwf	(___flge@ff2+1)^0,c
  6984   002EFE  0E00               	movlw	0
  6985   002F00  6E20               	movwf	(___flge@ff2+2)^0,c
  6986   002F02  0E00               	movlw	0
  6987   002F04  6E21               	movwf	(___flge@ff2+3)^0,c
  6988   002F06                     l4353:
  6989   002F06  AE1D               	btfss	(___flge@ff1+3)^0,7,c
  6990   002F08  EF88  F017         	goto	u4881
  6991   002F0C  EF8A  F017         	goto	u4880
  6992   002F10                     u4881:
  6993   002F10  EF93  F017         	goto	l4357
  6994   002F14                     u4880:
  6995   002F14  6C1A               	negf	___flge@ff1^0,c
  6996   002F16  1E1B               	comf	(___flge@ff1+1)^0,f,c
  6997   002F18  B0D8               	btfsc	status,0,c
  6998   002F1A  2A1B               	incf	(___flge@ff1+1)^0,f,c
  6999   002F1C  1E1C               	comf	(___flge@ff1+2)^0,f,c
  7000   002F1E  B0D8               	btfsc	status,0,c
  7001   002F20  2A1C               	incf	(___flge@ff1+2)^0,f,c
  7002   002F22  0E80               	movlw	128
  7003   002F24  561D               	subfwb	(___flge@ff1+3)^0,f,c
  7004   002F26                     l4357:
  7005   002F26  AE21               	btfss	(___flge@ff2+3)^0,7,c
  7006   002F28  EF98  F017         	goto	u4891
  7007   002F2C  EF9A  F017         	goto	u4890
  7008   002F30                     u4891:
  7009   002F30  EFA3  F017         	goto	l457
  7010   002F34                     u4890:
  7011   002F34  6C1E               	negf	___flge@ff2^0,c
  7012   002F36  1E1F               	comf	(___flge@ff2+1)^0,f,c
  7013   002F38  B0D8               	btfsc	status,0,c
  7014   002F3A  2A1F               	incf	(___flge@ff2+1)^0,f,c
  7015   002F3C  1E20               	comf	(___flge@ff2+2)^0,f,c
  7016   002F3E  B0D8               	btfsc	status,0,c
  7017   002F40  2A20               	incf	(___flge@ff2+2)^0,f,c
  7018   002F42  0E80               	movlw	128
  7019   002F44  5621               	subfwb	(___flge@ff2+3)^0,f,c
  7020   002F46                     l457:
  7021   002F46  0E00               	movlw	0
  7022   002F48  1A1A               	xorwf	___flge@ff1^0,f,c
  7023   002F4A  0E00               	movlw	0
  7024   002F4C  1A1B               	xorwf	(___flge@ff1+1)^0,f,c
  7025   002F4E  0E00               	movlw	0
  7026   002F50  1A1C               	xorwf	(___flge@ff1+2)^0,f,c
  7027   002F52  0E80               	movlw	128
  7028   002F54  1A1D               	xorwf	(___flge@ff1+3)^0,f,c
  7029   002F56  0E00               	movlw	0
  7030   002F58  1A1E               	xorwf	___flge@ff2^0,f,c
  7031   002F5A  0E00               	movlw	0
  7032   002F5C  1A1F               	xorwf	(___flge@ff2+1)^0,f,c
  7033   002F5E  0E00               	movlw	0
  7034   002F60  1A20               	xorwf	(___flge@ff2+2)^0,f,c
  7035   002F62  0E80               	movlw	128
  7036   002F64  1A21               	xorwf	(___flge@ff2+3)^0,f,c
  7037   002F66  501E               	movf	___flge@ff2^0,w,c
  7038   002F68  5C1A               	subwf	___flge@ff1^0,w,c
  7039   002F6A  501F               	movf	(___flge@ff2+1)^0,w,c
  7040   002F6C  581B               	subwfb	(___flge@ff1+1)^0,w,c
  7041   002F6E  5020               	movf	(___flge@ff2+2)^0,w,c
  7042   002F70  581C               	subwfb	(___flge@ff1+2)^0,w,c
  7043   002F72  5021               	movf	(___flge@ff2+3)^0,w,c
  7044   002F74  581D               	subwfb	(___flge@ff1+3)^0,w,c
  7045   002F76  B0D8               	btfsc	status,0,c
  7046   002F78  EFC0  F017         	goto	u4901
  7047   002F7C  EFC2  F017         	goto	u4900
  7048   002F80                     u4901:
  7049   002F80  EFC5  F017         	goto	l4363
  7050   002F84                     u4900:
  7051   002F84  90D8               	bcf	status,0,c
  7052   002F86  EFC6  F017         	goto	l462
  7053   002F8A                     l4363:
  7054   002F8A  80D8               	bsf	status,0,c
  7055   002F8C                     l462:
  7056   002F8C  0012               	return		;funcret
  7057   002F8E                     __end_of___flge:
  7058                           	callstack 0
  7059                           
  7060 ;; *************** function ___fleq *****************
  7061 ;; Defined at:
  7062 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\fleq.c"
  7063 ;; Parameters:    Size  Location     Type
  7064 ;;  ff1             4    0[COMRAM] unsigned char 
  7065 ;;  ff2             4    4[COMRAM] unsigned char 
  7066 ;; Auto vars:     Size  Location     Type
  7067 ;;		None
  7068 ;; Return value:  Size  Location     Type
  7069 ;;		None               void
  7070 ;; Registers used:
  7071 ;;		wreg, status,2, status,0
  7072 ;; Tracked objects:
  7073 ;;		On entry : 0/0
  7074 ;;		On exit  : 0/0
  7075 ;;		Unchanged: 0/0
  7076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7077 ;;      Params:         8       0       0       0       0       0       0       0       0
  7078 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7079 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7080 ;;      Totals:        12       0       0       0       0       0       0       0       0
  7081 ;;Total ram usage:       12 bytes
  7082 ;; Hardware stack levels used: 1
  7083 ;; This function calls:
  7084 ;;		Nothing
  7085 ;; This function is called by:
  7086 ;;		_efgtoa
  7087 ;; This function uses a non-reentrant model
  7088 ;;
  7089                           
  7090                           	psect	text27
  7091   003300                     __ptext27:
  7092                           	callstack 0
  7093   003300                     ___fleq:
  7094                           	callstack 25
  7095   003300  0E00               	movlw	0
  7096   003302  1401               	andwf	___fleq@ff1^0,w,c
  7097   003304  6E09               	movwf	??___fleq^0,c
  7098   003306  0E00               	movlw	0
  7099   003308  1402               	andwf	(___fleq@ff1+1)^0,w,c
  7100   00330A  6E0A               	movwf	(??___fleq+1)^0,c
  7101   00330C  0E80               	movlw	128
  7102   00330E  1403               	andwf	(___fleq@ff1+2)^0,w,c
  7103   003310  6E0B               	movwf	(??___fleq+2)^0,c
  7104   003312  0E7F               	movlw	127
  7105   003314  1404               	andwf	(___fleq@ff1+3)^0,w,c
  7106   003316  6E0C               	movwf	(??___fleq+3)^0,c
  7107   003318  5009               	movf	??___fleq^0,w,c
  7108   00331A  100A               	iorwf	(??___fleq+1)^0,w,c
  7109   00331C  100B               	iorwf	(??___fleq+2)^0,w,c
  7110   00331E  100C               	iorwf	(??___fleq+3)^0,w,c
  7111   003320  A4D8               	btfss	status,2,c
  7112   003322  EF95  F019         	goto	u4831
  7113   003326  EF97  F019         	goto	u4830
  7114   00332A                     u4831:
  7115   00332A  EF9F  F019         	goto	l4333
  7116   00332E                     u4830:
  7117   00332E  0E00               	movlw	0
  7118   003330  6E01               	movwf	___fleq@ff1^0,c
  7119   003332  0E00               	movlw	0
  7120   003334  6E02               	movwf	(___fleq@ff1+1)^0,c
  7121   003336  0E00               	movlw	0
  7122   003338  6E03               	movwf	(___fleq@ff1+2)^0,c
  7123   00333A  0E00               	movlw	0
  7124   00333C  6E04               	movwf	(___fleq@ff1+3)^0,c
  7125   00333E                     l4333:
  7126   00333E  0E00               	movlw	0
  7127   003340  1405               	andwf	___fleq@ff2^0,w,c
  7128   003342  6E09               	movwf	??___fleq^0,c
  7129   003344  0E00               	movlw	0
  7130   003346  1406               	andwf	(___fleq@ff2+1)^0,w,c
  7131   003348  6E0A               	movwf	(??___fleq+1)^0,c
  7132   00334A  0E80               	movlw	128
  7133   00334C  1407               	andwf	(___fleq@ff2+2)^0,w,c
  7134   00334E  6E0B               	movwf	(??___fleq+2)^0,c
  7135   003350  0E7F               	movlw	127
  7136   003352  1408               	andwf	(___fleq@ff2+3)^0,w,c
  7137   003354  6E0C               	movwf	(??___fleq+3)^0,c
  7138   003356  5009               	movf	??___fleq^0,w,c
  7139   003358  100A               	iorwf	(??___fleq+1)^0,w,c
  7140   00335A  100B               	iorwf	(??___fleq+2)^0,w,c
  7141   00335C  100C               	iorwf	(??___fleq+3)^0,w,c
  7142   00335E  A4D8               	btfss	status,2,c
  7143   003360  EFB4  F019         	goto	u4841
  7144   003364  EFB6  F019         	goto	u4840
  7145   003368                     u4841:
  7146   003368  EFBE  F019         	goto	l4337
  7147   00336C                     u4840:
  7148   00336C  0E00               	movlw	0
  7149   00336E  6E05               	movwf	___fleq@ff2^0,c
  7150   003370  0E00               	movlw	0
  7151   003372  6E06               	movwf	(___fleq@ff2+1)^0,c
  7152   003374  0E00               	movlw	0
  7153   003376  6E07               	movwf	(___fleq@ff2+2)^0,c
  7154   003378  0E00               	movlw	0
  7155   00337A  6E08               	movwf	(___fleq@ff2+3)^0,c
  7156   00337C                     l4337:
  7157   00337C  5005               	movf	___fleq@ff2^0,w,c
  7158   00337E  1801               	xorwf	___fleq@ff1^0,w,c
  7159   003380  E10F               	bnz	u4850
  7160   003382  5006               	movf	(___fleq@ff2+1)^0,w,c
  7161   003384  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  7162   003386  E10C               	bnz	u4850
  7163   003388  5007               	movf	(___fleq@ff2+2)^0,w,c
  7164   00338A  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  7165   00338C  E109               	bnz	u4850
  7166   00338E  5008               	movf	(___fleq@ff2+3)^0,w,c
  7167   003390  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  7168   003392  B4D8               	btfsc	status,2,c
  7169   003394  EFCE  F019         	goto	u4851
  7170   003398  EFD0  F019         	goto	u4850
  7171   00339C                     u4851:
  7172   00339C  EFD3  F019         	goto	l4341
  7173   0033A0                     u4850:
  7174   0033A0  90D8               	bcf	status,0,c
  7175   0033A2  EFD4  F019         	goto	l451
  7176   0033A6                     l4341:
  7177   0033A6  80D8               	bsf	status,0,c
  7178   0033A8                     l451:
  7179   0033A8  0012               	return		;funcret
  7180   0033AA                     __end_of___fleq:
  7181                           	callstack 0
  7182                           
  7183 ;; *************** function ___fldiv *****************
  7184 ;; Defined at:
  7185 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.46\pic\sources\c99\common\sprcdiv.c"
  7186 ;; Parameters:    Size  Location     Type
  7187 ;;  b               4   41[COMRAM] unsigned char 
  7188 ;;  a               4   45[COMRAM] unsigned char 
  7189 ;; Auto vars:     Size  Location     Type
  7190 ;;  grs             4   60[COMRAM] unsigned long 
  7191 ;;  rem             4   53[COMRAM] unsigned long 
  7192 ;;  new_exp         2   58[COMRAM] short 
  7193 ;;  aexp            1   65[COMRAM] unsigned char 
  7194 ;;  bexp            1   64[COMRAM] unsigned char 
  7195 ;;  sign            1   57[COMRAM] unsigned char 
  7196 ;; Return value:  Size  Location     Type
  7197 ;;                  4   41[COMRAM] unsigned char 
  7198 ;; Registers used:
  7199 ;;		wreg, status,2, status,0
  7200 ;; Tracked objects:
  7201 ;;		On entry : 0/0
  7202 ;;		On exit  : 0/0
  7203 ;;		Unchanged: 0/0
  7204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7205 ;;      Params:         8       0       0       0       0       0       0       0       0
  7206 ;;      Locals:        13       0       0       0       0       0       0       0       0
  7207 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7208 ;;      Totals:        25       0       0       0       0       0       0       0       0
  7209 ;;Total ram usage:       25 bytes
  7210 ;; Hardware stack levels used: 1
  7211 ;; This function calls:
  7212 ;;		Nothing
  7213 ;; This function is called by:
  7214 ;;		_termistorin
  7215 ;;		_logf
  7216 ;;		_efgtoa
  7217 ;;		_termistorout
  7218 ;; This function uses a non-reentrant model
  7219 ;;
  7220                           
  7221                           	psect	text28
  7222   00212E                     __ptext28:
  7223                           	callstack 0
  7224   00212E                     ___fldiv:
  7225                           	callstack 27
  7226   00212E  502D               	movf	(___fldiv@b+3)^0,w,c
  7227   002130  0B80               	andlw	128
  7228   002132  6E3A               	movwf	___fldiv@sign^0,c
  7229   002134  502D               	movf	(___fldiv@b+3)^0,w,c
  7230   002136  242D               	addwf	(___fldiv@b+3)^0,w,c
  7231   002138  6E41               	movwf	___fldiv@bexp^0,c
  7232   00213A  AE2C               	btfss	(___fldiv@b+2)^0,7,c
  7233   00213C  EFA2  F010         	goto	u4411
  7234   002140  EFA4  F010         	goto	u4410
  7235   002144                     u4411:
  7236   002144  EFA5  F010         	goto	l4061
  7237   002148                     u4410:
  7238   002148  8041               	bsf	___fldiv@bexp^0,0,c
  7239   00214A                     l4061:
  7240   00214A  5041               	movf	___fldiv@bexp^0,w,c
  7241   00214C  B4D8               	btfsc	status,2,c
  7242   00214E  EFAB  F010         	goto	u4421
  7243   002152  EFAD  F010         	goto	u4420
  7244   002156                     u4421:
  7245   002156  EFC2  F010         	goto	l4071
  7246   00215A                     u4420:
  7247   00215A  2841               	incf	___fldiv@bexp^0,w,c
  7248   00215C  A4D8               	btfss	status,2,c
  7249   00215E  EFB3  F010         	goto	u4431
  7250   002162  EFB5  F010         	goto	u4430
  7251   002166                     u4431:
  7252   002166  EFBD  F010         	goto	l4067
  7253   00216A                     u4430:
  7254   00216A  0E00               	movlw	0
  7255   00216C  6E2A               	movwf	___fldiv@b^0,c
  7256   00216E  0E00               	movlw	0
  7257   002170  6E2B               	movwf	(___fldiv@b+1)^0,c
  7258   002172  0E00               	movlw	0
  7259   002174  6E2C               	movwf	(___fldiv@b+2)^0,c
  7260   002176  0E00               	movlw	0
  7261   002178  6E2D               	movwf	(___fldiv@b+3)^0,c
  7262   00217A                     l4067:
  7263   00217A  8E2C               	bsf	(___fldiv@b+2)^0,7,c
  7264   00217C  0E00               	movlw	0
  7265   00217E  6E2D               	movwf	(___fldiv@b+3)^0,c
  7266   002180  EFCA  F010         	goto	l4073
  7267   002184                     l4071:
  7268   002184  0E00               	movlw	0
  7269   002186  6E2A               	movwf	___fldiv@b^0,c
  7270   002188  0E00               	movlw	0
  7271   00218A  6E2B               	movwf	(___fldiv@b+1)^0,c
  7272   00218C  0E00               	movlw	0
  7273   00218E  6E2C               	movwf	(___fldiv@b+2)^0,c
  7274   002190  0E00               	movlw	0
  7275   002192  6E2D               	movwf	(___fldiv@b+3)^0,c
  7276   002194                     l4073:
  7277   002194  5031               	movf	(___fldiv@a+3)^0,w,c
  7278   002196  0B80               	andlw	128
  7279   002198  1A3A               	xorwf	___fldiv@sign^0,f,c
  7280   00219A  5031               	movf	(___fldiv@a+3)^0,w,c
  7281   00219C  2431               	addwf	(___fldiv@a+3)^0,w,c
  7282   00219E  6E42               	movwf	___fldiv@aexp^0,c
  7283   0021A0  AE30               	btfss	(___fldiv@a+2)^0,7,c
  7284   0021A2  EFD5  F010         	goto	u4441
  7285   0021A6  EFD7  F010         	goto	u4440
  7286   0021AA                     u4441:
  7287   0021AA  EFD8  F010         	goto	l4081
  7288   0021AE                     u4440:
  7289   0021AE  8042               	bsf	___fldiv@aexp^0,0,c
  7290   0021B0                     l4081:
  7291   0021B0  5042               	movf	___fldiv@aexp^0,w,c
  7292   0021B2  B4D8               	btfsc	status,2,c
  7293   0021B4  EFDE  F010         	goto	u4451
  7294   0021B8  EFE0  F010         	goto	u4450
  7295   0021BC                     u4451:
  7296   0021BC  EFF5  F010         	goto	l4091
  7297   0021C0                     u4450:
  7298   0021C0  2842               	incf	___fldiv@aexp^0,w,c
  7299   0021C2  A4D8               	btfss	status,2,c
  7300   0021C4  EFE6  F010         	goto	u4461
  7301   0021C8  EFE8  F010         	goto	u4460
  7302   0021CC                     u4461:
  7303   0021CC  EFF0  F010         	goto	l4087
  7304   0021D0                     u4460:
  7305   0021D0  0E00               	movlw	0
  7306   0021D2  6E2E               	movwf	___fldiv@a^0,c
  7307   0021D4  0E00               	movlw	0
  7308   0021D6  6E2F               	movwf	(___fldiv@a+1)^0,c
  7309   0021D8  0E00               	movlw	0
  7310   0021DA  6E30               	movwf	(___fldiv@a+2)^0,c
  7311   0021DC  0E00               	movlw	0
  7312   0021DE  6E31               	movwf	(___fldiv@a+3)^0,c
  7313   0021E0                     l4087:
  7314   0021E0  8E30               	bsf	(___fldiv@a+2)^0,7,c
  7315   0021E2  0E00               	movlw	0
  7316   0021E4  6E31               	movwf	(___fldiv@a+3)^0,c
  7317   0021E6  EFFD  F010         	goto	l4093
  7318   0021EA                     l4091:
  7319   0021EA  0E00               	movlw	0
  7320   0021EC  6E2E               	movwf	___fldiv@a^0,c
  7321   0021EE  0E00               	movlw	0
  7322   0021F0  6E2F               	movwf	(___fldiv@a+1)^0,c
  7323   0021F2  0E00               	movlw	0
  7324   0021F4  6E30               	movwf	(___fldiv@a+2)^0,c
  7325   0021F6  0E00               	movlw	0
  7326   0021F8  6E31               	movwf	(___fldiv@a+3)^0,c
  7327   0021FA                     l4093:
  7328   0021FA  502E               	movf	___fldiv@a^0,w,c
  7329   0021FC  102F               	iorwf	(___fldiv@a+1)^0,w,c
  7330   0021FE  1030               	iorwf	(___fldiv@a+2)^0,w,c
  7331   002200  1031               	iorwf	(___fldiv@a+3)^0,w,c
  7332   002202  A4D8               	btfss	status,2,c
  7333   002204  EF06  F011         	goto	u4471
  7334   002208  EF08  F011         	goto	u4470
  7335   00220C                     u4471:
  7336   00220C  EF20  F011         	goto	l4105
  7337   002210                     u4470:
  7338   002210  0E00               	movlw	0
  7339   002212  6E2A               	movwf	___fldiv@b^0,c
  7340   002214  0E00               	movlw	0
  7341   002216  6E2B               	movwf	(___fldiv@b+1)^0,c
  7342   002218  0E00               	movlw	0
  7343   00221A  6E2C               	movwf	(___fldiv@b+2)^0,c
  7344   00221C  0E00               	movlw	0
  7345   00221E  6E2D               	movwf	(___fldiv@b+3)^0,c
  7346   002220  0E80               	movlw	128
  7347   002222  122C               	iorwf	(___fldiv@b+2)^0,f,c
  7348   002224  0E7F               	movlw	127
  7349   002226  122D               	iorwf	(___fldiv@b+3)^0,f,c
  7350   002228                     l4099:
  7351   002228  503A               	movf	___fldiv@sign^0,w,c
  7352   00222A  122D               	iorwf	(___fldiv@b+3)^0,f,c
  7353   00222C  C02A  F02A         	movff	___fldiv@b,?___fldiv
  7354   002230  C02B  F02B         	movff	___fldiv@b+1,?___fldiv+1
  7355   002234  C02C  F02C         	movff	___fldiv@b+2,?___fldiv+2
  7356   002238  C02D  F02D         	movff	___fldiv@b+3,?___fldiv+3
  7357   00223C  EF63  F012         	goto	l774
  7358   002240                     l4105:
  7359   002240  5041               	movf	___fldiv@bexp^0,w,c
  7360   002242  A4D8               	btfss	status,2,c
  7361   002244  EF26  F011         	goto	u4481
  7362   002248  EF28  F011         	goto	u4480
  7363   00224C                     u4481:
  7364   00224C  EF32  F011         	goto	l4113
  7365   002250                     u4480:
  7366   002250  0E00               	movlw	0
  7367   002252  6E2A               	movwf	?___fldiv^0,c
  7368   002254  0E00               	movlw	0
  7369   002256  6E2B               	movwf	(?___fldiv+1)^0,c
  7370   002258  0E00               	movlw	0
  7371   00225A  6E2C               	movwf	(?___fldiv+2)^0,c
  7372   00225C  0E00               	movlw	0
  7373   00225E  6E2D               	movwf	(?___fldiv+3)^0,c
  7374   002260  EF63  F012         	goto	l774
  7375   002264                     l4113:
  7376   002264  5042               	movf	___fldiv@aexp^0,w,c
  7377   002266  C041  F032         	movff	___fldiv@bexp,??___fldiv
  7378   00226A  6A33               	clrf	(??___fldiv+1)^0,c
  7379   00226C  5E32               	subwf	??___fldiv^0,f,c
  7380   00226E  0E00               	movlw	0
  7381   002270  5A33               	subwfb	(??___fldiv+1)^0,f,c
  7382   002272  0E7F               	movlw	127
  7383   002274  2432               	addwf	??___fldiv^0,w,c
  7384   002276  6E3B               	movwf	___fldiv@new_exp^0,c
  7385   002278  0E00               	movlw	0
  7386   00227A  2033               	addwfc	(??___fldiv+1)^0,w,c
  7387   00227C  6E3C               	movwf	(___fldiv@new_exp+1)^0,c
  7388   00227E  C02A  F036         	movff	___fldiv@b,___fldiv@rem
  7389   002282  C02B  F037         	movff	___fldiv@b+1,___fldiv@rem+1
  7390   002286  C02C  F038         	movff	___fldiv@b+2,___fldiv@rem+2
  7391   00228A  C02D  F039         	movff	___fldiv@b+3,___fldiv@rem+3
  7392   00228E  0E00               	movlw	0
  7393   002290  6E2A               	movwf	___fldiv@b^0,c
  7394   002292  0E00               	movlw	0
  7395   002294  6E2B               	movwf	(___fldiv@b+1)^0,c
  7396   002296  0E00               	movlw	0
  7397   002298  6E2C               	movwf	(___fldiv@b+2)^0,c
  7398   00229A  0E00               	movlw	0
  7399   00229C  6E2D               	movwf	(___fldiv@b+3)^0,c
  7400   00229E  0E00               	movlw	0
  7401   0022A0  6E3D               	movwf	___fldiv@grs^0,c
  7402   0022A2  0E00               	movlw	0
  7403   0022A4  6E3E               	movwf	(___fldiv@grs+1)^0,c
  7404   0022A6  0E00               	movlw	0
  7405   0022A8  6E3F               	movwf	(___fldiv@grs+2)^0,c
  7406   0022AA  0E00               	movlw	0
  7407   0022AC  6E40               	movwf	(___fldiv@grs+3)^0,c
  7408   0022AE  0E00               	movlw	0
  7409   0022B0  6E42               	movwf	___fldiv@aexp^0,c
  7410   0022B2  EF93  F011         	goto	l776
  7411   0022B6                     l4123:
  7412   0022B6  5042               	movf	___fldiv@aexp^0,w,c
  7413   0022B8  B4D8               	btfsc	status,2,c
  7414   0022BA  EF61  F011         	goto	u4491
  7415   0022BE  EF63  F011         	goto	u4490
  7416   0022C2                     u4491:
  7417   0022C2  EF7A  F011         	goto	l4131
  7418   0022C6                     u4490:
  7419   0022C6  90D8               	bcf	status,0,c
  7420   0022C8  3636               	rlcf	___fldiv@rem^0,f,c
  7421   0022CA  3637               	rlcf	(___fldiv@rem+1)^0,f,c
  7422   0022CC  3638               	rlcf	(___fldiv@rem+2)^0,f,c
  7423   0022CE  3639               	rlcf	(___fldiv@rem+3)^0,f,c
  7424   0022D0  90D8               	bcf	status,0,c
  7425   0022D2  362A               	rlcf	___fldiv@b^0,f,c
  7426   0022D4  362B               	rlcf	(___fldiv@b+1)^0,f,c
  7427   0022D6  362C               	rlcf	(___fldiv@b+2)^0,f,c
  7428   0022D8  362D               	rlcf	(___fldiv@b+3)^0,f,c
  7429   0022DA  AE40               	btfss	(___fldiv@grs+3)^0,7,c
  7430   0022DC  EF72  F011         	goto	u4501
  7431   0022E0  EF74  F011         	goto	u4500
  7432   0022E4                     u4501:
  7433   0022E4  EF75  F011         	goto	l779
  7434   0022E8                     u4500:
  7435   0022E8  802A               	bsf	___fldiv@b^0,0,c
  7436   0022EA                     l779:
  7437   0022EA  90D8               	bcf	status,0,c
  7438   0022EC  363D               	rlcf	___fldiv@grs^0,f,c
  7439   0022EE  363E               	rlcf	(___fldiv@grs+1)^0,f,c
  7440   0022F0  363F               	rlcf	(___fldiv@grs+2)^0,f,c
  7441   0022F2  3640               	rlcf	(___fldiv@grs+3)^0,f,c
  7442   0022F4                     l4131:
  7443   0022F4  502E               	movf	___fldiv@a^0,w,c
  7444   0022F6  5C36               	subwf	___fldiv@rem^0,w,c
  7445   0022F8  502F               	movf	(___fldiv@a+1)^0,w,c
  7446   0022FA  5837               	subwfb	(___fldiv@rem+1)^0,w,c
  7447   0022FC  5030               	movf	(___fldiv@a+2)^0,w,c
  7448   0022FE  5838               	subwfb	(___fldiv@rem+2)^0,w,c
  7449   002300  5031               	movf	(___fldiv@a+3)^0,w,c
  7450   002302  5839               	subwfb	(___fldiv@rem+3)^0,w,c
  7451   002304  A0D8               	btfss	status,0,c
  7452   002306  EF87  F011         	goto	u4511
  7453   00230A  EF89  F011         	goto	u4510
  7454   00230E                     u4511:
  7455   00230E  EF92  F011         	goto	l4137
  7456   002312                     u4510:
  7457   002312  8C40               	bsf	(___fldiv@grs+3)^0,6,c
  7458   002314  502E               	movf	___fldiv@a^0,w,c
  7459   002316  5E36               	subwf	___fldiv@rem^0,f,c
  7460   002318  502F               	movf	(___fldiv@a+1)^0,w,c
  7461   00231A  5A37               	subwfb	(___fldiv@rem+1)^0,f,c
  7462   00231C  5030               	movf	(___fldiv@a+2)^0,w,c
  7463   00231E  5A38               	subwfb	(___fldiv@rem+2)^0,f,c
  7464   002320  5031               	movf	(___fldiv@a+3)^0,w,c
  7465   002322  5A39               	subwfb	(___fldiv@rem+3)^0,f,c
  7466   002324                     l4137:
  7467   002324  2A42               	incf	___fldiv@aexp^0,f,c
  7468   002326                     l776:
  7469   002326  0E19               	movlw	25
  7470   002328  6442               	cpfsgt	___fldiv@aexp^0,c
  7471   00232A  EF99  F011         	goto	u4521
  7472   00232E  EF9B  F011         	goto	u4520
  7473   002332                     u4521:
  7474   002332  EF5B  F011         	goto	l4123
  7475   002336                     u4520:
  7476   002336  5036               	movf	___fldiv@rem^0,w,c
  7477   002338  1037               	iorwf	(___fldiv@rem+1)^0,w,c
  7478   00233A  1038               	iorwf	(___fldiv@rem+2)^0,w,c
  7479   00233C  1039               	iorwf	(___fldiv@rem+3)^0,w,c
  7480   00233E  B4D8               	btfsc	status,2,c
  7481   002340  EFA4  F011         	goto	u4531
  7482   002344  EFA6  F011         	goto	u4530
  7483   002348                     u4531:
  7484   002348  EFBE  F011         	goto	l4149
  7485   00234C                     u4530:
  7486   00234C  803D               	bsf	___fldiv@grs^0,0,c
  7487   00234E  EFBE  F011         	goto	l4149
  7488   002352                     l4143:
  7489   002352  90D8               	bcf	status,0,c
  7490   002354  362A               	rlcf	___fldiv@b^0,f,c
  7491   002356  362B               	rlcf	(___fldiv@b+1)^0,f,c
  7492   002358  362C               	rlcf	(___fldiv@b+2)^0,f,c
  7493   00235A  362D               	rlcf	(___fldiv@b+3)^0,f,c
  7494   00235C  AE40               	btfss	(___fldiv@grs+3)^0,7,c
  7495   00235E  EFB3  F011         	goto	u4541
  7496   002362  EFB5  F011         	goto	u4540
  7497   002366                     u4541:
  7498   002366  EFB6  F011         	goto	l785
  7499   00236A                     u4540:
  7500   00236A  802A               	bsf	___fldiv@b^0,0,c
  7501   00236C                     l785:
  7502   00236C  90D8               	bcf	status,0,c
  7503   00236E  363D               	rlcf	___fldiv@grs^0,f,c
  7504   002370  363E               	rlcf	(___fldiv@grs+1)^0,f,c
  7505   002372  363F               	rlcf	(___fldiv@grs+2)^0,f,c
  7506   002374  3640               	rlcf	(___fldiv@grs+3)^0,f,c
  7507   002376  063B               	decf	___fldiv@new_exp^0,f,c
  7508   002378  A0D8               	btfss	status,0,c
  7509   00237A  063C               	decf	(___fldiv@new_exp+1)^0,f,c
  7510   00237C                     l4149:
  7511   00237C  AE2C               	btfss	(___fldiv@b+2)^0,7,c
  7512   00237E  EFC3  F011         	goto	u4551
  7513   002382  EFC5  F011         	goto	u4550
  7514   002386                     u4551:
  7515   002386  EFA9  F011         	goto	l4143
  7516   00238A                     u4550:
  7517   00238A  0E00               	movlw	0
  7518   00238C  6E42               	movwf	___fldiv@aexp^0,c
  7519   00238E  AE40               	btfss	(___fldiv@grs+3)^0,7,c
  7520   002390  EFCC  F011         	goto	u4561
  7521   002394  EFCE  F011         	goto	u4560
  7522   002398                     u4561:
  7523   002398  EFF2  F011         	goto	l787
  7524   00239C                     u4560:
  7525   00239C  0EFF               	movlw	255
  7526   00239E  143D               	andwf	___fldiv@grs^0,w,c
  7527   0023A0  6E32               	movwf	??___fldiv^0,c
  7528   0023A2  0EFF               	movlw	255
  7529   0023A4  143E               	andwf	(___fldiv@grs+1)^0,w,c
  7530   0023A6  6E33               	movwf	(??___fldiv+1)^0,c
  7531   0023A8  0EFF               	movlw	255
  7532   0023AA  143F               	andwf	(___fldiv@grs+2)^0,w,c
  7533   0023AC  6E34               	movwf	(??___fldiv+2)^0,c
  7534   0023AE  0E7F               	movlw	127
  7535   0023B0  1440               	andwf	(___fldiv@grs+3)^0,w,c
  7536   0023B2  6E35               	movwf	(??___fldiv+3)^0,c
  7537   0023B4  5032               	movf	??___fldiv^0,w,c
  7538   0023B6  1033               	iorwf	(??___fldiv+1)^0,w,c
  7539   0023B8  1034               	iorwf	(??___fldiv+2)^0,w,c
  7540   0023BA  1035               	iorwf	(??___fldiv+3)^0,w,c
  7541   0023BC  B4D8               	btfsc	status,2,c
  7542   0023BE  EFE3  F011         	goto	u4571
  7543   0023C2  EFE5  F011         	goto	u4570
  7544   0023C6                     u4571:
  7545   0023C6  EFE9  F011         	goto	l788
  7546   0023CA                     u4570:
  7547   0023CA                     l4157:
  7548   0023CA  0E01               	movlw	1
  7549   0023CC  6E42               	movwf	___fldiv@aexp^0,c
  7550   0023CE  EFF2  F011         	goto	l787
  7551   0023D2                     l788:
  7552   0023D2  A02A               	btfss	___fldiv@b^0,0,c
  7553   0023D4  EFEE  F011         	goto	u4581
  7554   0023D8  EFF0  F011         	goto	u4580
  7555   0023DC                     u4581:
  7556   0023DC  EFF2  F011         	goto	l787
  7557   0023E0                     u4580:
  7558   0023E0  EFE5  F011         	goto	l4157
  7559   0023E4                     l787:
  7560   0023E4  5042               	movf	___fldiv@aexp^0,w,c
  7561   0023E6  B4D8               	btfsc	status,2,c
  7562   0023E8  EFF8  F011         	goto	u4591
  7563   0023EC  EFFA  F011         	goto	u4590
  7564   0023F0                     u4591:
  7565   0023F0  EF1E  F012         	goto	l4169
  7566   0023F4                     u4590:
  7567   0023F4  0E01               	movlw	1
  7568   0023F6  262A               	addwf	___fldiv@b^0,f,c
  7569   0023F8  0E00               	movlw	0
  7570   0023FA  222B               	addwfc	(___fldiv@b+1)^0,f,c
  7571   0023FC  222C               	addwfc	(___fldiv@b+2)^0,f,c
  7572   0023FE  222D               	addwfc	(___fldiv@b+3)^0,f,c
  7573   002400  A02D               	btfss	(___fldiv@b+3)^0,0,c
  7574   002402  EF05  F012         	goto	u4601
  7575   002406  EF07  F012         	goto	u4600
  7576   00240A                     u4601:
  7577   00240A  EF1E  F012         	goto	l4169
  7578   00240E                     u4600:
  7579   00240E  C02A  F032         	movff	___fldiv@b,??___fldiv
  7580   002412  C02B  F033         	movff	___fldiv@b+1,??___fldiv+1
  7581   002416  C02C  F034         	movff	___fldiv@b+2,??___fldiv+2
  7582   00241A  C02D  F035         	movff	___fldiv@b+3,??___fldiv+3
  7583   00241E  3435               	rlcf	(??___fldiv+3)^0,w,c
  7584   002420  3235               	rrcf	(??___fldiv+3)^0,f,c
  7585   002422  3234               	rrcf	(??___fldiv+2)^0,f,c
  7586   002424  3233               	rrcf	(??___fldiv+1)^0,f,c
  7587   002426  3232               	rrcf	??___fldiv^0,f,c
  7588   002428  C032  F02A         	movff	??___fldiv,___fldiv@b
  7589   00242C  C033  F02B         	movff	??___fldiv+1,___fldiv@b+1
  7590   002430  C034  F02C         	movff	??___fldiv+2,___fldiv@b+2
  7591   002434  C035  F02D         	movff	??___fldiv+3,___fldiv@b+3
  7592   002438  4A3B               	infsnz	___fldiv@new_exp^0,f,c
  7593   00243A  2A3C               	incf	(___fldiv@new_exp+1)^0,f,c
  7594   00243C                     l4169:
  7595   00243C  BE3C               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7596   00243E  EF29  F012         	goto	u4611
  7597   002442  503C               	movf	(___fldiv@new_exp+1)^0,w,c
  7598   002444  E108               	bnz	u4610
  7599   002446  283B               	incf	___fldiv@new_exp^0,w,c
  7600   002448  A0D8               	btfss	status,0,c
  7601   00244A  EF29  F012         	goto	u4611
  7602   00244E  EF2B  F012         	goto	u4610
  7603   002452                     u4611:
  7604   002452  EF36  F012         	goto	l4173
  7605   002456                     u4610:
  7606   002456  0E00               	movlw	0
  7607   002458  6E3C               	movwf	(___fldiv@new_exp+1)^0,c
  7608   00245A  683B               	setf	___fldiv@new_exp^0,c
  7609   00245C  0E00               	movlw	0
  7610   00245E  6E2A               	movwf	___fldiv@b^0,c
  7611   002460  0E00               	movlw	0
  7612   002462  6E2B               	movwf	(___fldiv@b+1)^0,c
  7613   002464  0E00               	movlw	0
  7614   002466  6E2C               	movwf	(___fldiv@b+2)^0,c
  7615   002468  0E00               	movlw	0
  7616   00246A  6E2D               	movwf	(___fldiv@b+3)^0,c
  7617   00246C                     l4173:
  7618   00246C  BE3C               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7619   00246E  EF43  F012         	goto	u4620
  7620   002472  503C               	movf	(___fldiv@new_exp+1)^0,w,c
  7621   002474  E106               	bnz	u4621
  7622   002476  043B               	decf	___fldiv@new_exp^0,w,c
  7623   002478  B0D8               	btfsc	status,0,c
  7624   00247A  EF41  F012         	goto	u4621
  7625   00247E  EF43  F012         	goto	u4620
  7626   002482                     u4621:
  7627   002482  EF51  F012         	goto	l4177
  7628   002486                     u4620:
  7629   002486  0E00               	movlw	0
  7630   002488  6E3C               	movwf	(___fldiv@new_exp+1)^0,c
  7631   00248A  0E00               	movlw	0
  7632   00248C  6E3B               	movwf	___fldiv@new_exp^0,c
  7633   00248E  0E00               	movlw	0
  7634   002490  6E2A               	movwf	___fldiv@b^0,c
  7635   002492  0E00               	movlw	0
  7636   002494  6E2B               	movwf	(___fldiv@b+1)^0,c
  7637   002496  0E00               	movlw	0
  7638   002498  6E2C               	movwf	(___fldiv@b+2)^0,c
  7639   00249A  0E00               	movlw	0
  7640   00249C  6E2D               	movwf	(___fldiv@b+3)^0,c
  7641   00249E  0E00               	movlw	0
  7642   0024A0  6E3A               	movwf	___fldiv@sign^0,c
  7643   0024A2                     l4177:
  7644   0024A2  C03B  F041         	movff	___fldiv@new_exp,___fldiv@bexp
  7645   0024A6  A041               	btfss	___fldiv@bexp^0,0,c
  7646   0024A8  EF58  F012         	goto	u4631
  7647   0024AC  EF5A  F012         	goto	u4630
  7648   0024B0                     u4631:
  7649   0024B0  EF5D  F012         	goto	l4183
  7650   0024B4                     u4630:
  7651   0024B4  8E2C               	bsf	(___fldiv@b+2)^0,7,c
  7652   0024B6  EF5E  F012         	goto	l4185
  7653   0024BA                     l4183:
  7654   0024BA  9E2C               	bcf	(___fldiv@b+2)^0,7,c
  7655   0024BC                     l4185:
  7656   0024BC  90D8               	bcf	status,0,c
  7657   0024BE  3041               	rrcf	___fldiv@bexp^0,w,c
  7658   0024C0  6E2D               	movwf	(___fldiv@b+3)^0,c
  7659   0024C2  EF14  F011         	goto	l4099
  7660   0024C6                     l774:
  7661   0024C6  0012               	return		;funcret
  7662   0024C8                     __end_of___fldiv:
  7663                           	callstack 0
  7664                           
  7665 ;; *************** function _LCD_Write_String *****************
  7666 ;; Defined at:
  7667 ;;		line 134 in file "lcd.c"
  7668 ;; Parameters:    Size  Location     Type
  7669 ;;  Str             2    5[COMRAM] PTR unsigned char 
  7670 ;;		 -> TempoutSTR(32), TempinSTR(32), 
  7671 ;; Auto vars:     Size  Location     Type
  7672 ;;  i               2    7[COMRAM] int 
  7673 ;; Return value:  Size  Location     Type
  7674 ;;                  1    wreg      void 
  7675 ;; Registers used:
  7676 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7677 ;; Tracked objects:
  7678 ;;		On entry : 0/0
  7679 ;;		On exit  : 0/0
  7680 ;;		Unchanged: 0/0
  7681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7682 ;;      Params:         2       0       0       0       0       0       0       0       0
  7683 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7684 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7685 ;;      Totals:         4       0       0       0       0       0       0       0       0
  7686 ;;Total ram usage:        4 bytes
  7687 ;; Hardware stack levels used: 1
  7688 ;; Hardware stack levels required when called: 5
  7689 ;; This function calls:
  7690 ;;		_LCD_Write_Char
  7691 ;; This function is called by:
  7692 ;;		_menu
  7693 ;; This function uses a non-reentrant model
  7694 ;;
  7695                           
  7696                           	psect	text29
  7697   003758                     __ptext29:
  7698                           	callstack 0
  7699   003758                     _LCD_Write_String:
  7700                           	callstack 24
  7701   003758                     
  7702                           ;lcd.c: 134: void LCD_Write_String(char* Str);lcd.c: 135: {;lcd.c: 136:     for(int i=0;
      +                           Str[i]!='\0'; i++)
  7703   003758  0E00               	movlw	0
  7704   00375A  6E09               	movwf	(LCD_Write_String@i+1)^0,c
  7705   00375C  0E00               	movlw	0
  7706   00375E  6E08               	movwf	LCD_Write_String@i^0,c
  7707   003760  EFBD  F01B         	goto	l4901
  7708   003764                     l4897:
  7709                           
  7710                           ;lcd.c: 137:        LCD_Write_Char(Str[i]);
  7711   003764  5008               	movf	LCD_Write_String@i^0,w,c
  7712   003766  2406               	addwf	LCD_Write_String@Str^0,w,c
  7713   003768  6ED9               	movwf	fsr2l,c
  7714   00376A  5009               	movf	(LCD_Write_String@i+1)^0,w,c
  7715   00376C  2007               	addwfc	(LCD_Write_String@Str+1)^0,w,c
  7716   00376E  6EDA               	movwf	fsr2h,c
  7717   003770  50DF               	movf	indf2,w,c
  7718   003772  EC80  F01C         	call	_LCD_Write_Char
  7719   003776  4A08               	infsnz	LCD_Write_String@i^0,f,c
  7720   003778  2A09               	incf	(LCD_Write_String@i+1)^0,f,c
  7721   00377A                     l4901:
  7722   00377A  5008               	movf	LCD_Write_String@i^0,w,c
  7723   00377C  2406               	addwf	LCD_Write_String@Str^0,w,c
  7724   00377E  6ED9               	movwf	fsr2l,c
  7725   003780  5009               	movf	(LCD_Write_String@i+1)^0,w,c
  7726   003782  2007               	addwfc	(LCD_Write_String@Str+1)^0,w,c
  7727   003784  6EDA               	movwf	fsr2h,c
  7728   003786  50DF               	movf	indf2,w,c
  7729   003788  A4D8               	btfss	status,2,c
  7730   00378A  EFC9  F01B         	goto	u5671
  7731   00378E  EFCB  F01B         	goto	u5670
  7732   003792                     u5671:
  7733   003792  EFB2  F01B         	goto	l4897
  7734   003796                     u5670:
  7735   003796  0012               	return		;funcret
  7736   003798                     __end_of_LCD_Write_String:
  7737                           	callstack 0
  7738                           
  7739 ;; *************** function _LCD_Write_Char *****************
  7740 ;; Defined at:
  7741 ;;		line 127 in file "lcd.c"
  7742 ;; Parameters:    Size  Location     Type
  7743 ;;  Data            1    wreg     unsigned char 
  7744 ;; Auto vars:     Size  Location     Type
  7745 ;;  Data            1    4[COMRAM] unsigned char 
  7746 ;; Return value:  Size  Location     Type
  7747 ;;                  1    wreg      void 
  7748 ;; Registers used:
  7749 ;;		wreg, status,2, status,0, cstack
  7750 ;; Tracked objects:
  7751 ;;		On entry : 0/0
  7752 ;;		On exit  : 0/0
  7753 ;;		Unchanged: 0/0
  7754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7755 ;;      Params:         0       0       0       0       0       0       0       0       0
  7756 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7757 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7758 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7759 ;;Total ram usage:        1 bytes
  7760 ;; Hardware stack levels used: 1
  7761 ;; Hardware stack levels required when called: 4
  7762 ;; This function calls:
  7763 ;;		_LCD_Write_4Bit
  7764 ;; This function is called by:
  7765 ;;		_LCD_Write_String
  7766 ;; This function uses a non-reentrant model
  7767 ;;
  7768                           
  7769                           	psect	text30
  7770   003900                     __ptext30:
  7771                           	callstack 0
  7772   003900                     _LCD_Write_Char:
  7773                           	callstack 24
  7774                           
  7775                           ;incstack = 0
  7776                           ;LCD_Write_Char@Data stored from wreg
  7777   003900  6E05               	movwf	LCD_Write_Char@Data^0,c
  7778   003902                     
  7779                           ;lcd.c: 127: void LCD_Write_Char(char Data);lcd.c: 128: {;lcd.c: 129:   RS = 1;
  7780   003902  0E01               	movlw	1
  7781   003904  0100               	movlb	0	; () banked
  7782   003906  6FD3               	movwf	_RS& (0+255),b
  7783   003908                     
  7784                           ; BSR set to: 0
  7785                           ;lcd.c: 130:   LCD_Write_4Bit(Data & 0xF0);
  7786   003908  5005               	movf	LCD_Write_Char@Data^0,w,c
  7787   00390A  0BF0               	andlw	240
  7788   00390C  EC60  F01C         	call	_LCD_Write_4Bit
  7789   003910                     
  7790                           ;lcd.c: 131:   LCD_Write_4Bit((Data << 4) & 0xF0);
  7791   003910  3805               	swapf	LCD_Write_Char@Data^0,w,c
  7792   003912  0BF0               	andlw	240
  7793   003914  0BF0               	andlw	240
  7794   003916  EC60  F01C         	call	_LCD_Write_4Bit
  7795   00391A  0012               	return		;funcret
  7796   00391C                     __end_of_LCD_Write_Char:
  7797                           	callstack 0
  7798                           
  7799 ;; *************** function _LCD_Set_Cursor *****************
  7800 ;; Defined at:
  7801 ;;		line 140 in file "lcd.c"
  7802 ;; Parameters:    Size  Location     Type
  7803 ;;  ROW             1    wreg     unsigned char 
  7804 ;;  COL             1    5[COMRAM] unsigned char 
  7805 ;; Auto vars:     Size  Location     Type
  7806 ;;  ROW             1    6[COMRAM] unsigned char 
  7807 ;; Return value:  Size  Location     Type
  7808 ;;                  1    wreg      void 
  7809 ;; Registers used:
  7810 ;;		wreg, status,2, status,0, cstack
  7811 ;; Tracked objects:
  7812 ;;		On entry : 0/0
  7813 ;;		On exit  : 0/0
  7814 ;;		Unchanged: 0/0
  7815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7816 ;;      Params:         1       0       0       0       0       0       0       0       0
  7817 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7818 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7819 ;;      Totals:         2       0       0       0       0       0       0       0       0
  7820 ;;Total ram usage:        2 bytes
  7821 ;; Hardware stack levels used: 1
  7822 ;; Hardware stack levels required when called: 5
  7823 ;; This function calls:
  7824 ;;		_LCD_CMD
  7825 ;; This function is called by:
  7826 ;;		_menu
  7827 ;; This function uses a non-reentrant model
  7828 ;;
  7829                           
  7830                           	psect	text31
  7831   0035AA                     __ptext31:
  7832                           	callstack 0
  7833   0035AA                     _LCD_Set_Cursor:
  7834                           	callstack 24
  7835                           
  7836                           ;incstack = 0
  7837                           ;LCD_Set_Cursor@ROW stored from wreg
  7838   0035AA  6E07               	movwf	LCD_Set_Cursor@ROW^0,c
  7839   0035AC                     
  7840                           ;lcd.c: 140: void LCD_Set_Cursor(unsigned char ROW, unsigned char COL);lcd.c: 141: {;lcd
      +                          .c: 142:   switch(ROW)
  7841   0035AC  EFF0  F01A         	goto	l3677
  7842   0035B0                     l3669:
  7843                           
  7844                           ;lcd.c: 145:       LCD_CMD(0xC0 + COL-1);
  7845   0035B0  5006               	movf	LCD_Set_Cursor@COL^0,w,c
  7846   0035B2  0FBF               	addlw	191
  7847   0035B4  EC8E  F01C         	call	_LCD_CMD
  7848                           
  7849                           ;lcd.c: 146:       break;
  7850   0035B8  EFFF  F01A         	goto	l106
  7851   0035BC                     l3671:
  7852                           
  7853                           ;lcd.c: 148:       LCD_CMD(0x94 + COL-1);
  7854   0035BC  5006               	movf	LCD_Set_Cursor@COL^0,w,c
  7855   0035BE  0F93               	addlw	147
  7856   0035C0  EC8E  F01C         	call	_LCD_CMD
  7857                           
  7858                           ;lcd.c: 149:       break;
  7859   0035C4  EFFF  F01A         	goto	l106
  7860   0035C8                     l3673:
  7861                           
  7862                           ;lcd.c: 151:       LCD_CMD(0xD4 + COL-1);
  7863   0035C8  5006               	movf	LCD_Set_Cursor@COL^0,w,c
  7864   0035CA  0FD3               	addlw	211
  7865   0035CC  EC8E  F01C         	call	_LCD_CMD
  7866                           
  7867                           ;lcd.c: 152:       break;
  7868   0035D0  EFFF  F01A         	goto	l106
  7869   0035D4                     l3675:
  7870                           
  7871                           ;lcd.c: 155:       LCD_CMD(0x80 + COL-1);
  7872   0035D4  5006               	movf	LCD_Set_Cursor@COL^0,w,c
  7873   0035D6  0F7F               	addlw	127
  7874   0035D8  EC8E  F01C         	call	_LCD_CMD
  7875                           
  7876                           ;lcd.c: 156:   }
  7877   0035DC  EFFF  F01A         	goto	l106
  7878   0035E0                     l3677:
  7879   0035E0  5007               	movf	LCD_Set_Cursor@ROW^0,w,c
  7880                           
  7881                           ; Switch size 1, requested type "simple"
  7882                           ; Number of cases is 3, Range of values is 2 to 4
  7883                           ; switch strategies available:
  7884                           ; Name         Instructions Cycles
  7885                           ; simple_byte           10     6 (average)
  7886                           ;	Chosen strategy is simple_byte
  7887   0035E2  0A02               	xorlw	2	; case 2
  7888   0035E4  B4D8               	btfsc	status,2,c
  7889   0035E6  EFD8  F01A         	goto	l3669
  7890   0035EA  0A01               	xorlw	1	; case 3
  7891   0035EC  B4D8               	btfsc	status,2,c
  7892   0035EE  EFDE  F01A         	goto	l3671
  7893   0035F2  0A07               	xorlw	7	; case 4
  7894   0035F4  B4D8               	btfsc	status,2,c
  7895   0035F6  EFE4  F01A         	goto	l3673
  7896   0035FA  EFEA  F01A         	goto	l3675
  7897   0035FE                     l106:
  7898   0035FE  0012               	return		;funcret
  7899   003600                     __end_of_LCD_Set_Cursor:
  7900                           	callstack 0
  7901                           
  7902 ;; *************** function _ADC_Read *****************
  7903 ;; Defined at:
  7904 ;;		line 27 in file "newmain1.c"
  7905 ;; Parameters:    Size  Location     Type
  7906 ;;  channel         1    wreg     unsigned char 
  7907 ;; Auto vars:     Size  Location     Type
  7908 ;;  channel         1    8[COMRAM] unsigned char 
  7909 ;;  digital         2    6[COMRAM] int 
  7910 ;; Return value:  Size  Location     Type
  7911 ;;                  2    0[COMRAM] unsigned short 
  7912 ;; Registers used:
  7913 ;;		wreg, status,2, status,0
  7914 ;; Tracked objects:
  7915 ;;		On entry : 0/0
  7916 ;;		On exit  : 0/0
  7917 ;;		Unchanged: 0/0
  7918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7919 ;;      Params:         2       0       0       0       0       0       0       0       0
  7920 ;;      Locals:         3       0       0       0       0       0       0       0       0
  7921 ;;      Temps:          4       0       0       0       0       0       0       0       0
  7922 ;;      Totals:         9       0       0       0       0       0       0       0       0
  7923 ;;Total ram usage:        9 bytes
  7924 ;; Hardware stack levels used: 1
  7925 ;; This function calls:
  7926 ;;		Nothing
  7927 ;; This function is called by:
  7928 ;;		_menu
  7929 ;; This function uses a non-reentrant model
  7930 ;;
  7931                           
  7932                           	psect	text32
  7933   003450                     __ptext32:
  7934                           	callstack 0
  7935   003450                     _ADC_Read:
  7936                           	callstack 29
  7937                           
  7938                           ;incstack = 0
  7939                           ;ADC_Read@channel stored from wreg
  7940   003450  6E09               	movwf	ADC_Read@channel^0,c
  7941   003452                     
  7942                           ;newmain1.c: 27: uint16_t ADC_Read(uint8_t channel);newmain1.c: 28: {;newmain1.c: 29:   
      +                            int digital;;newmain1.c: 30:     ADCON0 =(ADCON0 & 0b11000011)|((channel<<2) & 0b00111
      +                          100);
  7943   003452  C009  F003         	movff	ADC_Read@channel,??_ADC_Read
  7944   003456  90D8               	bcf	status,0,c
  7945   003458  3603               	rlcf	??_ADC_Read^0,f,c
  7946   00345A  90D8               	bcf	status,0,c
  7947   00345C  3603               	rlcf	??_ADC_Read^0,f,c
  7948   00345E  0E3C               	movlw	60
  7949   003460  1603               	andwf	??_ADC_Read^0,f,c
  7950   003462  50C2               	movf	194,w,c	;volatile
  7951   003464  0BC3               	andlw	195
  7952   003466  1003               	iorwf	??_ADC_Read^0,w,c
  7953   003468  6EC2               	movwf	194,c	;volatile
  7954                           
  7955                           ;newmain1.c: 31:     ADCON0 |= ((1<<ADON)|(1<<GO));
  7956   00346A  B2C2               	btfsc	4034,1,c	;volatile
  7957   00346C  EF3A  F01A         	goto	u3891
  7958   003470  EF3E  F01A         	goto	u3890
  7959   003474                     u3891:
  7960   003474  6A03               	clrf	??_ADC_Read^0,c
  7961   003476  2A03               	incf	??_ADC_Read^0,f,c
  7962   003478  EF3F  F01A         	goto	u3908
  7963   00347C                     u3890:
  7964   00347C  6A03               	clrf	??_ADC_Read^0,c
  7965   00347E                     u3908:
  7966   00347E  0E01               	movlw	1
  7967   003480  6E04               	movwf	(??_ADC_Read+1)^0,c
  7968   003482  2A03               	incf	??_ADC_Read^0,f,c
  7969   003484  EF46  F01A         	goto	u3914
  7970   003488                     u3915:
  7971   003488  90D8               	bcf	status,0,c
  7972   00348A  3604               	rlcf	(??_ADC_Read+1)^0,f,c
  7973   00348C                     u3914:
  7974   00348C  2E03               	decfsz	??_ADC_Read^0,f,c
  7975   00348E  EF44  F01A         	goto	u3915
  7976   003492  B0C2               	btfsc	4034,0,c	;volatile
  7977   003494  EF4E  F01A         	goto	u3921
  7978   003498  EF52  F01A         	goto	u3920
  7979   00349C                     u3921:
  7980   00349C  6A05               	clrf	(??_ADC_Read+2)^0,c
  7981   00349E  2A05               	incf	(??_ADC_Read+2)^0,f,c
  7982   0034A0  EF53  F01A         	goto	u3938
  7983   0034A4                     u3920:
  7984   0034A4  6A05               	clrf	(??_ADC_Read+2)^0,c
  7985   0034A6                     u3938:
  7986   0034A6  0E01               	movlw	1
  7987   0034A8  6E06               	movwf	(??_ADC_Read+3)^0,c
  7988   0034AA  2A05               	incf	(??_ADC_Read+2)^0,f,c
  7989   0034AC  EF5A  F01A         	goto	u3944
  7990   0034B0                     u3945:
  7991   0034B0  90D8               	bcf	status,0,c
  7992   0034B2  3606               	rlcf	(??_ADC_Read+3)^0,f,c
  7993   0034B4                     u3944:
  7994   0034B4  2E05               	decfsz	(??_ADC_Read+2)^0,f,c
  7995   0034B6  EF58  F01A         	goto	u3945
  7996   0034BA  5006               	movf	(??_ADC_Read+3)^0,w,c
  7997   0034BC  1004               	iorwf	(??_ADC_Read+1)^0,w,c
  7998   0034BE  12C2               	iorwf	194,f,c	;volatile
  7999   0034C0                     l169:
  8000   0034C0  B2C2               	btfsc	194,1,c	;volatile
  8001   0034C2  EF65  F01A         	goto	u3951
  8002   0034C6  EF67  F01A         	goto	u3950
  8003   0034CA                     u3951:
  8004   0034CA  EF60  F01A         	goto	l169
  8005   0034CE                     u3950:
  8006   0034CE                     
  8007                           ;newmain1.c: 33:     digital = (ADRESH*256) | (ADRESL);
  8008   0034CE  50C3               	movf	195,w,c	;volatile
  8009   0034D0  CFC4 F003          	movff	4036,??_ADC_Read	;volatile
  8010   0034D4  6A04               	clrf	(??_ADC_Read+1)^0,c
  8011   0034D6  C003  F004         	movff	??_ADC_Read,??_ADC_Read+1
  8012   0034DA  6A03               	clrf	??_ADC_Read^0,c
  8013   0034DC  1003               	iorwf	??_ADC_Read^0,w,c
  8014   0034DE  6E07               	movwf	ADC_Read@digital^0,c
  8015   0034E0  5004               	movf	(??_ADC_Read+1)^0,w,c
  8016   0034E2  6E08               	movwf	(ADC_Read@digital+1)^0,c
  8017   0034E4                     
  8018                           ;newmain1.c: 34:     return(digital);
  8019   0034E4  C007  F001         	movff	ADC_Read@digital,?_ADC_Read
  8020   0034E8  C008  F002         	movff	ADC_Read@digital+1,?_ADC_Read+1
  8021   0034EC  0012               	return		;funcret
  8022   0034EE                     __end_of_ADC_Read:
  8023                           	callstack 0
  8024                           
  8025 ;; *************** function _LCD_Init *****************
  8026 ;; Defined at:
  8027 ;;		line 80 in file "lcd.c"
  8028 ;; Parameters:    Size  Location     Type
  8029 ;;  I2C_Add         1    wreg     unsigned char 
  8030 ;; Auto vars:     Size  Location     Type
  8031 ;;  I2C_Add         1    6[COMRAM] unsigned char 
  8032 ;; Return value:  Size  Location     Type
  8033 ;;                  1    wreg      void 
  8034 ;; Registers used:
  8035 ;;		wreg, status,2, status,0, cstack
  8036 ;; Tracked objects:
  8037 ;;		On entry : 0/0
  8038 ;;		On exit  : 0/0
  8039 ;;		Unchanged: 0/0
  8040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8041 ;;      Params:         0       0       0       0       0       0       0       0       0
  8042 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8043 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8044 ;;      Totals:         2       0       0       0       0       0       0       0       0
  8045 ;;Total ram usage:        2 bytes
  8046 ;; Hardware stack levels used: 1
  8047 ;; Hardware stack levels required when called: 5
  8048 ;; This function calls:
  8049 ;;		_IO_Expander_Write
  8050 ;;		_LCD_CMD
  8051 ;; This function is called by:
  8052 ;;		_main
  8053 ;; This function uses a non-reentrant model
  8054 ;;
  8055                           
  8056                           	psect	text33
  8057   003178                     __ptext33:
  8058                           	callstack 0
  8059   003178                     _LCD_Init:
  8060                           	callstack 25
  8061                           
  8062                           ;incstack = 0
  8063                           ;LCD_Init@I2C_Add stored from wreg
  8064   003178  6E07               	movwf	LCD_Init@I2C_Add^0,c
  8065   00317A                     
  8066                           ;lcd.c: 80: void LCD_Init(unsigned char I2C_Add);lcd.c: 81: {;lcd.c: 82:   i2c_add = I2C
      +                          _Add;
  8067   00317A  C007  F0D2         	movff	LCD_Init@I2C_Add,_i2c_add
  8068   00317E                     
  8069                           ;lcd.c: 83:   IO_Expander_Write(0x00);
  8070   00317E  0E00               	movlw	0
  8071   003180  EC71  F01C         	call	_IO_Expander_Write
  8072   003184                     
  8073                           ;lcd.c: 84:   _delay((unsigned long)((30)*(4000000/4000.0)));
  8074   003184  0E27               	movlw	39
  8075   003186  6E06               	movwf	??_LCD_Init^0,c
  8076   003188  0EF5               	movlw	245
  8077   00318A                     u5707:
  8078   00318A  2EE8               	decfsz	wreg,f,c
  8079   00318C  D7FE               	bra	u5707
  8080   00318E  2E06               	decfsz	??_LCD_Init^0,f,c
  8081   003190  D7FC               	bra	u5707
  8082   003192  0000               	nop	
  8083                           
  8084                           ;lcd.c: 85:   LCD_CMD(0x03);
  8085   003194  0E03               	movlw	3
  8086   003196  EC8E  F01C         	call	_LCD_CMD
  8087   00319A                     
  8088                           ;lcd.c: 86:   _delay((unsigned long)((5)*(4000000/4000.0)));
  8089   00319A  0E07               	movlw	7
  8090   00319C  6E06               	movwf	??_LCD_Init^0,c
  8091   00319E  0E7D               	movlw	125
  8092   0031A0                     u5717:
  8093   0031A0  2EE8               	decfsz	wreg,f,c
  8094   0031A2  D7FE               	bra	u5717
  8095   0031A4  2E06               	decfsz	??_LCD_Init^0,f,c
  8096   0031A6  D7FC               	bra	u5717
  8097   0031A8  0000               	nop	
  8098   0031AA                     
  8099                           ;lcd.c: 87:   LCD_CMD(0x03);
  8100   0031AA  0E03               	movlw	3
  8101   0031AC  EC8E  F01C         	call	_LCD_CMD
  8102                           
  8103                           ;lcd.c: 88:   _delay((unsigned long)((5)*(4000000/4000.0)));
  8104   0031B0  0E07               	movlw	7
  8105   0031B2  6E06               	movwf	??_LCD_Init^0,c
  8106   0031B4  0E7D               	movlw	125
  8107   0031B6                     u5727:
  8108   0031B6  2EE8               	decfsz	wreg,f,c
  8109   0031B8  D7FE               	bra	u5727
  8110   0031BA  2E06               	decfsz	??_LCD_Init^0,f,c
  8111   0031BC  D7FC               	bra	u5727
  8112   0031BE  0000               	nop	
  8113   0031C0                     
  8114                           ;lcd.c: 89:   LCD_CMD(0x03);
  8115   0031C0  0E03               	movlw	3
  8116   0031C2  EC8E  F01C         	call	_LCD_CMD
  8117   0031C6                     
  8118                           ;lcd.c: 90:   _delay((unsigned long)((5)*(4000000/4000.0)));
  8119   0031C6  0E07               	movlw	7
  8120   0031C8  6E06               	movwf	??_LCD_Init^0,c
  8121   0031CA  0E7D               	movlw	125
  8122   0031CC                     u5737:
  8123   0031CC  2EE8               	decfsz	wreg,f,c
  8124   0031CE  D7FE               	bra	u5737
  8125   0031D0  2E06               	decfsz	??_LCD_Init^0,f,c
  8126   0031D2  D7FC               	bra	u5737
  8127   0031D4  0000               	nop	
  8128                           
  8129                           ;lcd.c: 91:   LCD_CMD(0x02);
  8130   0031D6  0E02               	movlw	2
  8131   0031D8  EC8E  F01C         	call	_LCD_CMD
  8132   0031DC                     
  8133                           ;lcd.c: 92:   _delay((unsigned long)((5)*(4000000/4000.0)));
  8134   0031DC  0E07               	movlw	7
  8135   0031DE  6E06               	movwf	??_LCD_Init^0,c
  8136   0031E0  0E7D               	movlw	125
  8137   0031E2                     u5747:
  8138   0031E2  2EE8               	decfsz	wreg,f,c
  8139   0031E4  D7FE               	bra	u5747
  8140   0031E6  2E06               	decfsz	??_LCD_Init^0,f,c
  8141   0031E8  D7FC               	bra	u5747
  8142   0031EA  0000               	nop	
  8143   0031EC                     
  8144                           ;lcd.c: 93:   LCD_CMD(0x20 | (2 << 2));
  8145   0031EC  0E28               	movlw	40
  8146   0031EE  EC8E  F01C         	call	_LCD_CMD
  8147                           
  8148                           ;lcd.c: 94:   _delay((unsigned long)((50)*(4000000/4000.0)));
  8149   0031F2  0E41               	movlw	65
  8150   0031F4  6E06               	movwf	??_LCD_Init^0,c
  8151   0031F6  0EEE               	movlw	238
  8152   0031F8                     u5757:
  8153   0031F8  2EE8               	decfsz	wreg,f,c
  8154   0031FA  D7FE               	bra	u5757
  8155   0031FC  2E06               	decfsz	??_LCD_Init^0,f,c
  8156   0031FE  D7FC               	bra	u5757
  8157   003200  D000               	nop2	
  8158   003202                     
  8159                           ;lcd.c: 95:   LCD_CMD(0x0C);
  8160   003202  0E0C               	movlw	12
  8161   003204  EC8E  F01C         	call	_LCD_CMD
  8162   003208                     
  8163                           ;lcd.c: 96:   _delay((unsigned long)((50)*(4000000/4000.0)));
  8164   003208  0E41               	movlw	65
  8165   00320A  6E06               	movwf	??_LCD_Init^0,c
  8166   00320C  0EEE               	movlw	238
  8167   00320E                     u5767:
  8168   00320E  2EE8               	decfsz	wreg,f,c
  8169   003210  D7FE               	bra	u5767
  8170   003212  2E06               	decfsz	??_LCD_Init^0,f,c
  8171   003214  D7FC               	bra	u5767
  8172   003216  D000               	nop2	
  8173                           
  8174                           ;lcd.c: 97:   LCD_CMD(0x01);
  8175   003218  0E01               	movlw	1
  8176   00321A  EC8E  F01C         	call	_LCD_CMD
  8177   00321E                     
  8178                           ;lcd.c: 98:   _delay((unsigned long)((50)*(4000000/4000.0)));
  8179   00321E  0E41               	movlw	65
  8180   003220  6E06               	movwf	??_LCD_Init^0,c
  8181   003222  0EEE               	movlw	238
  8182   003224                     u5777:
  8183   003224  2EE8               	decfsz	wreg,f,c
  8184   003226  D7FE               	bra	u5777
  8185   003228  2E06               	decfsz	??_LCD_Init^0,f,c
  8186   00322A  D7FC               	bra	u5777
  8187   00322C  D000               	nop2	
  8188   00322E                     
  8189                           ;lcd.c: 99:   LCD_CMD(0x04 | 0x02);
  8190   00322E  0E06               	movlw	6
  8191   003230  EC8E  F01C         	call	_LCD_CMD
  8192                           
  8193                           ;lcd.c: 100:   _delay((unsigned long)((50)*(4000000/4000.0)));
  8194   003234  0E41               	movlw	65
  8195   003236  6E06               	movwf	??_LCD_Init^0,c
  8196   003238  0EEE               	movlw	238
  8197   00323A                     u5787:
  8198   00323A  2EE8               	decfsz	wreg,f,c
  8199   00323C  D7FE               	bra	u5787
  8200   00323E  2E06               	decfsz	??_LCD_Init^0,f,c
  8201   003240  D7FC               	bra	u5787
  8202   003242  D000               	nop2	
  8203   003244  0012               	return		;funcret
  8204   003246                     __end_of_LCD_Init:
  8205                           	callstack 0
  8206                           
  8207 ;; *************** function _LCD_Clear *****************
  8208 ;; Defined at:
  8209 ;;		line 183 in file "lcd.c"
  8210 ;; Parameters:    Size  Location     Type
  8211 ;;		None
  8212 ;; Auto vars:     Size  Location     Type
  8213 ;;		None
  8214 ;; Return value:  Size  Location     Type
  8215 ;;                  1    wreg      void 
  8216 ;; Registers used:
  8217 ;;		wreg, status,2, status,0, cstack
  8218 ;; Tracked objects:
  8219 ;;		On entry : 0/0
  8220 ;;		On exit  : 0/0
  8221 ;;		Unchanged: 0/0
  8222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8223 ;;      Params:         0       0       0       0       0       0       0       0       0
  8224 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8225 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8226 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8227 ;;Total ram usage:        0 bytes
  8228 ;; Hardware stack levels used: 1
  8229 ;; Hardware stack levels required when called: 5
  8230 ;; This function calls:
  8231 ;;		_LCD_CMD
  8232 ;; This function is called by:
  8233 ;;		_main
  8234 ;; This function uses a non-reentrant model
  8235 ;;
  8236                           
  8237                           	psect	text34
  8238   00397E                     __ptext34:
  8239                           	callstack 0
  8240   00397E                     _LCD_Clear:
  8241                           	callstack 25
  8242   00397E                     
  8243                           ;lcd.c: 185:   LCD_CMD(0x01);
  8244   00397E  0E01               	movlw	1
  8245   003980  EC8E  F01C         	call	_LCD_CMD
  8246   003984                     
  8247                           ;lcd.c: 186:   _delay((unsigned long)((40)*(4000000/4000000.0)));
  8248   003984  0E0D               	movlw	13
  8249   003986                     u5797:
  8250   003986  2EE8               	decfsz	wreg,f,c
  8251   003988  D7FE               	bra	u5797
  8252   00398A  0000               	nop	
  8253   00398C  0012               	return		;funcret
  8254   00398E                     __end_of_LCD_Clear:
  8255                           	callstack 0
  8256                           
  8257 ;; *************** function _LCD_CMD *****************
  8258 ;; Defined at:
  8259 ;;		line 120 in file "lcd.c"
  8260 ;; Parameters:    Size  Location     Type
  8261 ;;  CMD             1    wreg     unsigned char 
  8262 ;; Auto vars:     Size  Location     Type
  8263 ;;  CMD             1    4[COMRAM] unsigned char 
  8264 ;; Return value:  Size  Location     Type
  8265 ;;                  1    wreg      void 
  8266 ;; Registers used:
  8267 ;;		wreg, status,2, status,0, cstack
  8268 ;; Tracked objects:
  8269 ;;		On entry : 0/0
  8270 ;;		On exit  : 0/0
  8271 ;;		Unchanged: 0/0
  8272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8273 ;;      Params:         0       0       0       0       0       0       0       0       0
  8274 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8275 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8276 ;;      Totals:         1       0       0       0       0       0       0       0       0
  8277 ;;Total ram usage:        1 bytes
  8278 ;; Hardware stack levels used: 1
  8279 ;; Hardware stack levels required when called: 4
  8280 ;; This function calls:
  8281 ;;		_LCD_Write_4Bit
  8282 ;; This function is called by:
  8283 ;;		_LCD_Init
  8284 ;;		_LCD_Set_Cursor
  8285 ;;		_LCD_Clear
  8286 ;;		_LCD_SL
  8287 ;;		_LCD_SR
  8288 ;; This function uses a non-reentrant model
  8289 ;;
  8290                           
  8291                           	psect	text35
  8292   00391C                     __ptext35:
  8293                           	callstack 0
  8294   00391C                     _LCD_CMD:
  8295                           	callstack 24
  8296                           
  8297                           ;incstack = 0
  8298                           ;LCD_CMD@CMD stored from wreg
  8299   00391C  6E05               	movwf	LCD_CMD@CMD^0,c
  8300   00391E                     
  8301                           ;lcd.c: 120: void LCD_CMD(unsigned char CMD);lcd.c: 121: {;lcd.c: 122:   RS = 0;
  8302   00391E  0E00               	movlw	0
  8303   003920  0100               	movlb	0	; () banked
  8304   003922  6FD3               	movwf	_RS& (0+255),b
  8305   003924                     
  8306                           ; BSR set to: 0
  8307                           ;lcd.c: 123:   LCD_Write_4Bit(CMD & 0xF0);
  8308   003924  5005               	movf	LCD_CMD@CMD^0,w,c
  8309   003926  0BF0               	andlw	240
  8310   003928  EC60  F01C         	call	_LCD_Write_4Bit
  8311   00392C                     
  8312                           ;lcd.c: 124:   LCD_Write_4Bit((CMD << 4) & 0xF0);
  8313   00392C  3805               	swapf	LCD_CMD@CMD^0,w,c
  8314   00392E  0BF0               	andlw	240
  8315   003930  0BF0               	andlw	240
  8316   003932  EC60  F01C         	call	_LCD_Write_4Bit
  8317   003936  0012               	return		;funcret
  8318   003938                     __end_of_LCD_CMD:
  8319                           	callstack 0
  8320                           
  8321 ;; *************** function _LCD_Write_4Bit *****************
  8322 ;; Defined at:
  8323 ;;		line 111 in file "lcd.c"
  8324 ;; Parameters:    Size  Location     Type
  8325 ;;  Nibble          1    wreg     unsigned char 
  8326 ;; Auto vars:     Size  Location     Type
  8327 ;;  Nibble          1    3[COMRAM] unsigned char 
  8328 ;; Return value:  Size  Location     Type
  8329 ;;                  1    wreg      void 
  8330 ;; Registers used:
  8331 ;;		wreg, status,2, status,0, cstack
  8332 ;; Tracked objects:
  8333 ;;		On entry : 0/0
  8334 ;;		On exit  : 0/0
  8335 ;;		Unchanged: 0/0
  8336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8337 ;;      Params:         0       0       0       0       0       0       0       0       0
  8338 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8339 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8340 ;;      Totals:         1       0       0       0       0       0       0       0       0
  8341 ;;Total ram usage:        1 bytes
  8342 ;; Hardware stack levels used: 1
  8343 ;; Hardware stack levels required when called: 3
  8344 ;; This function calls:
  8345 ;;		_IO_Expander_Write
  8346 ;; This function is called by:
  8347 ;;		_LCD_CMD
  8348 ;;		_LCD_Write_Char
  8349 ;; This function uses a non-reentrant model
  8350 ;;
  8351                           
  8352                           	psect	text36
  8353   0038C0                     __ptext36:
  8354                           	callstack 0
  8355   0038C0                     _LCD_Write_4Bit:
  8356                           	callstack 24
  8357                           
  8358                           ;incstack = 0
  8359                           ;LCD_Write_4Bit@Nibble stored from wreg
  8360   0038C0  6E04               	movwf	LCD_Write_4Bit@Nibble^0,c
  8361   0038C2                     
  8362                           ;lcd.c: 111: void LCD_Write_4Bit(unsigned char Nibble);lcd.c: 112: {;lcd.c: 114:   Nibbl
      +                          e |= RS;
  8363   0038C2  0100               	movlb	0	; () banked
  8364   0038C4  51D3               	movf	_RS& (0+255),w,b
  8365   0038C6  1204               	iorwf	LCD_Write_4Bit@Nibble^0,f,c
  8366   0038C8                     
  8367                           ; BSR set to: 0
  8368                           ;lcd.c: 115:   IO_Expander_Write(Nibble | 0x04);
  8369   0038C8  5004               	movf	LCD_Write_4Bit@Nibble^0,w,c
  8370   0038CA  0904               	iorlw	4
  8371   0038CC  EC71  F01C         	call	_IO_Expander_Write
  8372   0038D0                     
  8373                           ;lcd.c: 116:   IO_Expander_Write(Nibble & 0xFB);
  8374   0038D0  5004               	movf	LCD_Write_4Bit@Nibble^0,w,c
  8375   0038D2  0BFB               	andlw	251
  8376   0038D4  EC71  F01C         	call	_IO_Expander_Write
  8377   0038D8                     
  8378                           ;lcd.c: 117:   _delay((unsigned long)((50)*(4000000/4000000.0)));
  8379   0038D8  0E10               	movlw	16
  8380   0038DA                     u5807:
  8381   0038DA  2EE8               	decfsz	wreg,f,c
  8382   0038DC  D7FE               	bra	u5807
  8383   0038DE  D000               	nop2	
  8384   0038E0  0012               	return		;funcret
  8385   0038E2                     __end_of_LCD_Write_4Bit:
  8386                           	callstack 0
  8387                           
  8388 ;; *************** function _IO_Expander_Write *****************
  8389 ;; Defined at:
  8390 ;;		line 103 in file "lcd.c"
  8391 ;; Parameters:    Size  Location     Type
  8392 ;;  Data            1    wreg     unsigned char 
  8393 ;; Auto vars:     Size  Location     Type
  8394 ;;  Data            1    2[COMRAM] unsigned char 
  8395 ;; Return value:  Size  Location     Type
  8396 ;;                  1    wreg      void 
  8397 ;; Registers used:
  8398 ;;		wreg, status,2, status,0, cstack
  8399 ;; Tracked objects:
  8400 ;;		On entry : 0/0
  8401 ;;		On exit  : 0/0
  8402 ;;		Unchanged: 0/0
  8403 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8404 ;;      Params:         0       0       0       0       0       0       0       0       0
  8405 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8406 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8407 ;;      Totals:         1       0       0       0       0       0       0       0       0
  8408 ;;Total ram usage:        1 bytes
  8409 ;; Hardware stack levels used: 1
  8410 ;; Hardware stack levels required when called: 2
  8411 ;; This function calls:
  8412 ;;		_I2C_Master_Start
  8413 ;;		_I2C_Master_Stop
  8414 ;;		_I2C_Master_Write
  8415 ;; This function is called by:
  8416 ;;		_LCD_Init
  8417 ;;		_LCD_Write_4Bit
  8418 ;;		_Backlight
  8419 ;;		_noBacklight
  8420 ;; This function uses a non-reentrant model
  8421 ;;
  8422                           
  8423                           	psect	text37
  8424   0038E2                     __ptext37:
  8425                           	callstack 0
  8426   0038E2                     _IO_Expander_Write:
  8427                           	callstack 24
  8428                           
  8429                           ;incstack = 0
  8430                           ;IO_Expander_Write@Data stored from wreg
  8431   0038E2  6E03               	movwf	IO_Expander_Write@Data^0,c
  8432   0038E4                     
  8433                           ;lcd.c: 103: void IO_Expander_Write(unsigned char Data);lcd.c: 104: {;lcd.c: 105:   I2C_
      +                          Master_Start();
  8434   0038E4  ECCB  F01C         	call	_I2C_Master_Start	;wreg free
  8435                           
  8436                           ;lcd.c: 106:   I2C_Master_Write(i2c_add);
  8437   0038E8  0100               	movlb	0	; () banked
  8438   0038EA  51D2               	movf	_i2c_add& (0+255),w,b
  8439   0038EC  EC9C  F01C         	call	_I2C_Master_Write
  8440                           
  8441                           ;lcd.c: 107:   I2C_Master_Write(Data | BackLight_State);
  8442   0038F0  5003               	movf	IO_Expander_Write@Data^0,w,c
  8443   0038F2  0100               	movlb	0	; () banked
  8444   0038F4  11F4               	iorwf	_BackLight_State& (0+255),w,b
  8445   0038F6  EC9C  F01C         	call	_I2C_Master_Write
  8446                           
  8447                           ;lcd.c: 108:   I2C_Master_Stop();
  8448   0038FA  ECC7  F01C         	call	_I2C_Master_Stop	;wreg free
  8449   0038FE  0012               	return		;funcret
  8450   003900                     __end_of_IO_Expander_Write:
  8451                           	callstack 0
  8452                           
  8453 ;; *************** function _I2C_Master_Write *****************
  8454 ;; Defined at:
  8455 ;;		line 56 in file "lcd.c"
  8456 ;; Parameters:    Size  Location     Type
  8457 ;;  data            1    wreg     unsigned char 
  8458 ;; Auto vars:     Size  Location     Type
  8459 ;;  data            1    1[COMRAM] unsigned char 
  8460 ;; Return value:  Size  Location     Type
  8461 ;;                  1    wreg      unsigned char 
  8462 ;; Registers used:
  8463 ;;		wreg, status,2, status,0, cstack
  8464 ;; Tracked objects:
  8465 ;;		On entry : 0/0
  8466 ;;		On exit  : 0/0
  8467 ;;		Unchanged: 0/0
  8468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8469 ;;      Params:         0       0       0       0       0       0       0       0       0
  8470 ;;      Locals:         1       0       0       0       0       0       0       0       0
  8471 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8472 ;;      Totals:         1       0       0       0       0       0       0       0       0
  8473 ;;Total ram usage:        1 bytes
  8474 ;; Hardware stack levels used: 1
  8475 ;; Hardware stack levels required when called: 1
  8476 ;; This function calls:
  8477 ;;		_I2C_Master_Wait
  8478 ;; This function is called by:
  8479 ;;		_IO_Expander_Write
  8480 ;; This function uses a non-reentrant model
  8481 ;;
  8482                           
  8483                           	psect	text38
  8484   003938                     __ptext38:
  8485                           	callstack 0
  8486   003938                     _I2C_Master_Write:
  8487                           	callstack 24
  8488                           
  8489                           ;incstack = 0
  8490                           ;I2C_Master_Write@data stored from wreg
  8491   003938  6E02               	movwf	I2C_Master_Write@data^0,c
  8492   00393A                     
  8493                           ;lcd.c: 56: unsigned char I2C_Master_Write(unsigned char data);lcd.c: 57: {;lcd.c: 58:  
      +                             I2C_Master_Wait();
  8494   00393A  EC4D  F01C         	call	_I2C_Master_Wait	;wreg free
  8495   00393E                     
  8496                           ;lcd.c: 59:     SSPBUF = data;
  8497   00393E  C002  FFC9         	movff	I2C_Master_Write@data,4041	;volatile
  8498   003942                     l67:
  8499   003942  A69E               	btfss	3998,3,c	;volatile
  8500   003944  EFA6  F01C         	goto	u2451
  8501   003948  EFA8  F01C         	goto	u2450
  8502   00394C                     u2451:
  8503   00394C  EFA1  F01C         	goto	l67
  8504   003950                     u2450:
  8505   003950                     
  8506                           ;lcd.c: 61:  SSPIF = 0;
  8507   003950  969E               	bcf	3998,3,c	;volatile
  8508   003952  0012               	return		;funcret
  8509   003954                     __end_of_I2C_Master_Write:
  8510                           	callstack 0
  8511                           
  8512 ;; *************** function _I2C_Master_Stop *****************
  8513 ;; Defined at:
  8514 ;;		line 36 in file "lcd.c"
  8515 ;; Parameters:    Size  Location     Type
  8516 ;;		None
  8517 ;; Auto vars:     Size  Location     Type
  8518 ;;		None
  8519 ;; Return value:  Size  Location     Type
  8520 ;;                  1    wreg      void 
  8521 ;; Registers used:
  8522 ;;		wreg, status,2, status,0, cstack
  8523 ;; Tracked objects:
  8524 ;;		On entry : 0/0
  8525 ;;		On exit  : 0/0
  8526 ;;		Unchanged: 0/0
  8527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8528 ;;      Params:         0       0       0       0       0       0       0       0       0
  8529 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8530 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8531 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8532 ;;Total ram usage:        0 bytes
  8533 ;; Hardware stack levels used: 1
  8534 ;; Hardware stack levels required when called: 1
  8535 ;; This function calls:
  8536 ;;		_I2C_Master_Wait
  8537 ;; This function is called by:
  8538 ;;		_IO_Expander_Write
  8539 ;; This function uses a non-reentrant model
  8540 ;;
  8541                           
  8542                           	psect	text39
  8543   00398E                     __ptext39:
  8544                           	callstack 0
  8545   00398E                     _I2C_Master_Stop:
  8546                           	callstack 24
  8547   00398E                     
  8548                           ;lcd.c: 38:     I2C_Master_Wait();
  8549   00398E  EC4D  F01C         	call	_I2C_Master_Wait	;wreg free
  8550   003992                     
  8551                           ;lcd.c: 39:     PEN = 1;
  8552   003992  84C5               	bsf	4037,2,c	;volatile
  8553   003994  0012               	return		;funcret
  8554   003996                     __end_of_I2C_Master_Stop:
  8555                           	callstack 0
  8556                           
  8557 ;; *************** function _I2C_Master_Start *****************
  8558 ;; Defined at:
  8559 ;;		line 24 in file "lcd.c"
  8560 ;; Parameters:    Size  Location     Type
  8561 ;;		None
  8562 ;; Auto vars:     Size  Location     Type
  8563 ;;		None
  8564 ;; Return value:  Size  Location     Type
  8565 ;;                  1    wreg      void 
  8566 ;; Registers used:
  8567 ;;		wreg, status,2, status,0, cstack
  8568 ;; Tracked objects:
  8569 ;;		On entry : 0/0
  8570 ;;		On exit  : 0/0
  8571 ;;		Unchanged: 0/0
  8572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8573 ;;      Params:         0       0       0       0       0       0       0       0       0
  8574 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8575 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8576 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8577 ;;Total ram usage:        0 bytes
  8578 ;; Hardware stack levels used: 1
  8579 ;; Hardware stack levels required when called: 1
  8580 ;; This function calls:
  8581 ;;		_I2C_Master_Wait
  8582 ;; This function is called by:
  8583 ;;		_IO_Expander_Write
  8584 ;; This function uses a non-reentrant model
  8585 ;;
  8586                           
  8587                           	psect	text40
  8588   003996                     __ptext40:
  8589                           	callstack 0
  8590   003996                     _I2C_Master_Start:
  8591                           	callstack 24
  8592   003996                     
  8593                           ;lcd.c: 26:     I2C_Master_Wait();
  8594   003996  EC4D  F01C         	call	_I2C_Master_Wait	;wreg free
  8595   00399A                     
  8596                           ;lcd.c: 27:     SEN = 1;
  8597   00399A  80C5               	bsf	4037,0,c	;volatile
  8598   00399C  0012               	return		;funcret
  8599   00399E                     __end_of_I2C_Master_Start:
  8600                           	callstack 0
  8601                           
  8602 ;; *************** function _I2C_Master_Wait *****************
  8603 ;; Defined at:
  8604 ;;		line 19 in file "lcd.c"
  8605 ;; Parameters:    Size  Location     Type
  8606 ;;		None
  8607 ;; Auto vars:     Size  Location     Type
  8608 ;;		None
  8609 ;; Return value:  Size  Location     Type
  8610 ;;                  1    wreg      void 
  8611 ;; Registers used:
  8612 ;;		wreg, status,2, status,0
  8613 ;; Tracked objects:
  8614 ;;		On entry : 0/0
  8615 ;;		On exit  : 0/0
  8616 ;;		Unchanged: 0/0
  8617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8618 ;;      Params:         0       0       0       0       0       0       0       0       0
  8619 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8620 ;;      Temps:          1       0       0       0       0       0       0       0       0
  8621 ;;      Totals:         1       0       0       0       0       0       0       0       0
  8622 ;;Total ram usage:        1 bytes
  8623 ;; Hardware stack levels used: 1
  8624 ;; This function calls:
  8625 ;;		Nothing
  8626 ;; This function is called by:
  8627 ;;		_I2C_Master_Start
  8628 ;;		_I2C_Master_Stop
  8629 ;;		_I2C_Master_Write
  8630 ;;		_I2C_Master_RepeatedStart
  8631 ;;		_I2C_ACK
  8632 ;;		_I2C_NACK
  8633 ;;		_I2C_Read_Byte
  8634 ;; This function uses a non-reentrant model
  8635 ;;
  8636                           
  8637                           	psect	text41
  8638   00389A                     __ptext41:
  8639                           	callstack 0
  8640   00389A                     _I2C_Master_Wait:
  8641                           	callstack 24
  8642   00389A                     l46:
  8643   00389A  B4C7               	btfsc	199,2,c	;volatile
  8644   00389C  EF52  F01C         	goto	u2031
  8645   0038A0  EF54  F01C         	goto	u2030
  8646   0038A4                     u2031:
  8647   0038A4  EF4D  F01C         	goto	l46
  8648   0038A8                     u2030:
  8649   0038A8  CFC5 F001          	movff	4037,??_I2C_Master_Wait	;volatile
  8650   0038AC  0E1F               	movlw	31
  8651   0038AE  1601               	andwf	??_I2C_Master_Wait^0,f,c
  8652   0038B0  A4D8               	btfss	status,2,c
  8653   0038B2  EF5D  F01C         	goto	u2041
  8654   0038B6  EF5F  F01C         	goto	u2040
  8655   0038BA                     u2041:
  8656   0038BA  EF4D  F01C         	goto	l46
  8657   0038BE                     u2040:
  8658   0038BE  0012               	return		;funcret
  8659   0038C0                     __end_of_I2C_Master_Wait:
  8660                           	callstack 0
  8661                           
  8662 ;; *************** function _I2C_Master_Init *****************
  8663 ;; Defined at:
  8664 ;;		line 9 in file "lcd.c"
  8665 ;; Parameters:    Size  Location     Type
  8666 ;;		None
  8667 ;; Auto vars:     Size  Location     Type
  8668 ;;		None
  8669 ;; Return value:  Size  Location     Type
  8670 ;;                  1    wreg      void 
  8671 ;; Registers used:
  8672 ;;		wreg, status,2
  8673 ;; Tracked objects:
  8674 ;;		On entry : 0/0
  8675 ;;		On exit  : 0/0
  8676 ;;		Unchanged: 0/0
  8677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8678 ;;      Params:         0       0       0       0       0       0       0       0       0
  8679 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8680 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8681 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8682 ;;Total ram usage:        0 bytes
  8683 ;; Hardware stack levels used: 1
  8684 ;; This function calls:
  8685 ;;		Nothing
  8686 ;; This function is called by:
  8687 ;;		_main
  8688 ;; This function uses a non-reentrant model
  8689 ;;
  8690                           
  8691                           	psect	text42
  8692   003954                     __ptext42:
  8693                           	callstack 0
  8694   003954                     _I2C_Master_Init:
  8695                           	callstack 30
  8696   003954                     
  8697                           ;lcd.c: 11:   SSPCON1 = 0x28;
  8698   003954  0E28               	movlw	40
  8699   003956  6EC6               	movwf	198,c	;volatile
  8700                           
  8701                           ;lcd.c: 12:   SSPCON2 = 0x00;
  8702   003958  0E00               	movlw	0
  8703   00395A  6EC5               	movwf	197,c	;volatile
  8704                           
  8705                           ;lcd.c: 13:   SSPSTAT = 0x00;
  8706   00395C  0E00               	movlw	0
  8707   00395E  6EC7               	movwf	199,c	;volatile
  8708                           
  8709                           ;lcd.c: 14:   SSPADD = ((4000000/4)/100000) - 1;
  8710   003960  0E09               	movlw	9
  8711   003962  6EC8               	movwf	200,c	;volatile
  8712   003964                     
  8713                           ;lcd.c: 15:   TRISBbits.RB1 = 1;
  8714   003964  8293               	bsf	147,1,c	;volatile
  8715   003966                     
  8716                           ;lcd.c: 16:   TRISBbits.RB0 = 1;
  8717   003966  8093               	bsf	147,0,c	;volatile
  8718   003968  0012               	return		;funcret
  8719   00396A                     __end_of_I2C_Master_Init:
  8720                           	callstack 0
  8721                           
  8722 ;; *************** function _ADC_Init *****************
  8723 ;; Defined at:
  8724 ;;		line 19 in file "newmain1.c"
  8725 ;; Parameters:    Size  Location     Type
  8726 ;;		None
  8727 ;; Auto vars:     Size  Location     Type
  8728 ;;		None
  8729 ;; Return value:  Size  Location     Type
  8730 ;;                  1    wreg      void 
  8731 ;; Registers used:
  8732 ;;		wreg, status,2
  8733 ;; Tracked objects:
  8734 ;;		On entry : 0/0
  8735 ;;		On exit  : 0/0
  8736 ;;		Unchanged: 0/0
  8737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  8738 ;;      Params:         0       0       0       0       0       0       0       0       0
  8739 ;;      Locals:         0       0       0       0       0       0       0       0       0
  8740 ;;      Temps:          0       0       0       0       0       0       0       0       0
  8741 ;;      Totals:         0       0       0       0       0       0       0       0       0
  8742 ;;Total ram usage:        0 bytes
  8743 ;; Hardware stack levels used: 1
  8744 ;; This function calls:
  8745 ;;		Nothing
  8746 ;; This function is called by:
  8747 ;;		_main
  8748 ;; This function uses a non-reentrant model
  8749 ;;
  8750                           
  8751                           	psect	text43
  8752   00396A                     __ptext43:
  8753                           	callstack 0
  8754   00396A                     _ADC_Init:
  8755                           	callstack 30
  8756   00396A                     
  8757                           ;newmain1.c: 21:     TRISA = 0xff;
  8758   00396A  6892               	setf	146,c	;volatile
  8759   00396C                     
  8760                           ;newmain1.c: 22:     ADCON1=0b11001101;
  8761   00396C  0ECD               	movlw	205
  8762   00396E  6EC1               	movwf	193,c	;volatile
  8763                           
  8764                           ;newmain1.c: 23:     ADCON2 = 0x92;
  8765   003970  0E92               	movlw	146
  8766   003972  6EC0               	movwf	192,c	;volatile
  8767                           
  8768                           ;newmain1.c: 24:     ADRESH=0;
  8769   003974  0E00               	movlw	0
  8770   003976  6EC4               	movwf	196,c	;volatile
  8771                           
  8772                           ;newmain1.c: 25:     ADRESL=0;
  8773   003978  0E00               	movlw	0
  8774   00397A  6EC3               	movwf	195,c	;volatile
  8775   00397C  0012               	return		;funcret
  8776   00397E                     __end_of_ADC_Init:
  8777                           	callstack 0
  8778                           
  8779                           	psect	rparam
  8780   000000                     
  8781                           	psect	config
  8782                           
  8783                           ;Config register CONFIG1L @ 0x300000
  8784                           ;	PLL Prescaler Selection bits
  8785                           ;	PLLDIV = 2, Divide by 2 (8 MHz oscillator input)
  8786                           ;	System Clock Postscaler Selection bits
  8787                           ;	CPUDIV = OSC1_PLL2, [Primary Oscillator Src: /1][96 MHz PLL Src: /2]
  8788                           ;	USB Clock Selection bit (used in Full-Speed USB mode only; UCFG:FSEN = 1)
  8789                           ;	USBDIV = 1, USB clock source comes directly from the primary oscillator block with no 
      +                          postscale
  8790   300000                     	org	3145728
  8791   300000  01                 	db	1
  8792                           
  8793                           ;Config register CONFIG1H @ 0x300001
  8794                           ;	Oscillator Selection bits
  8795                           ;	FOSC = XT_XT, XT oscillator (XT)
  8796                           ;	Fail-Safe Clock Monitor Enable bit
  8797                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  8798                           ;	Internal/External Oscillator Switchover bit
  8799                           ;	IESO = OFF, Oscillator Switchover mode disabled
  8800   300001                     	org	3145729
  8801   300001  00                 	db	0
  8802                           
  8803                           ;Config register CONFIG2L @ 0x300002
  8804                           ;	Power-up Timer Enable bit
  8805                           ;	PWRT = OFF, PWRT disabled
  8806                           ;	Brown-out Reset Enable bits
  8807                           ;	BOR = OFF, Brown-out Reset disabled in hardware and software
  8808                           ;	Brown-out Reset Voltage bits
  8809                           ;	BORV = 3, Minimum setting 2.05V
  8810                           ;	USB Voltage Regulator Enable bit
  8811                           ;	VREGEN = OFF, USB voltage regulator disabled
  8812   300002                     	org	3145730
  8813   300002  19                 	db	25
  8814                           
  8815                           ;Config register CONFIG2H @ 0x300003
  8816                           ;	Watchdog Timer Enable bit
  8817                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  8818                           ;	Watchdog Timer Postscale Select bits
  8819                           ;	WDTPS = 32768, 1:32768
  8820   300003                     	org	3145731
  8821   300003  1E                 	db	30
  8822                           
  8823                           ; Padding undefined space
  8824   300004                     	org	3145732
  8825   300004  FF                 	db	255
  8826                           
  8827                           ;Config register CONFIG3H @ 0x300005
  8828                           ;	CCP2 MUX bit
  8829                           ;	CCP2MX = OFF, CCP2 input/output is multiplexed with RB3
  8830                           ;	PORTB A/D Enable bit
  8831                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  8832                           ;	Low-Power Timer 1 Oscillator Enable bit
  8833                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  8834                           ;	MCLR Pin Enable bit
  8835                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  8836   300005                     	org	3145733
  8837   300005  80                 	db	128
  8838                           
  8839                           ;Config register CONFIG4L @ 0x300006
  8840                           ;	Stack Full/Underflow Reset Enable bit
  8841                           ;	STVREN = ON, Stack full/underflow will cause Reset
  8842                           ;	Single-Supply ICSP Enable bit
  8843                           ;	LVP = OFF, Single-Supply ICSP disabled
  8844                           ;	Dedicated In-Circuit Debug/Programming Port (ICPORT) Enable bit
  8845                           ;	ICPRT = OFF, ICPORT disabled
  8846                           ;	Extended Instruction Set Enable bit
  8847                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  8848                           ;	Background Debugger Enable bit
  8849                           ;	DEBUG = 0x1, unprogrammed default
  8850   300006                     	org	3145734
  8851   300006  81                 	db	129
  8852                           
  8853                           ; Padding undefined space
  8854   300007                     	org	3145735
  8855   300007  FF                 	db	255
  8856                           
  8857                           ;Config register CONFIG5L @ 0x300008
  8858                           ;	Code Protection bit
  8859                           ;	CP0 = OFF, Block 0 (000800-001FFFh) is not code-protected
  8860                           ;	Code Protection bit
  8861                           ;	CP1 = OFF, Block 1 (002000-003FFFh) is not code-protected
  8862                           ;	Code Protection bit
  8863                           ;	CP2 = OFF, Block 2 (004000-005FFFh) is not code-protected
  8864                           ;	Code Protection bit
  8865                           ;	CP3 = OFF, Block 3 (006000-007FFFh) is not code-protected
  8866   300008                     	org	3145736
  8867   300008  0F                 	db	15
  8868                           
  8869                           ;Config register CONFIG5H @ 0x300009
  8870                           ;	Boot Block Code Protection bit
  8871                           ;	CPB = OFF, Boot block (000000-0007FFh) is not code-protected
  8872                           ;	Data EEPROM Code Protection bit
  8873                           ;	CPD = OFF, Data EEPROM is not code-protected
  8874   300009                     	org	3145737
  8875   300009  C0                 	db	192
  8876                           
  8877                           ;Config register CONFIG6L @ 0x30000A
  8878                           ;	Write Protection bit
  8879                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) is not write-protected
  8880                           ;	Write Protection bit
  8881                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) is not write-protected
  8882                           ;	Write Protection bit
  8883                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) is not write-protected
  8884                           ;	Write Protection bit
  8885                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) is not write-protected
  8886   30000A                     	org	3145738
  8887   30000A  0F                 	db	15
  8888                           
  8889                           ;Config register CONFIG6H @ 0x30000B
  8890                           ;	Configuration Register Write Protection bit
  8891                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) are not write-protected
  8892                           ;	Boot Block Write Protection bit
  8893                           ;	WRTB = OFF, Boot block (000000-0007FFh) is not write-protected
  8894                           ;	Data EEPROM Write Protection bit
  8895                           ;	WRTD = OFF, Data EEPROM is not write-protected
  8896   30000B                     	org	3145739
  8897   30000B  E0                 	db	224
  8898                           
  8899                           ;Config register CONFIG7L @ 0x30000C
  8900                           ;	Table Read Protection bit
  8901                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) is not protected from table reads executed in ot
      +                          her blocks
  8902                           ;	Table Read Protection bit
  8903                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) is not protected from table reads executed in ot
      +                          her blocks
  8904                           ;	Table Read Protection bit
  8905                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) is not protected from table reads executed in ot
      +                          her blocks
  8906                           ;	Table Read Protection bit
  8907                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) is not protected from table reads executed in ot
      +                          her blocks
  8908   30000C                     	org	3145740
  8909   30000C  0F                 	db	15
  8910                           
  8911                           ;Config register CONFIG7H @ 0x30000D
  8912                           ;	Boot Block Table Read Protection bit
  8913                           ;	EBTRB = OFF, Boot block (000000-0007FFh) is not protected from table reads executed in
      +                           other blocks
  8914   30000D                     	org	3145741
  8915   30000D  40                 	db	64
  8916                           tosu	equ	0xFFF
  8917                           tosh	equ	0xFFE
  8918                           tosl	equ	0xFFD
  8919                           stkptr	equ	0xFFC
  8920                           pclatu	equ	0xFFB
  8921                           pclath	equ	0xFFA
  8922                           pcl	equ	0xFF9
  8923                           tblptru	equ	0xFF8
  8924                           tblptrh	equ	0xFF7
  8925                           tblptrl	equ	0xFF6
  8926                           tablat	equ	0xFF5
  8927                           prodh	equ	0xFF4
  8928                           prodl	equ	0xFF3
  8929                           indf0	equ	0xFEF
  8930                           postinc0	equ	0xFEE
  8931                           postdec0	equ	0xFED
  8932                           preinc0	equ	0xFEC
  8933                           plusw0	equ	0xFEB
  8934                           fsr0h	equ	0xFEA
  8935                           fsr0l	equ	0xFE9
  8936                           wreg	equ	0xFE8
  8937                           indf1	equ	0xFE7
  8938                           postinc1	equ	0xFE6
  8939                           postdec1	equ	0xFE5
  8940                           preinc1	equ	0xFE4
  8941                           plusw1	equ	0xFE3
  8942                           fsr1h	equ	0xFE2
  8943                           fsr1l	equ	0xFE1
  8944                           bsr	equ	0xFE0
  8945                           indf2	equ	0xFDF
  8946                           postinc2	equ	0xFDE
  8947                           postdec2	equ	0xFDD
  8948                           preinc2	equ	0xFDC
  8949                           plusw2	equ	0xFDB
  8950                           fsr2h	equ	0xFDA
  8951                           fsr2l	equ	0xFD9
  8952                           status	equ	0xFD8

Data Sizes:
    Strings     37
    Constant    24
    Data        1
    BSS         169
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160     91     149
    BANK1           256      0     112
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    efgtoa@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    LCD_Write_String@Str	PTR unsigned char  size(2) Largest target is 32
		 -> TempinSTR(BANK0[32]), TempoutSTR(BANK1[32]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@d1	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    memcpy@s1	PTR const void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(BANK0[1]), 

    S736$buffer	PTR unsigned char  size(2) Largest target is 0

    S736$source	PTR const unsigned char  size(2) Largest target is 0

    sp__memcpy	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 15
		 -> STR_1(CODE[14]), STR_2(CODE[15]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 32
		 -> TempinSTR(BANK0[32]), TempoutSTR(BANK1[32]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(1) Largest target is 4
		 -> STR_3(CODE[4]), STR_6(CODE[4]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 15
		 -> STR_1(CODE[14]), STR_2(CODE[15]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(BANK0[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 15
		 -> STR_1(CODE[14]), STR_2(CODE[15]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 15
		 -> STR_1(CODE[14]), STR_2(CODE[15]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 


Critical Paths under _main in COMRAM

    _termistorin->_logf
    _logf->___fldiv
    ___xxtofl->___aldiv
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _read_prec_or_width->___wmul
    _efgtoa->_floorf
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    ___flsub->___fladd
    ___fladd->___flmul
    ___flge->___flmul
    ___fldiv->___fladd
    _LCD_Write_String->_LCD_Write_Char
    _LCD_Write_Char->_LCD_Write_4Bit
    _LCD_Set_Cursor->_LCD_CMD
    _LCD_Init->_LCD_CMD
    _LCD_Clear->_LCD_CMD
    _LCD_CMD->_LCD_Write_4Bit
    _LCD_Write_4Bit->_IO_Expander_Write
    _IO_Expander_Write->_I2C_Master_Write
    _I2C_Master_Write->_I2C_Master_Wait
    _I2C_Master_Stop->_I2C_Master_Wait
    _I2C_Master_Start->_I2C_Master_Wait

Critical Paths under _main in BANK0

    _main->_menu
    _menu->_sprintf
    _termistorin->_logf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   82484
                                             89 BANK0      2     2      0
                           _ADC_Init
                    _I2C_Master_Init
                          _LCD_Clear
                           _LCD_Init
                               _menu
 ---------------------------------------------------------------------------------
 (1) _menu                                                10    10      0   82152
                                             79 BANK0     10    10      0
                           _ADC_Read
                     _LCD_Set_Cursor
                   _LCD_Write_String
                            _sprintf
                        _termistorin
 ---------------------------------------------------------------------------------
 (2) _termistorin                                         20    16      4   42415
                                             76 COMRAM     4     0      4
                                             58 BANK0     16    16      0
                            ___aldiv
                            ___fladd
                            ___fldiv
                            ___flmul
                           ___xxtofl
                               _logf
 ---------------------------------------------------------------------------------
 (3) _logf                                                68    64      4   24906
                                             66 COMRAM    10     6      4
                                              0 BANK0     58    58      0
                            ___aldiv (ARG)
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flsub
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4     550
                                             14 COMRAM    14    10      4
                            ___aldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             14     6      8     604
                                              0 COMRAM    14     6      8
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             24    15      9   38786
                                             57 BANK0     22    13      9
                           _vfprintf
 ---------------------------------------------------------------------------------
 (3) _vfprintf                                             4     1      3   38102
                                             53 BANK0      4     1      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (4) _vfpfcnvrt                                           11     8      3   37605
                                             94 COMRAM     1     1      0
                                             44 BANK0      9     6      3
                             _efgtoa
                              _fputc
                 _read_prec_or_width
 ---------------------------------------------------------------------------------
 (5) _read_prec_or_width                                   5     3      2     852
                                              6 COMRAM     5     3      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (6) ___wmul                                               6     2      4     412
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) _efgtoa                                              53    47      6   34554
                                             86 COMRAM     8     2      6
                                              0 BANK0     44    44      0
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (6) _strcpy                                               6     3      3     463
                                              0 COMRAM     6     3      3
 ---------------------------------------------------------------------------------
 (6) _pad                                                  8     3      5    3399
                                             14 COMRAM     8     3      5
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (7) _fputs                                                6     3      3    1357
                                              8 COMRAM     6     3      3
                              _fputc
 ---------------------------------------------------------------------------------
 (5) _fputc                                                8     5      3    1037
                                              0 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (6) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (6) _memcpy                                              11     5      6     478
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (6) _labs                                                 8     4      4     363
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (6) _floorf                                              20    16      4     669
                                             66 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fpclassifyf                                       14    10      4     375
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4     607
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (4) ___flsub                                              8     0      8    6887
                                             41 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fladd                                             16     8      8    5962
                                             25 COMRAM    16     8      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___flneg                                              4     0      4     155
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (4) ___flmul                                             25    17      8    6653
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (6) ___flge                                              12     4      8     986
                                             25 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fleq                                              12     4      8     770
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (4) ___fldiv                                             25    17      8    3263
                                             41 COMRAM    25    17      8
                            ___fladd (ARG)
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _LCD_Write_String                                     4     2      2     443
                                              5 COMRAM     4     2      2
                     _LCD_Write_Char
 ---------------------------------------------------------------------------------
 (3) _LCD_Write_Char                                       1     1      0     133
                                              4 COMRAM     1     1      0
                     _LCD_Write_4Bit
 ---------------------------------------------------------------------------------
 (2) _LCD_Set_Cursor                                       2     1      1     395
                                              5 COMRAM     2     1      1
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (2) _ADC_Read                                             9     7      2      45
                                              0 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             2     2      0     199
                                              5 COMRAM     2     2      0
                  _IO_Expander_Write
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _LCD_Clear                                            0     0      0     133
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (3) _LCD_CMD                                              1     1      0     133
                                              4 COMRAM     1     1      0
                     _LCD_Write_4Bit
 ---------------------------------------------------------------------------------
 (4) _LCD_Write_4Bit                                       1     1      0      89
                                              3 COMRAM     1     1      0
                  _IO_Expander_Write
 ---------------------------------------------------------------------------------
 (5) _IO_Expander_Write                                    1     1      0      44
                                              2 COMRAM     1     1      0
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (6) _I2C_Master_Write                                     1     1      0      22
                                              1 COMRAM     1     1      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (6) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (6) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (7) _I2C_Master_Wait                                      1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ADC_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC_Init
   _I2C_Master_Init
   _LCD_Clear
     _LCD_CMD
       _LCD_Write_4Bit
         _IO_Expander_Write
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Master_Write
             _I2C_Master_Wait
   _LCD_Init
     _IO_Expander_Write
     _LCD_CMD
   _menu
     _ADC_Read
     _LCD_Set_Cursor
       _LCD_CMD
     _LCD_Write_String
       _LCD_Write_Char
         _LCD_Write_4Bit
     _sprintf
       _vfprintf
         _vfpfcnvrt
           _efgtoa
             ___fladd
               ___flmul (ARG)
             ___fldiv
               ___fladd (ARG)
               ___flmul (ARG)
             ___fleq
             ___flge
               ___flmul (ARG)
             ___flmul
             ___flneg
             ___flsub
               ___fladd
               ___flmul (ARG)
             ___fltol
             ___fpclassifyf
             _floorf
               ___fldiv (ARG)
             _labs
             _memcpy
             _pad
               _fputc
                 _putch
               _fputs
                 _fputc
             _strcpy
           _fputc
           _read_prec_or_width
             ___wmul
     _termistorin
       ___aldiv
       ___fladd
       ___fldiv
       ___flmul
       ___xxtofl
         ___aldiv (ARG)
       _logf
         ___aldiv (ARG)
         ___fladd (ARG)
         ___fldiv (ARG)
         ___flmul (ARG)
         ___flsub (ARG)
         ___xxtofl (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      25        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      70       7       43.8%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     5B      95       5       93.1%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITBIGSFRh          36      0       0      20        0.0%
BITBIGSFRll         32      0       0      23        0.0%
BITBIGSFRlhhl       21      0       0      21        0.0%
BITBIGSFRlhl         A      0       0      22        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     164      24        0.0%
DATA                 0      0     164       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.46 build 20240104201356 
Symbol Table                                                                                   Sat Feb 24 16:07:55 2024

              ___fldiv@aexp 0042                ___fldiv@bexp 0041                ___fldiv@sign 003A  
                        l43 3968                          l52 399C                          l46 389A  
                        l70 3952                          l49 38BE                          l58 3994  
                        l82 38FE                          l67 3942                          l91 391A  
                        l69 3950                          l85 38E0                          l79 3244  
                        l88 3936                          l97 3796                          _GO 7E11  
                        _RS 00D3         ___wmul@multiplicand 0003                         l121 398C  
                       l106 35FE                         l172 34EC                         l181 3176  
                       l166 397C                         l271 2D82                         l175 2AC2  
                       l192 3898                         l169 34C0                         l451 33A8  
                       l462 2F8C                         l720 1A32                         l457 2F46  
                       l721 1A20                         l810 212C                         l466 3808  
                       l722 19E6                         l900 3716                         l813 1FBE  
                       l806 1DC8                         l823 20EE                         l815 2036  
                       l816 2024                         l737 1B4C                         l729 1D02  
                       l489 2E88                         l746 1C1C                         l762 3694  
                       l850 2C76                         l747 1C0A                         l931 3552  
                       l861 2C0E                         l774 24C6                         l942 1226  
                       l854 2BB2                         l927 3504                         l847 2B1A  
                       l776 2326                         l785 236C                         l945 0BC6  
                       l787 23E4                         l779 22EA                         l947 0A0C  
                       l788 23D2                         l885 12C2                         l886 1842  
                       l975 100E                         l991 344E                         l987 3446  
                       l997 26EA                         _PEN 7E2A                         _SEN 7E28  
                       _Lg1 080D                         _Lg2 0809                         _Lg3 0805  
                       _Lg4 0801                         _pad 34EE                         wreg 0FE8  
              ___flmul@aexp 000E                ___flmul@bexp 0013                ___flmul@sign 000D  
              ___flmul@temp 0018                ___flmul@prod 0014             __end_of_LCD_CMD 3938  
       LCD_Write_String@Str 0006              _LCD_Set_Cursor 35AA                ___fltol@exp1 000A  
                      l1050 35A8                        l1019 36D6                        l1036 28FC  
                      l1029 308A                        l1039 2840                        l1056 364E  
                      l1068 32FE                        l1076 3756                        l1085 37D0  
                      l1079 399E                        l4001 1BDE                        l4011 1C38  
                      l4003 1BEC                        l2341 3964                        l4101 222C  
                      l4021 1CA2                        l4013 1C46                        l4005 1C02  
                      l2343 3966                        l4031 1CDC                        l4023 1CC2  
                      l4015 1C80                        l3401 38D8                        l4121 22AE  
                      l4113 2264                        l4105 2240                        l4201 1D30  
                      l4033 1CE2                        l4025 1CC6                        l4009 1C2C  
                      l4017 1C82                        l4041 3718                        l2339 3954  
                      l4131 22F4                        l4123 22B6                        l4115 227E  
                      l4107 2250                        l4211 1D6C                        l4203 1D40  
                      l4035 1CF0                        l4027 1CD4                        l4019 1C92  
                      l4043 3724                        l4051 3890                        l3411 2B40  
                      l3403 2AC6                        l3157 38E4                        l4141 234C  
                      l4133 2312                        l4125 22C6                        l4117 228E  
                      l4109 2250                        l4061 214A                        l4301 208E  
                      l4221 1DA2                        l4213 1D72                        l4205 1D50  
                      l4037 1CF2                        l4029 1CDA                        l4045 3732  
                      l3421 2B9A                        l3405 2AD6                        l2375 396A  
                      l4151 238A                        l4143 2352                        l4135 2314  
                      l4127 22DA                        l4119 229E                        l4063 215A  
                      l4071 2184                        l4055 212E                        l4311 2102  
                      l4303 20A8                        l4223 1DB2                        l4215 1D80  
                      l4207 1D56                        l4047 3736                        l3431 2BFE  
                      l3423 2B9C                        l3415 2B54                        l3407 2AE4  
                      l2377 396C                        l3521 392C                        l4161 23F4  
                      l4153 238E                        l4145 235C                        l4137 2324  
                      l4129 22E8                        l4081 21B0                        l4073 2194  
                      l4065 216A                        l4057 213A                        l4313 2110  
                      l4305 20BC                        l4241 1E34                        l4233 1DFC  
                      l4225 1DB8                        l4217 1D82                        l4209 1D66  
                      l4401 2E28                        l4049 3874                        l3441 2C56  
                      l3433 2C1C                        l3425 2BA8                        l3417 2B5C  
                      l3409 2B2A                        l2475 389A                        l3523 3902  
                      l4171 2456                        l4163 2400                        l4155 239C  
                      l4147 236A                        l4139 2336                        l4083 21C0  
                      l4091 21EA                        l4075 219A                        l4067 217A  
                      l4059 2148                        l4331 332E                        l4315 2112  
                      l4307 20D6                        l4251 1E7E                        l4243 1E4C  
                      l4235 1E08                        l4227 1DD8                        l4219 1D92  
                      l4323 3650                        l4411 2E58                        l3611 2C9A  
                      l3443 2C64                        l3435 2C1E                        l3427 2BE4  
                      l3419 2B68                        l2477 38A8                        l3517 391E  
                      l3525 3908                        l4181 24B4                        l4173 246C  
                      l4165 240E                        l4157 23CA                        l4149 237C  
                      l4093 21FA                        l4085 21D0                        l4077 21A0  
                      l4069 217C                        l4341 33A6                        l4333 333E  
                      l4309 20F2                        l4317 2118                        l4261 1ED4  
                      l4253 1E8E                        l4245 1E58                        l4237 1E12  
                      l4229 1DE8                        l4325 3660                        l4413 2E68  
                      l4501 3630                        l4421 34FC                        l3621 2CD0  
                      l3613 2C9E                        l3605 2C78                        l3445 2C66  
                      l3437 2C22                        l3429 2BF0                        l3519 3924  
                      l3527 3910                        l4183 24BA                        l4175 2486  
                      l4167 2438                        l4095 2210                        l4087 21E0  
                      l4079 21AE                        l4335 336C                        l4351 2EF6  
                      l4319 211C                        l4271 1F78                        l4263 1EF0  
                      l4255 1E9A                        l4247 1E64                        l4239 1E28  
                      l4415 2E78                        l4407 2E3C                        l4431 2F8E  
                      l4503 3634                        l4423 3510                        l4511 0864  
                      l3631 2D12                        l3623 2CE6                        l3615 2CAC  
                      l3607 2C7C                        l3439 2C46                        l3721 31AA  
                      l3713 317A                        l4185 24BC                        l4177 24A2  
                      l4169 243C                        l4097 2220                        l4089 21E2  
                      l4337 337C                        l4329 3300                        l4361 2F84  
                      l4353 2F06                        l4345 2E8A                        l4281 1FCE  
                      l4273 1F86                        l4265 1EFC                        l4257 1EAA  
                      l4249 1E72                        l4193 1D04                        l4409 2E48  
                      l4433 2FAE                        l4425 3520                        l4601 0BFA  
                      l4521 08AE                        l4513 0868                        l4505 0840  
                      l3633 2D30                        l3625 2CEE                        l3641 2D52  
                      l3617 2CBC                        l3609 2C8A                        l2691 399A  
                      l3395 38C2                        l3731 3202                        l3723 31C0  
                      l3715 317E                        l4179 24A6                        l4099 2228  
                      l4339 33A0                        l4363 2F8A                        l4355 2F14  
                      l4347 2EB8                        l4283 1FDC                        l4275 1FA4  
                      l4267 1F18                        l4259 1EC4                        l4195 1D10  
                      l4371 37F8                        l4435 2FEC                        l4443 302C  
                      l4427 3524                        l4419 34EE                        l4611 0C48  
                      l4603 0BFE                        l4531 08FC                        l4523 08BE  
                      l4515 088C                        l4507 0846                        l3643 2D62  
                      l3635 2D40                        l3627 2CFA                        l3619 2CC0  
                      l2693 398E                        l3397 38C8                        l3741 3984  
                      l3733 3208                        l3725 31C6                        l3717 3184  
                      l4357 2F26                        l4349 2EC8                        l4293 2046  
                      l4285 1FE0                        l4277 1FAE                        l4269 1F42  
                      l4197 1D1E                        l3901 1964                        l4381 2DAE  
                      l4445 303E                        l4437 3014                        l4461 3576  
                      l4429 3542                        l4453 3798                        l4701 1132  
                      l4621 0CE0                        l4605 0C10                        l4613 0C50  
                      l4541 0934                        l4533 090E                        l4525 08CA  
                      l4517 0896                        l4509 0856                        l3645 2D72  
                      l3637 2D42                        l3629 2D08                        ?_pad 000F  
                      l2695 3992                        l3399 38D0                        l3735 321E  
                      l3727 31DC                        l3719 319A                        l3671 35BC  
                      l4359 2F34                        l4295 2052                        l4287 1FEE  
                      l4279 1FBC                        l4199 1D20                        l4367 37D2  
                      l3911 1978                        l3903 1968                        l4391 2DFC  
                      l4383 2DD8                        l4375 2D84                        l4439 3020  
                      l4471 2776                        l3831 3270                        l4455 37A0  
                      l4711 1186                        l4703 1136                        l4631 0DC4  
                      l4623 0D38                        l4615 0C58                        l4607 0C1E  
                      l4551 0992                        l4543 093E                        l4535 0912  
                      l4527 08D2                        l4519 089E                        l3639 2D4C  
                      l2689 3996                        l2697 393A                        l3737 322E  
                      l3729 31EC                        l3681 34CE                        l3673 35C8  
                      l4297 2060                        l4289 201C                        l4369 37E8  
                      l3921 19B2                        l3913 197C                        l3905 196C  
                      l3841 1850                        l4385 2DDA                        l4377 2D9A  
                      l4449 3082                        l4473 2784                        l4481 2864  
                      l4465 26EC                        l4457 3554                        l3833 328C  
                      l3825 3246                        l4721 1202                        l4713 11B6  
                      l4705 1154                        l4641 0E5E                        l4633 0DF6  
                      l4625 0D6C                        l4617 0C68                        l4609 0C36  
                      l4553 0996                        l4537 0918                        l4529 08D6  
                      l2699 393E                        l3739 397E                        l3683 34E4  
                      l3675 35D4                        l3667 35AC                        l4299 208A  
                      l3931 1A04                        l3923 19CE                        l3915 1980  
                      l3907 1970                        l3851 1890                        l3843 185E  
                      l4387 2DEA                        l4483 28A0                        l4467 270C  
                      l4459 3562                        l3835 32BE                        l3827 3256  
                      l4723 120A                        l4715 11C4                        l4707 1170  
                      l4651 0F36                        l4643 0E92                        l4635 0E0C  
                      l4619 0C7C                        l4627 0D72                        l4571 0A1C  
                      l4555 099C                        l4539 0920                        l4547 095A  
                      l4731 33D4                        l4803 26C8                        l4811 1248  
                      l3669 35B0                        l3677 35E0                        l4901 377A  
                      l3941 1A50                        l3933 1A12                        l3925 19DE  
                      l3909 1974                        l3917 1984                        l3861 18C2  
                      l3853 1892                        l3845 1860                        l4397 2E14  
                      l4389 2DEE                        l4485 28B4                        l4477 27F4  
                      l4469 2762                        l4493 3600                        l3829 3266  
                      l4717 11DC                        l4709 1178                        l4661 0F60  
                      l4645 0EE8                        l4653 0F3A                        l4637 0E3E  
                      l4629 0D90                        l4581 0B04                        l4573 0A22  
                      l4557 09A4                        l4549 0980                        l4565 09BC  
                      l4733 33DC                        l4741 24C8                        l4821 12AE  
                      l4813 1252                        l3679 3452                        l3951 1A90  
                      l3935 1A14                        l3927 19F4                        l3919 1988  
                      l3871 18EA                        l3863 18C4                        l3847 1870  
                      l3855 189A                        l3839 1844                        l4399 2E1E  
                      l4487 28DC                        l4479 2830                        l4495 3614  
                      l4719 11EC                        l4671 102E                        l4663 0F6C  
                      l4655 0F4A                        l4647 0EEE                        l4639 0E4E  
                      l4583 0B18                        l4591 0B94                        l4575 0A56  
                      l4567 09D6                        l4735 33F8                        l4727 33AA  
                      l4751 2526                        l4743 24EC                        l4831 12EC  
                      l4815 1268                        l4911 2A02                        l4903 28FE  
                      l3961 1ABA                        l3953 1A9C                        l3945 1A64  
                      l3937 1A1E                        l3929 1A00                        l3881 1924  
                      l3873 18FA                        l3865 18CA                        l3857 18AA  
                      l3849 1880                        l4489 28EC                        l4497 3620  
                      l4681 1060                        l4673 103E                        l4665 0FE4  
                      l4657 0F52                        l4649 0F22                        l4593 0BCE  
                      l4585 0B4C                        l4577 0A94                        l4737 3418  
                      l4729 33B2                        l4761 2582                        l4753 252E  
                      l4745 24F4                        l4921 36EE                        l4841 1356  
                      l4833 12F4                        l4825 12D0                        l4817 1276  
                      l4809 1228                        l4913 2AB2                        l4905 2952  
                      l3971 1B2C                        l3955 1AA0                        l3947 1A74  
                      l3939 1A40                        l3963 1AC0                        l3891 1950  
                      l3883 1936                        l3875 190A                        l3867 18D8  
                      l3859 18B0                        l4499 3624                        l4691 1094  
                      l4683 1064                        l4675 1042                        l4667 1004  
                      l4659 0F58                        l4595 0BDE                        l4587 0B54  
                      l4579 0AC6                        l4739 3420                        l4771 25B6  
                      l4755 2542                        l4747 2500                        l4923 36F6  
                      l4851 1436                        l4843 1372                        l4819 129E  
                      l4835 132C                        l4907 2976                        l4931 30A8  
                      l3981 1B86                        l3965 1AE6                        l3973 1B3C  
                      l3957 1AAE                        l3949 1A82                        l3893 1954  
                      l3885 1944                        l3877 190C                        l3869 18DA  
                      l4693 1098                        l4685 106A                        l4677 1048  
                      l4669 1020                        l4597 0BEA                        l4781 2604  
                      l4773 25BE                        l4757 2566                        l4765 2594  
                      l4749 2504                        l4925 3706                        l4917 36D8  
                      l4861 1582                        l4853 148E                        l4837 1342  
                      l4909 29AA                        l4941 3146                        l4933 30C4  
                      l3991 1BB6                        l3983 1B90                        l3975 1B62  
                      l3967 1B1A                        l3959 1AB0                        l3895 1958  
                      l3887 1948                        l3879 1914                        l4695 109E  
                      l4679 1050                        l4687 1070                        l4599 0BF2  
                      l4791 2678                        l4783 262C                        l4767 259E  
                      l4759 256E                        l4919 36E6                        l4871 16AA  
                      l4863 15DA                        l4855 14C2                        l4847 1386  
                      l4943 315C                        l4935 30E0                        l3993 1BBA  
                      l3985 1B9E                        l3977 1B72                        l3969 1B1C  
                      l3897 195C                        l3889 194C                        l4697 10F6  
                      l4689 1082                        l4769 25B0                        l4777 25C6  
                      l4881 17EA                        l4873 16D2                        l4865 160E  
                      l4857 14F6                        l4849 1402                        l4937 3108  
                      l4929 308C                        l4961 3826                        l3995 1BCA  
                      l3987 1BA0                        l3899 1960                        l4699 112A  
                      l4787 2654                        l4779 25E4                        l4891 36CC  
                      l4875 172A                        l4867 1642                        l4859 154E  
                      l4939 313C                        l4963 382A                        l3989 1BAE  
                      l3997 1BCC                        l4797 26A2                        l4789 266A  
                      l4885 3696                        l4877 1782                        l4869 1676  
                      l4965 3830                        l4957 380A                        l4895 3758  
                      l3999 1BDA                        l4799 26BA                        l4887 369E  
                      l4879 17B6                        l4967 3834                        l4959 3822  
                      l4897 3764                        l4889 36B0                        l4899 3776  
                      _ADON 7E10                        STR_1 0828                        STR_2 0819  
                      STR_3 0836                        STR_6 083A                        u2030 38A8  
                      u2031 38A4                        u2040 38BE                        u2041 38BA  
                      u4000 32BE                        u4001 32BA                        u4010 185E  
                      u4011 185A                        u4100 19B2                        u4020 1870  
                      u4101 19AE                        u4021 186C                        u4110 19CA  
                      u4030 1880                        u4111 19C4                        u4031 187C  
                      u4200 1AAE                        u4120 19CC                        u4040 18C2  
                      u5000 3542                        u4201 1AAA                        u4041 18BE  
                      u5001 353E                        u2450 3950                        u4210 1AE6  
                      u4130 19F4                        u4050 18D8                        u5010 2FCE  
                      u2451 394C                        u4211 1AE2                        u4131 19F0  
                      u4051 18D4                        u4300 1C02                        u4220 1B2C  
                      u4140 1A12                        u4060 18EA                        u5020 2FEC  
                      u5100 2734                        u4301 1BFE                        u4221 1B28  
                      u4141 1A0E                        u4061 18E6                        u5021 2FE8  
                      u4310 1C18                        u4230 1B62                        u4150 1A32  
                      u4070 18FA                        u5030 3014                        u5110 2762  
                      u4311 1C14                        u4231 1B5E                        u4151 1A2E  
                      u4071 18F6                        u5031 3010                        u5015 2FC4  
                      u5111 275E                        u4320 1C2C                        u4240 1B72  
                      u4160 1A40                        u4080 1936                        u5040 303E  
                      u5120 2784                        u5200 364E                        u4400 3756  
                      u3600 2AD6                        u4321 1C28                        u4241 1B6E  
                      u4161 1A3C                        u4081 1932                        u5041 303A  
                      u5121 2780                        u5105 272A                        u5201 364A  
                      u4401 3752                        u3601 2AD2                        u4410 2148  
                      u4330 1C46                        u4250 1B9E                        u4170 1A50  
                      u4090 1944                        u5210 0864                        u3610 2AE4  
                      u4411 2144                        u4331 1C42                        u4251 1B9A  
                      u4171 1A4C                        u4091 1940                        u5211 0860  
                      u3611 2AE0                        u4500 22E8                        u4420 215A  
                      u4340 1C80                        u4260 1BAE                        u4180 1A82  
                      u5060 3078                        u5140 27F0                        u5300 0AC6  
                      u5220 08AE                        u3620 2B40                        u4501 22E4  
                      u4421 2156                        u4341 1C7C                        u4261 1BAA  
                      u4181 1A7E                        u5061 3072                        u5141 27EC  
                      u5301 0AC2                        u5221 08AA                        u3621 2B3C  
                      u4510 2312                        u4430 216A                        u4350 1C92  
                      u4270 1BCA                        u4190 1A90                        u5070 307A  
                      u5150 2814                        u5310 0B04                        u5230 08BE  
                      u3630 2B96                        u4511 230E                        u4431 2166  
                      u4351 1C8E                        u4271 1BC6                        u4191 1A8C  
                      u5055 3050                        u5135 2798                        u5311 0B00  
                      u5231 08BA                        u3631 2B92                        u4600 240E  
                      u4520 2336                        u4440 21AE                        u4360 1CA2  
                      u4280 1BDA                        u5160 2830                        u5136 27A2  
                      u5080 37D0                        u5400 0E3E                        u5320 0B90  
                      u5240 08FC                        u3640 2BE0                        u4601 240A  
                      u4521 2332                        u4441 21AA                        u4361 1C9E  
                      u4281 1BD6                        u5161 282C                        u5137 27B2  
                      u5081 37CC                        u5401 0E3A                        u5321 0B8C  
                      u5241 08F8                        u3641 2BDC                        u4610 2456  
                      u4530 234C                        u4450 21C0                        u4370 1CC2  
                      u4290 1BEC                        u5170 2884                        u5090 3562  
                      u5410 0E4E                        u5330 0BC6                        u5250 090E  
                      u3810 2C8A                        u3650 2BFE                        u4611 2452  
                      u4531 2348                        u4451 21BC                        u4371 1CBE  
                      u4291 1BE8                        u5155 280A                        u5091 355E  
                      u5411 0E4A                        u5331 0BC2                        u5251 090A  
                      u3811 2C86                        u3651 2BFA                        u4620 2486  
                      u4540 236A                        u4460 21D0                        u4700 1DD8  
                      u4380 1CD4                        u5180 28A0                        u5500 11D6  
                      u5420 0EE8                        u5340 0BDE                        u5260 0980  
                      u3820 2CAC                        u3660 2C0E                        u4621 2482  
                      u4541 2366                        u4461 21CC                        u4701 1DD4  
                      u4381 1CD0                        u5181 289C                        u5501 11D0  
                      u5421 0EE4                        u5341 0BDA                        u5261 097C  
                      u3821 2CA8                        u3661 2C0A                        u4630 24B4  
                      u4550 238A                        u4470 2210                        u4710 1DE8  
                      u4390 1CF0                        u5190 28DC                        u5510 11D8  
                      u5430 0F36                        u5350 0C10                        u5270 0992  
                      u3830 2CE6                        u3670 2C1C                        u4631 24B0  
                      u4551 2386                        u4471 220C                        u4711 1DE4  
                      u4391 1CEC                        u5191 28D8                        u5175 287A  
                      u5431 0F32                        u5351 0C0C                        u5271 098E  
                      u3831 2CE2                        u3671 2C18                        u3920 34A4  
                      u4560 239C                        u4480 2250                        u4800 20A8  
                      u4720 1F62                        u4640 1D1E                        u5520 11EC  
                      u5440 0FE4                        u5360 0C1E                        u5280 0A08  
                      u3840 2D08                        u3680 2C56                        u5600 1276  
                      u3921 349C                        u4561 2398                        u4481 224C  
                      u4801 20A4                        u4641 1D1A                        u5521 11E8  
                      u5441 0FE0                        u5361 0C1A                        u5281 0A04  
                      u3841 2D04                        u3681 2C52                        u5601 1272  
                      u3914 348C                        u4570 23CA                        u4490 22C6  
                      u4810 20D6                        u4730 1FBC                        u4650 1D30  
                      u5450 1020                        u5370 0C48                        u5290 0A94  
                      u5530 33D4                        u3850 2D30                        u3690 2C64  
                      u5610 129E                        u3915 3488                        u4571 23C6  
                      u4491 22C2                        u4811 20D2                        u4731 1FB8  
                      u4651 1D2C                        u5451 101C                        u5371 0C44  
                      u5291 0A90                        u5531 33D0                        u3851 2D2C  
                      u3691 2C60                        u5611 129A                        u3908 347E  
                      u4580 23E0                        u4900 2F84                        u4820 2110  
                      u4740 1FDC                        u4660 1D40                        u5460 102E  
                      u5380 0D90                        u5540 3446                        u3860 2D62  
                      u5620 12D0                        _RCEN 7E2B                        u4581 23DC  
                      u4901 2F80                        u4821 210C                        u4741 1FD8  
                      u4725 1F58                        u4661 1D3C                        u5461 102A  
                      u5381 0D8C                        u5541 3442                        u3861 2D5E  
                      u5621 12CC                        u3950 34CE                        u4590 23F4  
                      u4830 332E                        u4750 1FEE                        u4670 1D80  
                      u4910 37E8                        u5470 1082                        u5390 0DF6  
                      u5550 24EC                        u5630 1342                        u3951 34CA  
                      u4591 23F0                        u4831 332A                        u4751 1FEA  
                      u4671 1D7C                        u4911 37E4                        u5471 107E  
                      u5391 0DF2                        u5551 24E8                        u5631 133E  
                      u3944 34B4                        u4840 336C                        u4760 201C  
                      u4680 1D92                        u4920 2D9A                        u5480 1154  
                      u5560 2526                        u5640 1372                        u3945 34B0  
                      u4841 3368                        u4761 2018                        u4681 1D8E  
                      u4921 2D96                        u5481 1150                        u5561 2522  
                      u5641 136E                        u3938 34A6                        u3890 347C  
                      u4850 33A0                        u4770 2032                        u4690 1DA2  
                      u4930 2DCE                        u3970 3256                        u5490 1170  
                      u5570 2566                        u5650 13B8                        u5707 318A  
                      u3891 3474                        u4851 339C                        u4771 202E  
                      u4691 1D9E                        u3971 3252                        u5491 116C  
                      u5571 2562                        u4860 2EB8                        u4780 2046  
                      u4940 2DFC                        u3980 3266                        u5580 2600  
                      u5660 36CC                        u5717 31A0                        u4861 2EB4  
                      u4781 2042                        u4941 2DF8                        u3981 3262  
                      u5581 25FC                        u5661 36C8                        u5670 3796  
                      u4870 2EF6                        u4790 2060                        u4950 2E10  
                      u3990 328C                        u5590 1268                        u5807 38DA  
                      u5727 31B6                        u5671 3792                        u4871 2EF2  
                      u4791 205C                        u4951 2E0C                        u4935 2DC4  
                      u3991 3288                        u5655 13AE                        u5591 1264  
                      u4880 2F14                        u4960 2E38                        u5737 31CC  
                      u4881 2F10                        u4961 2E34                        u4890 2F34  
                      u4970 2E58                        u5747 31E2                        u4891 2F30  
                      u4971 2E54                        u4980 2E68                        u5757 31F8  
                      u4981 2E64                        u4990 34FC                        u5767 320E  
                      u4991 34F8                        u5687 3816                        u5777 3224  
                      u5697 3168                        u5787 323A                        u5797 3986  
                      _RSEN 7E29           ?_LCD_Write_String 0006                        _dbuf 0100  
                      _labs 3554                        _main 380A                        _menu 308C  
                      _logf 1228                        _prec 00C9                        pad@i 0015  
                      pad@p 0012                        fsr1h 0FE2                        fsr2h 0FDA  
                      indf2 0FDF                        fsr1l 0FE1                        fsr2l 0FD9  
          __end_of_ADC_Init 397E            __end_of_ADC_Read 34EE               ___fpclassifyf 2F8E  
                      prodh 0FF4                        prodl 0FF3                        start 0000  
        ??_LCD_Write_String 0008             ___fldiv@new_exp 003B                ___param_bank 0000  
      LCD_Write_4Bit@Nibble 0004                       ??_pad 0014            __end_of_LCD_Init 3246  
          ?_I2C_Master_Init 0001            ?_I2C_Master_Wait 0001            ?_I2C_Master_Stop 0001  
             ___fltol@sign1 0009             __end_of___aldiv 2D84                       ?_labs 0001  
           __end_of___fladd 1D04                       ?_main 0001                       _ACKEN 7E2C  
                     _ACKDT 7E2D                       ?_menu 0001                       ?_logf 0043  
           __end_of___fldiv 24C8             __end_of___flneg 380A             __end_of___flmul 212E  
           __end_of___flsub 3696             __end_of___fltol 2E8A                vfpfcnvrt@fmt 008D  
                     _TRISA 0F92                       _SSPIF 7CF3      __end_of_LCD_Set_Cursor 3600  
                     _flags 00D1         read_prec_or_width@c 0009                       _errno 00CB  
       read_prec_or_width@n 000A                       _fputc 3246                       _fputs 3718  
                     labs@a 0001                       pad@fp 000F                       _width 00C7  
                     _putch 399E                       logf@R 0060                       logf@k 007C  
                     logf@s 0086                       logf@w 008E                       logf@x 0043  
                     logf@z 008A                       tablat 0FF5                       status 0FD8  
           __end_of_sprintf 3718              ?___fpclassifyf 0001              _LCD_Write_4Bit 38C0  
            _LCD_Write_Char 3900             __initialization 3840                __end_of_labs 35AA  
              __end_of_main 3840                __end_of_menu 3178                __end_of_logf 1844  
         _IO_Expander_Write 38E2          ?_IO_Expander_Write 0001                      ??_labs 0005  
                    ??_main 00B9                      ??_menu 00AF                      ??_logf 0047  
         __end_of_LCD_Clear 398E               __activetblptr 0002                   ??_LCD_CMD 0005  
__end_of_read_prec_or_width 3450           ?_I2C_Master_Start 0001           ?_I2C_Master_Write 0001  
       ??_IO_Expander_Write 0003             ?_LCD_Set_Cursor 0006          ??_I2C_Master_Start 0002  
                    _ADCON0 0FC2                      _ADCON1 0FC1          ??_I2C_Master_Write 0002  
                    _ADCON2 0FC0                      _AN0RES 00CF                      _AN1RES 00CD  
                    ?_fputc 0001                      ?_fputs 0009                      _ADRESH 0FC4  
                    _ADRESL 0FC3                      ?_putch 0001                      _SSPADD 0FC8  
                    _SSPBUF 0FC9      __end_of_LCD_Write_4Bit 38E2            __end_of___xxtofl 2C78  
    __end_of_LCD_Write_Char 391C                 menu@tempout 00B5   __end_of_IO_Expander_Write 3900  
              vfprintf@cfmt 0098                      ___flge 2E8A                      ___fleq 3300  
                 ??___aldiv 0009                   ??___fladd 0022                      ___wmul 3874  
                    _ln2_hi 0815                   ??___fldiv 0032                      _ln2_lo 0811  
                 ??___flneg 0005                   ??___flmul 0009                   ??___flsub 0032  
                 ??___fltol 0005                      _efgtoa 0840             ADC_Read@channel 0009  
                _TempoutSTR 0150                      _floorf 26EC                      _memcpy 3600  
      read_prec_or_width@ap 0008             ADC_Read@digital 0007                      clear_0 3858  
                    clear_1 3864                      isa$std 0001                      pad@buf 0010  
                    _strcpy 3798                      logf@t1 0064                      logf@t2 0068  
                    logf@dk 0082                      fputc@c 0001                      logf@ux 0096  
                    fputs@c 000C                      fputs@i 000D                      fputs@s 0009  
           ___fpclassifyf@e 0009                   ?_ADC_Init 0001             ___fpclassifyf@u 000B  
                 ?_ADC_Read 0001             ___fpclassifyf@x 0001                __mediumconst 0000  
                    tblptrh 0FF7                      tblptrl 0FF6                      tblptru 0FF8  
                    putch@c 0001            __end_of_vfprintf 36D8                   ??_sprintf 0060  
              ?_termistorin 004D                  ___flge@ff1 001A                  ___flge@ff2 001E  
           ??___fpclassifyf 0005                ___xxtofl@arg 0019                ___xxtofl@exp 0018  
              ___xxtofl@val 000F                  ___fleq@ff1 0001                  ___fleq@ff2 0005  
                __accesstop 0060     __end_of__initialization 386A                   ?_LCD_Init 0001  
                ___flneg@f1 0001             ?_LCD_Write_4Bit 0001               ___rparam_used 0001  
                ___fltol@f1 0001             ?_LCD_Write_Char 0001              __pcstackCOMRAM 0001  
              __pidataBANK0 39A0               __end_of_fputc 3300               __end_of_fputs 3758  
             __end_of_putch 39A0                  ??_ADC_Init 0001                  ??_ADC_Read 0003  
                   ??_fputc 0004                     ??_fputs 000C                     ??_putch 0001  
                __pbssBANK0 00BB                  __pbssBANK1 0100            _termistorin$1210 009E  
          _termistorin$1211 00A2            _termistorin$1209 009A                  ??_LCD_Init 0006  
                _efgtoa$861 0066                     ?___flge 001A                     ?___fleq 0001  
                   ?___wmul 0001                     ?_efgtoa 0057                     ?_floorf 0043  
                   ?_memcpy 0001                     _ACKSTAT 7E2E                     ?_strcpy 0001  
                   _LCD_CMD 391C                   ?___xxtofl 000F                     _SSPCON1 0FC6  
                   _SSPCON2 0FC5                     _SSPSTAT 0FC7                     _i2c_add 00D2  
                   __Hparam 0000                     __Lparam 0000                     ___aldiv 2C78  
                   ___fladd 1844                     ___fldiv 212E                     ___flneg 37D2  
                   ___flmul 1D04                     ___flsub 3650                     ___fltol 2D84  
                 ?_vfprintf 0095                __psmallconst 0800                     __pcinit 3840  
                   __ramtop 0800            ??_LCD_Set_Cursor 0007                     __ptext0 380A  
                   __ptext1 308C                     __ptext2 28FE                     __ptext3 1228  
                   __ptext4 2AC4                     __ptext5 2C78                     __ptext6 36D8  
                   __ptext7 3696                     __ptext8 24C8                     __ptext9 33AA  
     read_prec_or_width@fmt 0007                  ??___xxtofl 0013            ___aldiv@dividend 0001  
                   efgtoa@c 005C                     efgtoa@d 006B                     efgtoa@e 006F  
                   efgtoa@f 0058                     efgtoa@g 0082                     efgtoa@h 0079  
                   efgtoa@i 0077                     efgtoa@l 007D                     efgtoa@m 006D  
                   efgtoa@n 0086                     efgtoa@p 0062                     efgtoa@t 0064  
                   efgtoa@u 0088                     efgtoa@w 0071                   _LCD_Clear 397E  
                   _sprintf 36D8        end_of_initialization 386A                     floorf@e 0051  
                   floorf@m 004D                     floorf@u 0053                     floorf@x 0043  
                   memcpy@d 0008                     memcpy@n 0005                     memcpy@s 000A  
                   fputc@fp 0003               __Lmediumconst 0000                     fputs@fp 000B  
        _read_prec_or_width 33AA           __end_of_vfpfcnvrt 26EC                  efgtoa@mode 0069  
                efgtoa@sign 0081            ___aldiv@quotient 000B                     postdec2 0FDD  
       ?_read_prec_or_width 0007                     postinc0 0FEE                     postinc1 0FE6  
                   postinc2 0FDE            vfpfcnvrt@convarg 008F                  ??_vfprintf 0060  
                   strcpy@d 0005                  LCD_CMD@CMD 0005                 ___fladd@grs 0029  
             ___xxtofl@sign 0017                   _TRISBbits 0F93                  ?_LCD_Clear 0001  
      ??_read_prec_or_width 0009                 ___fldiv@grs 003D                 ___fldiv@rem 0036  
          ??_LCD_Write_4Bit 0004           LCD_Write_String@i 0008            ??_LCD_Write_Char 0005  
               ___flmul@grs 000F              __end_of___flge 2F8E              __end_of___fleq 33AA  
               vfpfcnvrt@ap 008E                 vfpfcnvrt@cp 0094                 vfpfcnvrt@fp 008C  
            __end_of___wmul 389A              __end_of_ln2_hi 0819              __end_of_ln2_lo 0815  
          _LCD_Write_String 3758              __end_of_efgtoa 1228              __end_of_floorf 28FE  
            __end_of_memcpy 3650                  floorf@F521 00BB              __end_of_strcpy 37D2  
       start_initialization 3840                 __end_of_Lg1 0811                 __end_of_Lg2 080D  
               __end_of_Lg3 0809                 __end_of_Lg4 0805                 __end_of_pad 3554  
         ??_I2C_Master_Init 0001           ??_I2C_Master_Wait 0001           ??_I2C_Master_Stop 0002  
     __end_of___fpclassifyf 308C                  menu@tempin 00B1                 vfprintf@fmt 0096  
                 _TempinSTR 00D4                    ??___flge 0022                    ??___fleq 0009  
                  ??___wmul 0005                    ??_efgtoa 005D                 __pdataBANK0 00F4  
                  ??_floorf 0047                    ??_memcpy 0007                    ??_strcpy 0004  
                 ___fladd@a 001E                   ___fladd@b 001A                    ?_LCD_CMD 0001  
                 ___fldiv@a 002E                   ___fldiv@b 002A           termistorin@AN0RES 004D  
                 ___flmul@a 0005                   ___flmul@b 0001                   ___flsub@a 002E  
                 ___flsub@b 002A               __pcstackBANK0 0060                 ??_LCD_Clear 0006  
          _I2C_Master_Start 3996            _I2C_Master_Write 3938       IO_Expander_Write@Data 0003  
                  ?___aldiv 0001           termistorin@tempin 00A6                    ?___fladd 001A  
                  ?___fldiv 002A                    ?___flneg 0001                    ?___flmul 0001  
                  ?___flsub 002A                    ?___fltol 0001                   _logf$1215 0092  
                 _logf$1216 006C                   _logf$1217 0070                   _logf$1218 0074  
                 _logf$1219 0078        I2C_Master_Write@data 0002                 __smallconst 0800  
                  _ADC_Init 396A                    _ADC_Read 3450                    ?_sprintf 0099  
           ___aldiv@divisor 0005             ___aldiv@counter 0009                    _LCD_Init 3178  
            ___wmul@product 0005                   _vfpfcnvrt 24C8                  _ADCON0bits 0FC2  
         ___wmul@multiplier 0001                  vfpfcnvrt@c 0093               ??_termistorin 0051  
  __end_of_LCD_Write_String 3798                    __Hrparam 0000                   memcpy@tmp 0007  
                vfprintf@ap 0097                    __Lrparam 0000                  vfprintf@fp 0095  
                ?_vfpfcnvrt 008C          ___fpclassifyf@F465 00BF                  sprintf@fmt 009B  
           _I2C_Master_Init 3954                    ___xxtofl 2AC4             _I2C_Master_Wait 389A  
           _I2C_Master_Stop 398E                    __ptext10 3874                    __ptext11 0840  
                  __ptext20 2F8E                    __ptext12 3798                    __ptext21 2D84  
                  __ptext13 34EE                    __ptext30 3900                    __ptext22 3650  
                  __ptext14 3718                    __ptext31 35AA                    __ptext23 1844  
                  __ptext15 3246                    __ptext40 3996                    __ptext32 3450  
                  __ptext24 37D2                    __ptext16 399E                    __ptext41 389A  
                  __ptext33 3178                    __ptext25 1D04                    __ptext17 3600  
                  __ptext42 3954                    __ptext34 397E                    __ptext26 2E8A  
                  __ptext18 3554                    __ptext43 396A                    __ptext35 391C  
                  __ptext27 3300                    __ptext19 26EC                    __ptext36 38C0  
                  __ptext28 212E                    __ptext37 38E2                    __ptext29 3758  
                  __ptext38 3938                    __ptext39 398E                  strcpy@dest 0001  
           _BackLight_State 00F4         __end_of_termistorin 2AC4                    efgtoa@fp 0057  
                  efgtoa@ne 0060                    efgtoa@pp 0068                    efgtoa@ou 0073  
                  isa$xinst 0000                    _vfprintf 3696                    logf@F472 00C3  
  __end_of_I2C_Master_Start 399E    __end_of_I2C_Master_Write 3954                    memcpy@d1 0001  
                  memcpy@s1 0003                    logf@hfsq 007E          LCD_Write_Char@Data 0005  
                 sprintf@ap 00A2                   strcpy@src 0003                 efgtoa@nmode 006A  
   __end_of_I2C_Master_Init 396A     __end_of_I2C_Master_Wait 38C0     __end_of_I2C_Master_Stop 3996  
               ??_vfpfcnvrt 005F             LCD_Init@I2C_Add 0007                    sprintf@f 00A3  
                  sprintf@s 0099                ___aldiv@sign 000A           LCD_Set_Cursor@COL 0006  
         LCD_Set_Cursor@ROW 0007               ___fladd@signs 0026                 _termistorin 28FE  
              ___fladd@aexp 0027                ___fladd@bexp 0028  
